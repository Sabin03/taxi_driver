{
    "sourceFile": "android/app/build.gradle",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 82,
            "patches": [
                {
                    "date": 1720341678639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720347529167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n+    \n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n"
                },
                {
                    "date": 1720347558408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    \n+    id \"com.google.gms.google-services\"\n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n"
                },
                {
                    "date": 1720419795028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n+    id \"com.google.gms.google-services:3.0.0\"\n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720419845279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services:3.0.0\"\n+    id \"com.google.gms.google-services\"\n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720420141507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,5 +64,7 @@\n \n flutter {\n     source = \"../..\"\n }\n-dependencies {}\n\\ No newline at end of file\n+dependencies {\n+    classpath 'com.google.gms:google-services:3.1.1'\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720420260382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = flutter.compileSdkVersion\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 21\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+    classpath 'com.google.gms:google-services:3.1.1'\n+    classpath'com.google.gms:google-services:4.3.13'\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720420572269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,77 +65,5 @@\n flutter {\n     source = \"../..\"\n }\n dependencies {\n-    classpath 'com.google.gms:google-services:3.1.1'\n-    classpath'com.google.gms:google-services:4.3.13'\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = flutter.compileSdkVersion\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-    classpath 'com.google.gms:google-services:3.1.1'\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720420614782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = flutter.compileSdkVersion\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720431515104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720519100317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720519107266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,215 +44,8 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = flutter.compileSdkVersion\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = flutter.compileSdkVersion\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n         minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n"
                },
                {
                    "date": 1720519167469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720519701120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services.json\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720519749735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services.\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720520059985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services.\"\n+    id 'com.google.gms.google-services.'\n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n@@ -65,143 +65,5 @@\n flutter {\n     source = \"../..\"\n }\n dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services.json\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720520087001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id 'com.google.gms.google-services.'\n+   \n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n"
                },
                {
                    "date": 1720520260523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services.\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720520375245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services.\"\n+    id \"com.google.gms.google-services\"\n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n@@ -65,74 +65,5 @@\n flutter {\n     source = \"../..\"\n }\n dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-   \n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720522392507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n     id \"com.android.application\"\n     id \"kotlin-android\"\n     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n+    \n }\n \n def localProperties = new Properties()\n def localPropertiesFile = rootProject.file(\"local.properties\")\n"
                },
                {
                    "date": 1720522900709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,69 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720599873792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,72 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+    classpath 'com.android.tools.build:gradle:4.1.0'\n+    classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720599921531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,70 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720600498679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,216 +65,7 @@\n flutter {\n     source = \"../..\"\n }\n dependencies {\n-    \n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-    classpath 'com.android.tools.build:gradle:4.1.0'\n     classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n-\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n     \n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720603450921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,7 +65,7 @@\n flutter {\n     source = \"../..\"\n }\n dependencies {\n-    classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n+   \n     \n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720614454672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 21\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+dependencies {\n+   \n+    \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720614598466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720615235931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,79 +64,19 @@\n \n flutter {\n     source = \"../..\"\n }\n-dependencies {\n+\n    \n-    \n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n \n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n \n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n \n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n \n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n\\ No newline at end of file\n }\n-\n-flutter {\n-    source = \"../..\"\n-}\n-dependencies {\n-   \n-    \n-}\n"
                },
                {
                    "date": 1720615729373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n@@ -78,5 +78,5 @@\n \n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1720616029024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720619283717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,18 +28,9 @@\n     namespace = \"com.example.taxi_driver\"\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n+    \n \n     defaultConfig {\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n"
                },
                {
                    "date": 1720619429258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720619957716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 21\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720620063441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n     }\n     kotlinOptions {\n-        jvmTarget = '1.8' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n@@ -44,90 +44,8 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n         minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n@@ -161,159 +79,4 @@\n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n }\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    \n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n"
                },
                {
                    "date": 1720620199217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720622851791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n@@ -79,86 +79,4 @@\n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n }\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n-    }\n-    kotlinOptions {\n-        jvmTarget = '17' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n"
                },
                {
                    "date": 1720623112993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720623180618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         sourceCompatibility = JavaVersion.VERSION_1_8\n         targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n-        jvmTarget = '1.8' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720623223380,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n     }\n     kotlinOptions {\n         jvmTarget = '17' \n     }\n"
                },
                {
                    "date": 1720623320055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n-        jvmTarget = '17' \n+        jvmTarget = '1.8' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720623817374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 21\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720623939059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,90 +44,8 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n         minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n"
                },
                {
                    "date": 1720625383892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 21\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720625408797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720625852436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_11\n+        targetCompatibility = JavaVersion.VERSION_11\n+    }\n+    kotlinOptions {\n+        jvmTarget = '11' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720626338031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,90 +29,8 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_11\n-        targetCompatibility = JavaVersion.VERSION_11\n-    }\n-    kotlinOptions {\n-        jvmTarget = '11' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n         sourceCompatibility = JavaVersion.VERSION_1_8\n         targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n@@ -161,86 +79,4 @@\n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n }\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n"
                },
                {
                    "date": 1720626379664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 19\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720626468097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,90 +44,8 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 19\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n         minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n"
                },
                {
                    "date": 1720627612795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n     }\n     kotlinOptions {\n-        jvmTarget = '1.8' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720628064968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n+        sourceCompatibility = JavaVersion.VERSION_18\n+        targetCompatibility = JavaVersion.VERSION_18\n     }\n     kotlinOptions {\n-        jvmTarget = '17' \n+        jvmTarget = '18' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720628103245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_18\n-        targetCompatibility = JavaVersion.VERSION_18\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n     }\n     kotlinOptions {\n-        jvmTarget = '18' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n@@ -67,16 +67,6 @@\n }\n \n    \n     dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n+  \n }\n"
                },
                {
                    "date": 1720628217754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,6 +67,16 @@\n }\n \n    \n     dependencies {\n-  \n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n }\n"
                },
                {
                    "date": 1720633093048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+}\n"
                },
                {
                    "date": 1720634824293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,87 +78,9 @@\n \n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n \n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n+   classpath 'com.android.tools.build:gradle:7.2.0'\n+        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n+        classpath 'com.google.gms:google-services:4.4.2'\n }\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n-    }\n-    kotlinOptions {\n-        jvmTarget = '17' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-}\n"
                },
                {
                    "date": 1720634923152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,6 @@\n \n   // Add the dependencies for any other desired Firebase products\n   // https://firebase.google.com/docs/android/setup#available-libraries\n \n-   classpath 'com.android.tools.build:gradle:7.2.0'\n-        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n-        classpath 'com.google.gms:google-services:4.4.2'\n+  \n }\n"
                },
                {
                    "date": 1720635019370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n     }\n     kotlinOptions {\n-        jvmTarget = '1.8' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720635064986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+\n+  \n+}\n"
                },
                {
                    "date": 1720635145365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n plugins {\n     id \"com.android.application\"\n     id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n     id \"com.google.gms.google-services\"\n }\n \n"
                },
                {
                    "date": 1720635186564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n plugins {\n     id \"com.android.application\"\n     id \"kotlin-android\"\n-    id The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n     id \"dev.flutter.flutter-gradle-plugin\"\n     id \"com.google.gms.google-services\"\n }\n \n@@ -81,88 +81,4 @@\n   // https://firebase.google.com/docs/android/setup#available-libraries\n \n   \n }\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n-    }\n-    kotlinOptions {\n-        jvmTarget = '17' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-\n-  \n-}\n"
                },
                {
                    "date": 1720635391428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_11\n+        targetCompatibility = JavaVersion.VERSION_11\n+    }\n+    kotlinOptions {\n+        jvmTarget = '11' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+\n+  \n+}\n"
                },
                {
                    "date": 1720635462146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_11\n-        targetCompatibility = JavaVersion.VERSION_11\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n-        jvmTarget = '11' \n+        jvmTarget = '17' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720635610093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,13 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n+        sourceCompatibility = JavaVersion.VERSION_9\n+        targetCompatibility = JavaVersion.VERSION_9\n     }\n     kotlinOptions {\n-        jvmTarget = '17' \n+        jvmTarget = '1.8' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720635653312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_9\n-        targetCompatibility = JavaVersion.VERSION_9\n+        sourceCompatibility = JavaVersion.VERSION_10\n+        targetCompatibility = JavaVersion.VERSION_10\n     }\n     kotlinOptions {\n         jvmTarget = '1.8' \n     }\n"
                },
                {
                    "date": 1720635703072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,10 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_10\n-        targetCompatibility = JavaVersion.VERSION_10\n+        sourceCompatibility = JavaVersion.VERSION_21\n+        targetCompatibility = JavaVersion.VERSION_21\n     }\n     kotlinOptions {\n         jvmTarget = '1.8' \n     }\n"
                },
                {
                    "date": 1720635726139,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_22\n+        targetCompatibility = JavaVersion.VERSION_22\n+    }\n+    kotlinOptions {\n+        jvmTarget = '1.8' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+\n+  \n+}\n"
                },
                {
                    "date": 1720635746601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         sourceCompatibility = JavaVersion.VERSION_22\n         targetCompatibility = JavaVersion.VERSION_22\n     }\n     kotlinOptions {\n-        jvmTarget = '1.8' \n+        jvmTarget = '22' \n     }\n     sourceSets {\n         main.java.srcDirs += 'src/main/kotlin'\n     }\n"
                },
                {
                    "date": 1720635775770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,176 +29,8 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_22\n-        targetCompatibility = JavaVersion.VERSION_22\n-    }\n-    kotlinOptions {\n-        jvmTarget = '22' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-\n-  \n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_21\n-        targetCompatibility = JavaVersion.VERSION_21\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-\n-  \n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n         sourceCompatibility = JavaVersion.VERSION_1_8\n         targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n"
                },
                {
                    "date": 1720636221567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+plugins {\n+    id \"com.android.application\"\n+    id \"kotlin-android\"\n+    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n+    id \"dev.flutter.flutter-gradle-plugin\"\n+    id \"com.google.gms.google-services\"\n+}\n+\n+def localProperties = new Properties()\n+def localPropertiesFile = rootProject.file(\"local.properties\")\n+if (localPropertiesFile.exists()) {\n+    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n+        localProperties.load(reader)\n+    }\n+}\n+\n+def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n+if (flutterVersionCode == null) {\n+    flutterVersionCode = \"1\"\n+}\n+\n+def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n+if (flutterVersionName == null) {\n+    flutterVersionName = \"1.0\"\n+}\n+\n+android {\n+    namespace = \"com.example.taxi_driver\"\n+    compileSdk = 34\n+    ndkVersion = flutter.ndkVersion\n+\n+    compileOptions {\n+        sourceCompatibility = JavaVersion.VERSION_17\n+        targetCompatibility = JavaVersion.VERSION_17\n+    }\n+    kotlinOptions {\n+        jvmTarget = '17' \n+    }\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n+    }\n+\n+    defaultConfig {\n+        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n+        applicationId = \"com.example.taxi_driver\"\n+        // You can update the following values to match your application needs.\n+        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n+        minSdk = 23\n+        targetSdk = flutter.targetSdkVersion\n+        versionCode = flutterVersionCode.toInteger()\n+        versionName = flutterVersionName\n+        multiDexEnabled true\n+        \n+    }\n+\n+    buildTypes {\n+        release {\n+            // TODO: Add your own signing config for the release build.\n+            // Signing with the debug keys for now, so `flutter run --release` works.\n+            signingConfig = signingConfigs.debug\n+        }\n+    }\n+}\n+\n+flutter {\n+    source = \"../..\"\n+}\n+\n+   \n+    dependencies {\n+  // Import the Firebase BoM\n+  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n+\n+\n+  // TODO: Add the dependencies for Firebase products you want to use\n+  // When using the BoM, don't specify versions in Firebase dependencies\n+  implementation(\"com.google.firebase:firebase-analytics\")\n+\n+\n+  // Add the dependencies for any other desired Firebase products\n+  // https://firebase.google.com/docs/android/setup#available-libraries\n+\n+  \n+}\n"
                },
                {
                    "date": 1720636442547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,10 @@\n     }\n     kotlinOptions {\n         jvmTarget = '17' \n     }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n+    kotlin {\n+        jvmToolChain(17)\n     }\n \n     defaultConfig {\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n"
                },
                {
                    "date": 1720636480255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     kotlinOptions {\n         jvmTarget = '17' \n     }\n     kotlin {\n-        jvmToolChain(17)\n+        jvmToolchain(17)\n     }\n \n     defaultConfig {\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n"
                },
                {
                    "date": 1720636536654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,16 +29,16 @@\n     compileSdk = 34\n     ndkVersion = flutter.ndkVersion\n \n     compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_17\n-        targetCompatibility = JavaVersion.VERSION_17\n+        sourceCompatibility = JavaVersion.VERSION_1_8\n+        targetCompatibility = JavaVersion.VERSION_1_8\n     }\n     kotlinOptions {\n-        jvmTarget = '17' \n+        jvmTarget = '1.8' \n     }\n-    kotlin {\n-        jvmToolchain(17)\n+    sourceSets {\n+        main.java.srcDirs += 'src/main/kotlin'\n     }\n \n     defaultConfig {\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n"
                },
                {
                    "date": 1720677095595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720677137554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,92 +44,8 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n-        targetSdk = flutter.targetSdkVersion\n-        versionCode = flutterVersionCode.toInteger()\n-        versionName = flutterVersionName\n-        multiDexEnabled true\n-        \n-    }\n-\n-    buildTypes {\n-        release {\n-            // TODO: Add your own signing config for the release build.\n-            // Signing with the debug keys for now, so `flutter run --release` works.\n-            signingConfig = signingConfigs.debug\n-        }\n-    }\n-}\n-\n-flutter {\n-    source = \"../..\"\n-}\n-\n-   \n-    dependencies {\n-  // Import the Firebase BoM\n-  implementation(platform(\"com.google.firebase:firebase-bom:33.1.1\"))\n-\n-\n-  // TODO: Add the dependencies for Firebase products you want to use\n-  // When using the BoM, don't specify versions in Firebase dependencies\n-  implementation(\"com.google.firebase:firebase-analytics\")\n-\n-\n-  // Add the dependencies for any other desired Firebase products\n-  // https://firebase.google.com/docs/android/setup#available-libraries\n-\n-  \n-}\n-plugins {\n-    id \"com.android.application\"\n-    id \"kotlin-android\"\n-    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n-    id \"dev.flutter.flutter-gradle-plugin\"\n-    id \"com.google.gms.google-services\"\n-}\n-\n-def localProperties = new Properties()\n-def localPropertiesFile = rootProject.file(\"local.properties\")\n-if (localPropertiesFile.exists()) {\n-    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n-        localProperties.load(reader)\n-    }\n-}\n-\n-def flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\n-if (flutterVersionCode == null) {\n-    flutterVersionCode = \"1\"\n-}\n-\n-def flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\n-if (flutterVersionName == null) {\n-    flutterVersionName = \"1.0\"\n-}\n-\n-android {\n-    namespace = \"com.example.taxi_driver\"\n-    compileSdk = 34\n-    ndkVersion = flutter.ndkVersion\n-\n-    compileOptions {\n-        sourceCompatibility = JavaVersion.VERSION_1_8\n-        targetCompatibility = JavaVersion.VERSION_1_8\n-    }\n-    kotlinOptions {\n-        jvmTarget = '1.8' \n-    }\n-    sourceSets {\n-        main.java.srcDirs += 'src/main/kotlin'\n-    }\n-\n-    defaultConfig {\n-        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n-        applicationId = \"com.example.taxi_driver\"\n-        // You can update the following values to match your application needs.\n-        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n         minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n"
                },
                {
                    "date": 1720677299002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720677792454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720691688535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720691717629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720692842422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1720692897569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1723026607608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 24\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1723026640259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 24\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1723411584436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 23\n+        minSdk = 21\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                },
                {
                    "date": 1723411636416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n         applicationId = \"com.example.taxi_driver\"\n         // You can update the following values to match your application needs.\n         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n-        minSdk = 21\n+        minSdk = 23\n         targetSdk = flutter.targetSdkVersion\n         versionCode = flutterVersionCode.toInteger()\n         versionName = flutterVersionName\n         multiDexEnabled true\n"
                }
            ],
            "date": 1720341678639,
            "name": "Commit-0",
            "content": "plugins {\n    id \"com.android.application\"\n    id \"kotlin-android\"\n    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.\n    id \"dev.flutter.flutter-gradle-plugin\"\n    id \"com.google.gms.google-services\"\n}\n\ndef localProperties = new Properties()\ndef localPropertiesFile = rootProject.file(\"local.properties\")\nif (localPropertiesFile.exists()) {\n    localPropertiesFile.withReader(\"UTF-8\") { reader ->\n        localProperties.load(reader)\n    }\n}\n\ndef flutterVersionCode = localProperties.getProperty(\"flutter.versionCode\")\nif (flutterVersionCode == null) {\n    flutterVersionCode = \"1\"\n}\n\ndef flutterVersionName = localProperties.getProperty(\"flutter.versionName\")\nif (flutterVersionName == null) {\n    flutterVersionName = \"1.0\"\n}\n\nandroid {\n    namespace = \"com.example.taxi_driver\"\n    compileSdk = flutter.compileSdkVersion\n    ndkVersion = flutter.ndkVersion\n\n    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n    }\n    kotlinOptions {\n        jvmTarget = '1.8' \n    }\n    sourceSets {\n        main.java.srcDirs += 'src/main/kotlin'\n    }\n\n    defaultConfig {\n        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).\n        applicationId = \"com.example.taxi_driver\"\n        // You can update the following values to match your application needs.\n        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.\n        minSdk = 21\n        targetSdk = flutter.targetSdkVersion\n        versionCode = flutterVersionCode.toInteger()\n        versionName = flutterVersionName\n        multiDexEnabled true\n        \n    }\n\n    buildTypes {\n        release {\n            // TODO: Add your own signing config for the release build.\n            // Signing with the debug keys for now, so `flutter run --release` works.\n            signingConfig = signingConfigs.debug\n        }\n    }\n}\n\nflutter {\n    source = \"../..\"\n}\ndependencies {}"
        }
    ]
}