{
    "sourceFile": "lib/model/zone_list_model.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722709468011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724056296143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,91 @@\n import 'dart:convert';\n \n import 'package:flutter/foundation.dart';\n import 'package:maps_toolkit/maps_toolkit.dart';\n+import 'package:taxi_driver/common/db_helper.dart';\n \n+class ZoneListModel {\n+  String zoneId = \"\";\n+  String zoneName = \"\";\n+  String zoneJson = \"\";\n+  String city = \"\";\n+  String tax = \"\";\n+  String status = \"\";\n+  String createdDate = \"\";\n+  String modifyDate = \"\";\n+  List<LatLng> zonePathArr = [];\n+\n+  ZoneListModel.map(dynamic obj) {\n+    zoneId = obj[\"zone_id\"].toString();\n+    zoneName = obj[\"zone_name\"].toString();\n+    zoneJson = obj[\"zone_json\"].toString();\n+    city = obj[\"city\"].toString();\n+    tax = obj[\"tax\"].toString();\n+    status = obj[\"status\"].toString();\n+    createdDate = obj[\"created_date\"].toString();\n+    modifyDate = obj[\"modify_date\"].toString();\n+\n+    try {\n+      zonePathArr = (json.decode(zoneJson) as List? ?? [])\n+          .map((pObj) => LatLng(\n+              pObj[\"lat\"] as double? ?? 0.0, pObj[\"lng\"] as double? ?? 0.0))\n+          .toList();\n+    } catch (e) {\n+      if (kDebugMode) {\n+        print(e.toString());\n+      }\n+    }\n+  }\n+\n+  Map<String, dynamic> toMap() {\n+    Map<String, dynamic> obj = {};\n+    obj[\"zone_id\"] = zoneId;\n+    obj[\"zone_name\"] = zoneName;\n+    obj[\"zone_json\"] = zoneJson;\n+    obj[\"city\"] = city;\n+    obj[\"tax\"] = tax;\n+    obj[\"status\"] = status;\n+    obj[\"created_date\"] = createdDate;\n+    obj[\"modify_date\"] = modifyDate;\n+\n+    return obj;\n+  }\n+\n+  static Future<List> getList() async {\n+    var db = await DBHelper.shared().db;\n+    if (db != null) {\n+      List<Map> list = await db.rawQuery(\n+          'SELECT * FROM `${DBHelper.tbZoneList}` WHERE `${DBHelper.status}` = 1',\n+          []);\n+      return list;\n+    } else {\n+      return [];\n+    }\n+  }\n+\n+  static Future<List<ZoneListModel>> getActiveList() async {\n+    var db = await DBHelper.shared().db;\n+\n+    if (db != null) {\n+      List<Map> list = await db.rawQuery(\n+          \"SELECT `zl`.* FROM `${DBHelper.tbZoneList}` AS `zl` INNER JOIN `${DBHelper.tbPriceDetail}` AS `pd` ON `pd`.`${DBHelper.zoneId}` = `zl`.`${DBHelper.zoneId}` AND `pd`.`${DBHelper.status}` = '1' WHERE `zl`.`${DBHelper.status}` = '1' GROUP BY `zl`.`${DBHelper.zoneId}`  \",\n+          []);\n+\n+      return list.map((zObj) => ZoneListModel.map(zObj)).toList();\n+    } else {\n+      return [];\n+    }\n+  }\n+}\n+\n+\n+\n+/*import 'dart:convert';\n+\n+import 'package:flutter/foundation.dart';\n+import 'package:maps_toolkit/maps_toolkit.dart';\n+\n import 'package:taxi_driver/common/db_helper.dart';\n \n class ZoneListModel {\n   String zoneId = \"\";\n@@ -76,5 +158,5 @@\n     } else {\n       return [];\n     }\n   }\n-}\n+}*/\n"
                },
                {
                    "date": 1725468818015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+import 'dart:convert';\n+\n+import 'package:flutter/foundation.dart';\n+import 'package:maps_toolkit/maps_toolkit.dart';\n+import 'package:taxi_driver/common/db_helper.dart';\n+\n+class ZoneListModel {\n+  String zoneId = \"\";\n+  String zoneName = \"\";\n+  String zoneJson = \"\";\n+  String city = \"\";\n+  String tax = \"\";\n+  String status = \"\";\n+  String createdDate = \"\";\n+  String modifyDate = \"\";\n+  List<LatLng> zonePathArr = [];\n+\n+  ZoneListModel.map(dynamic obj) {\n+    zoneId = obj[\"zone_id\"].toString();\n+    zoneName = obj[\"zone_name\"].toString();\n+    zoneJson = obj[\"zone_json\"].toString();\n+    city = obj[\"city\"].toString();\n+    tax = obj[\"tax\"].toString();\n+    status = obj[\"status\"].toString();\n+    createdDate = obj[\"created_date\"].toString();\n+    modifyDate = obj[\"modify_date\"].toString();\n+\n+    try {\n+      zonePathArr = (json.decode(zoneJson) as List? ?? [])\n+          .map((pObj) => LatLng(\n+              pObj[\"lat\"] as double? ?? 0.0, pObj[\"lng\"] as double? ?? 0.0))\n+          .toList();\n+    } catch (e) {\n+      if (kDebugMode) {\n+        print(e.toString());\n+      }\n+    }\n+  }\n+\n+  Map<String, dynamic> toMap() {\n+    Map<String, dynamic> obj = {};\n+    obj[\"zone_id\"] = zoneId;\n+    obj[\"zone_name\"] = zoneName;\n+    obj[\"zone_json\"] = zoneJson;\n+    obj[\"city\"] = city;\n+    obj[\"tax\"] = tax;\n+    obj[\"status\"] = status;\n+    obj[\"created_date\"] = createdDate;\n+    obj[\"modify_date\"] = modifyDate;\n+\n+    return obj;\n+  }\n+\n+  static Future<List> getList() async {\n+    var db = await DBHelper.shared().db;\n+    if (db != null) {\n+      List<Map> list = await db.rawQuery(\n+          'SELECT * FROM `${DBHelper.tbZoneList}` WHERE `${DBHelper.status}` = 1',\n+          []);\n+      return list;\n+    } else {\n+      return [];\n+    }\n+  }\n+\n+  static Future<List<ZoneListModel>> getActiveList() async {\n+    var db = await DBHelper.shared().db;\n+\n+    if (db != null) {\n+      List<Map> list = await db.rawQuery(\n+          \"SELECT `zl`.* FROM `${DBHelper.tbZoneList}` AS `zl` INNER JOIN `${DBHelper.tbPriceDetail}` AS `pd` ON `pd`.`${DBHelper.zoneId}` = `zl`.`${DBHelper.zoneId}` AND `pd`.`${DBHelper.status}` = '1' WHERE `zl`.`${DBHelper.status}` = '1' GROUP BY `zl`.`${DBHelper.zoneId}`  \",\n+          []);\n+\n+      return list.map((zObj) => ZoneListModel.map(zObj)).toList();\n+    } else {\n+      return [];\n+    }\n+  }\n+}\n"
                },
                {
                    "date": 1725805606923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,166 +76,4 @@\n       return [];\n     }\n   }\n }\n-import 'dart:convert';\n-\n-import 'package:flutter/foundation.dart';\n-import 'package:maps_toolkit/maps_toolkit.dart';\n-import 'package:taxi_driver/common/db_helper.dart';\n-\n-class ZoneListModel {\n-  String zoneId = \"\";\n-  String zoneName = \"\";\n-  String zoneJson = \"\";\n-  String city = \"\";\n-  String tax = \"\";\n-  String status = \"\";\n-  String createdDate = \"\";\n-  String modifyDate = \"\";\n-  List<LatLng> zonePathArr = [];\n-\n-  ZoneListModel.map(dynamic obj) {\n-    zoneId = obj[\"zone_id\"].toString();\n-    zoneName = obj[\"zone_name\"].toString();\n-    zoneJson = obj[\"zone_json\"].toString();\n-    city = obj[\"city\"].toString();\n-    tax = obj[\"tax\"].toString();\n-    status = obj[\"status\"].toString();\n-    createdDate = obj[\"created_date\"].toString();\n-    modifyDate = obj[\"modify_date\"].toString();\n-\n-    try {\n-      zonePathArr = (json.decode(zoneJson) as List? ?? [])\n-          .map((pObj) => LatLng(\n-              pObj[\"lat\"] as double? ?? 0.0, pObj[\"lng\"] as double? ?? 0.0))\n-          .toList();\n-    } catch (e) {\n-      if (kDebugMode) {\n-        print(e.toString());\n-      }\n-    }\n-  }\n-\n-  Map<String, dynamic> toMap() {\n-    Map<String, dynamic> obj = {};\n-    obj[\"zone_id\"] = zoneId;\n-    obj[\"zone_name\"] = zoneName;\n-    obj[\"zone_json\"] = zoneJson;\n-    obj[\"city\"] = city;\n-    obj[\"tax\"] = tax;\n-    obj[\"status\"] = status;\n-    obj[\"created_date\"] = createdDate;\n-    obj[\"modify_date\"] = modifyDate;\n-\n-    return obj;\n-  }\n-\n-  static Future<List> getList() async {\n-    var db = await DBHelper.shared().db;\n-    if (db != null) {\n-      List<Map> list = await db.rawQuery(\n-          'SELECT * FROM `${DBHelper.tbZoneList}` WHERE `${DBHelper.status}` = 1',\n-          []);\n-      return list;\n-    } else {\n-      return [];\n-    }\n-  }\n-\n-  static Future<List<ZoneListModel>> getActiveList() async {\n-    var db = await DBHelper.shared().db;\n-\n-    if (db != null) {\n-      List<Map> list = await db.rawQuery(\n-          \"SELECT `zl`.* FROM `${DBHelper.tbZoneList}` AS `zl` INNER JOIN `${DBHelper.tbPriceDetail}` AS `pd` ON `pd`.`${DBHelper.zoneId}` = `zl`.`${DBHelper.zoneId}` AND `pd`.`${DBHelper.status}` = '1' WHERE `zl`.`${DBHelper.status}` = '1' GROUP BY `zl`.`${DBHelper.zoneId}`  \",\n-          []);\n-\n-      return list.map((zObj) => ZoneListModel.map(zObj)).toList();\n-    } else {\n-      return [];\n-    }\n-  }\n-}\n-\n-\n-\n-/*import 'dart:convert';\n-\n-import 'package:flutter/foundation.dart';\n-import 'package:maps_toolkit/maps_toolkit.dart';\n-\n-import 'package:taxi_driver/common/db_helper.dart';\n-\n-class ZoneListModel {\n-  String zoneId = \"\";\n-  String zoneName = \"\";\n-  String zoneJson = \"\";\n-  String city = \"\";\n-  String tax = \"\";\n-  String status = \"\";\n-  String createdDate = \"\";\n-  String modifyDate = \"\";\n-  List<LatLng> zonePathArr = [];\n-\n-  ZoneListModel.map(dynamic obj) {\n-    zoneId = obj[\"zone_id\"].toString();\n-    zoneName = obj[\"zone_name\"].toString();\n-    zoneJson = obj[\"zone_json\"].toString();\n-    city = obj[\"city\"].toString();\n-    tax = obj[\"tax\"].toString();\n-    status = obj[\"status\"].toString();\n-    createdDate = obj[\"created_date\"].toString();\n-    modifyDate = obj[\"modify_date\"].toString();\n-\n-    try {\n-      zonePathArr = (json.decode(zoneJson) as List? ?? [])\n-          .map((pObj) => LatLng(\n-              pObj[\"lat\"] as double? ?? 0.0, pObj[\"lng\"] as double? ?? 0.0))\n-          .toList();\n-    } catch (e) {\n-      if (kDebugMode) {\n-        print(e.toString());\n-      }\n-    }\n-  }\n-\n-  Map<String, dynamic> toMap() {\n-    Map<String, dynamic> obj = {};\n-    obj[\"zone_id\"] = zoneId;\n-    obj[\"zone_name\"] = zoneName;\n-    obj[\"zone_json\"] = zoneJson;\n-    obj[\"city\"] = city;\n-    obj[\"tax\"] = tax;\n-    obj[\"status\"] = status;\n-    obj[\"created_date\"] = createdDate;\n-    obj[\"modify_date\"] = modifyDate;\n-\n-    return obj;\n-  }\n-\n-  static Future<List> getList() async {\n-    var db = await DBHelper.shared().db;\n-    if (db != null) {\n-      List<Map> list = await db.rawQuery(\n-          'SELECT * FROM `${DBHelper.tbZoneList}` WHERE `${DBHelper.status}` = 1',\n-          []);\n-      return list;\n-    } else {\n-      return [];\n-    }\n-  }\n-\n-  static Future<List<ZoneListModel>> getActiveList() async {\n-    var db = await DBHelper.shared().db;\n-\n-    if (db != null) {\n-      List<Map> list = await db.rawQuery(\n-          \"SELECT `zl`.* FROM `${DBHelper.tbZoneList}` AS `zl` INNER JOIN `${DBHelper.tbPriceDetail}` AS `pd` ON `pd`.`${DBHelper.zoneId}` = `zl`.`${DBHelper.zoneId}` AND `pd`.`${DBHelper.status}` = '1' WHERE `zl`.`${DBHelper.status}` = '1' GROUP BY `zl`.`${DBHelper.zoneId}`  \",\n-          []);\n-\n-      return list.map((zObj) => ZoneListModel.map(zObj)).toList();\n-    } else {\n-      return [];\n-    }\n-  }\n-}*/\n"
                }
            ],
            "date": 1722709468011,
            "name": "Commit-0",
            "content": "import 'dart:convert';\n\nimport 'package:flutter/foundation.dart';\nimport 'package:maps_toolkit/maps_toolkit.dart';\n\nimport 'package:taxi_driver/common/db_helper.dart';\n\nclass ZoneListModel {\n  String zoneId = \"\";\n  String zoneName = \"\";\n  String zoneJson = \"\";\n  String city = \"\";\n  String tax = \"\";\n  String status = \"\";\n  String createdDate = \"\";\n  String modifyDate = \"\";\n  List<LatLng> zonePathArr = [];\n\n  ZoneListModel.map(dynamic obj) {\n    zoneId = obj[\"zone_id\"].toString();\n    zoneName = obj[\"zone_name\"].toString();\n    zoneJson = obj[\"zone_json\"].toString();\n    city = obj[\"city\"].toString();\n    tax = obj[\"tax\"].toString();\n    status = obj[\"status\"].toString();\n    createdDate = obj[\"created_date\"].toString();\n    modifyDate = obj[\"modify_date\"].toString();\n\n    try {\n      zonePathArr = (json.decode(zoneJson) as List? ?? [])\n          .map((pObj) => LatLng(\n              pObj[\"lat\"] as double? ?? 0.0, pObj[\"lng\"] as double? ?? 0.0))\n          .toList();\n    } catch (e) {\n      if (kDebugMode) {\n        print(e.toString());\n      }\n    }\n  }\n\n  Map<String, dynamic> toMap() {\n    Map<String, dynamic> obj = {};\n    obj[\"zone_id\"] = zoneId;\n    obj[\"zone_name\"] = zoneName;\n    obj[\"zone_json\"] = zoneJson;\n    obj[\"city\"] = city;\n    obj[\"tax\"] = tax;\n    obj[\"status\"] = status;\n    obj[\"created_date\"] = createdDate;\n    obj[\"modify_date\"] = modifyDate;\n\n    return obj;\n  }\n\n  static Future<List> getList() async {\n    var db = await DBHelper.shared().db;\n    if (db != null) {\n      List<Map> list = await db.rawQuery(\n          'SELECT * FROM `${DBHelper.tbZoneList}` WHERE `${DBHelper.status}` = 1',\n          []);\n      return list;\n    } else {\n      return [];\n    }\n  }\n\n  static Future<List<ZoneListModel>> getActiveList() async {\n    var db = await DBHelper.shared().db;\n\n    if (db != null) {\n      List<Map> list = await db.rawQuery(\n          \"SELECT `zl`.* FROM `${DBHelper.tbZoneList}` AS `zl` INNER JOIN `${DBHelper.tbPriceDetail}` AS `pd` ON `pd`.`${DBHelper.zoneId}` = `zl`.`${DBHelper.zoneId}` AND `pd`.`${DBHelper.status}` = '1' WHERE `zl`.`${DBHelper.status}` = '1' GROUP BY `zl`.`${DBHelper.zoneId}`  \",\n          []);\n\n      return list.map((zObj) => ZoneListModel.map(zObj)).toList();\n    } else {\n      return [];\n    }\n  }\n}\n"
        }
    ]
}