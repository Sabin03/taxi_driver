{
    "sourceFile": "lib/common/common_extension.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1720345318873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720345754973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n+    showDialog(\n+        context: context,\n+        barrierDismissible: !isForce,\n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ),\n+            );\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720702655632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, }) {\n+    showDialog(\n+        context: context,\n+      \n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ),\n+            );\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720937216669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:intl/intl.dart';\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, }) {\n+    showDialog(\n+        context: context,\n+      \n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ),\n+            );\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+\n+}\n+\n+extension StringExtension on String {\n+  bool get isEmail {\n+    return RegExp(\n+            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n+        .hasMatch(this);\n+  }\n+\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722610121277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:intl/intl.dart';\n+import 'package:timeago/timeago.dart' as timeago;\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n+    showDialog(\n+        context: context,\n+        barrierDismissible: !isForce,\n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ));\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+}\n+\n+extension StringExtension on String {\n+  bool get isEmail {\n+    return RegExp(\n+            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n+        .hasMatch(this);\n+  }\n+\n+  DateTime dataFormat(\n+      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n+    var date = (DateFormat(format).parseUTC(this));\n+    return date.add(Duration(minutes: addMin));\n+  }\n+\n+  String timeAgo() {\n+    if (this == \"\") {\n+      return \"\";\n+    }\n+\n+    return timeago.format(dataFormat());\n+  }\n+\n+\n+  String stringFormatToOtherFormat({\n+    String format = \"yyyy-MM-dd\",\n+    String newFormat = 'dd/MM/yyyy',\n+    int addMin = 0\n+  }) {\n+    try {\n+      var date = DateFormat(format).parse(this);\n+      if(date == null) {\n+        return \"\";\n+      }\n+\n+      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n+    } catch (e) {\n+\n+        return \"\";\n+    }\n+  }\n+\n+  DateTime get date {\n+    return DateFormat('yyyy/MM/dd').parse(this);\n+  }\n+\n+  DateTime get dateTime {\n+    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n+  }\n+\n+}\n+\n+extension DateTimeExtension on DateTime {\n+  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n+    return DateFormat(format).format(this);\n+  }\n+}\n"
                },
                {
                    "date": 1722774239329,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:intl/intl.dart';\n+import 'package:timeago/timeago.dart' as timeago;\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n+    showDialog(\n+        context: context,\n+        barrierDismissible: !isForce,\n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ));\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+}\n+\n+extension StringExtension on String {\n+  bool get isEmail {\n+    return RegExp(\n+            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n+        .hasMatch(this);\n+  }\n+\n+  DateTime dataFormat(\n+      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n+    var date = (DateFormat(format).parseUTC(this));\n+    return date.add(Duration(minutes: addMin));\n+  }\n+\n+  String timeAgo() {\n+    if (this == \"\") {\n+      return \"\";\n+    }\n+\n+    return timeago.format(dataFormat());\n+  }\n+\n+\n+  String stringFormatToOtherFormat({\n+    String format = \"yyyy-MM-dd\",\n+    String newFormat = 'dd/MM/yyyy',\n+    int addMin = 0\n+  }) {\n+    try {\n+      var date = DateFormat(format).parse(this);\n+      if(date == null) {\n+        return \"\";\n+      }\n+\n+      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n+    } catch (e) {\n+\n+        return \"\";\n+    }\n+  }\n+\n+  DateTime get date {\n+    return DateFormat('yyyy/MM/dd').parse(this);\n+  }\n+\n+  DateTime get dateTime {\n+    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n+  }\n+\n+}\n+\n+extension DateTimeExtension on DateTime {\n+  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n+    return DateFormat(format).format(this);\n+  }\n+}\n"
                },
                {
                    "date": 1722853326446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:flutter/material.dart';\n import 'package:intl/intl.dart';\n import 'package:timeago/timeago.dart' as timeago;\n \n+\n extension MDExtensionState on State {\n   void mdShowAlert(String title, String message, VoidCallback onPressed,\n       {String buttonTitle = \"Ok\",\n       TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n@@ -91,14 +92,9 @@\n }\n \n \n \n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-import 'package:intl/intl.dart';\n-import 'package:timeago/timeago.dart' as timeago;\n-\n-extension MDExtensionState on State {\n+/*extension MDExtensionState on State {\n   void mdShowAlert(String title, String message, VoidCallback onPressed,\n       {String buttonTitle = \"Ok\",\n       TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n     showDialog(\n@@ -178,147 +174,5 @@\n extension DateTimeExtension on DateTime {\n   String stringFormat({String format = \"yyyy-MM-dd\"}) {\n     return DateFormat(format).format(this);\n   }\n-}\n-\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-import 'package:intl/intl.dart';\n-\n-extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, }) {\n-    showDialog(\n-        context: context,\n-      \n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n-                )\n-              ],\n-            ),\n-            );\n-  }\n-\n-  void endEditing() {\n-    FocusScope.of(context).requestFocus(FocusNode());\n-  }\n-\n-}\n-\n-extension StringExtension on String {\n-  bool get isEmail {\n-    return RegExp(\n-            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n-        .hasMatch(this);\n-  }\n-\n-}\n-\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-\n-extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, }) {\n-    showDialog(\n-        context: context,\n-      \n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n-                )\n-              ],\n-            ),\n-            );\n-  }\n-\n-  void endEditing() {\n-    FocusScope.of(context).requestFocus(FocusNode());\n-  }\n-\n-}\n-\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-\n-extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n-    showDialog(\n-        context: context,\n-        barrierDismissible: !isForce,\n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n-                )\n-              ],\n-            ),\n-            );\n-  }\n-\n-}\n-\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-\n-extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n-    showDialog(\n-        context: context,\n-        barrierDismissible: !isForce,\n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n-                )\n-              ],\n-            ),\n-            );\n-  }\n-\n-}\n\\ No newline at end of file\n+}*/\n"
                },
                {
                    "date": 1724754948725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,14 @@\n               title: Text(title),\n               content: Text(message),\n               actions: [\n                 CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n                   isDefaultAction: true,\n                   onPressed: () {\n                     Navigator.pop(context);\n                     onPressed();\n                   },\n+                  child: Text(buttonTitle),\n                 )\n               ],\n             ));\n   }\n@@ -63,11 +63,8 @@\n     int addMin = 0\n   }) {\n     try {\n       var date = DateFormat(format).parse(this);\n-      if(date == null) {\n-        return \"\";\n-      }\n \n       return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n     } catch (e) {\n \n"
                },
                {
                    "date": 1724928855036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,14 @@\n               title: Text(title),\n               content: Text(message),\n               actions: [\n                 CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n                   isDefaultAction: true,\n                   onPressed: () {\n                     Navigator.pop(context);\n                     onPressed();\n                   },\n-                  child: Text(buttonTitle),\n                 )\n               ],\n             ));\n   }\n@@ -63,8 +63,11 @@\n     int addMin = 0\n   }) {\n     try {\n       var date = DateFormat(format).parse(this);\n+      if(date == null) {\n+        return \"\";\n+      }\n \n       return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n     } catch (e) {\n \n"
                },
                {
                    "date": 1724961080775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,14 @@\n               title: Text(title),\n               content: Text(message),\n               actions: [\n                 CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n                   isDefaultAction: true,\n                   onPressed: () {\n                     Navigator.pop(context);\n                     onPressed();\n                   },\n+                  child: Text(buttonTitle),\n                 )\n               ],\n             ));\n   }\n@@ -63,11 +63,8 @@\n     int addMin = 0\n   }) {\n     try {\n       var date = DateFormat(format).parse(this);\n-      if(date == null) {\n-        return \"\";\n-      }\n \n       return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n     } catch (e) {\n \n"
                },
                {
                    "date": 1725462398287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,4 @@\n-\n-\n-\n import 'package:flutter/cupertino.dart';\n import 'package:flutter/material.dart';\n import 'package:intl/intl.dart';\n import 'package:timeago/timeago.dart' as timeago;\n@@ -18,92 +15,9 @@\n               title: Text(title),\n               content: Text(message),\n               actions: [\n                 CupertinoDialogAction(\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n                   child: Text(buttonTitle),\n-                )\n-              ],\n-            ));\n-  }\n-\n-  void endEditing() {\n-    FocusScope.of(context).requestFocus(FocusNode());\n-  }\n-}\n-\n-extension StringExtension on String {\n-  bool get isEmail {\n-    return RegExp(\n-            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n-        .hasMatch(this);\n-  }\n-\n-  DateTime dataFormat(\n-      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n-    var date = (DateFormat(format).parseUTC(this));\n-    return date.add(Duration(minutes: addMin));\n-  }\n-\n-  String timeAgo() {\n-    if (this == \"\") {\n-      return \"\";\n-    }\n-\n-    return timeago.format(dataFormat());\n-  }\n-\n-\n-  String stringFormatToOtherFormat({\n-    String format = \"yyyy-MM-dd\",\n-    String newFormat = 'dd/MM/yyyy',\n-    int addMin = 0\n-  }) {\n-    try {\n-      var date = DateFormat(format).parse(this);\n-\n-      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n-    } catch (e) {\n-\n-        return \"\";\n-    }\n-  }\n-\n-  DateTime get date {\n-    return DateFormat('yyyy/MM/dd').parse(this);\n-  }\n-\n-  DateTime get dateTime {\n-    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n-  }\n-\n-}\n-\n-extension DateTimeExtension on DateTime {\n-  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n-    return DateFormat(format).format(this);\n-  }\n-}\n-\n-\n-\n-/*extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n-    showDialog(\n-        context: context,\n-        barrierDismissible: !isForce,\n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n                   isDefaultAction: true,\n                   onPressed: () {\n                     Navigator.pop(context);\n                     onPressed();\n@@ -171,5 +85,5 @@\n extension DateTimeExtension on DateTime {\n   String stringFormat({String format = \"yyyy-MM-dd\"}) {\n     return DateFormat(format).format(this);\n   }\n-}*/\n+}\n"
                },
                {
                    "date": 1725804082860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:intl/intl.dart';\n+import 'package:timeago/timeago.dart' as timeago;\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n+    showDialog(\n+        context: context,\n+        barrierDismissible: !isForce,\n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ));\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+}\n+\n+extension StringExtension on String {\n+  bool get isEmail {\n+    return RegExp(\n+            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n+        .hasMatch(this);\n+  }\n+\n+  DateTime dataFormat(\n+      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n+    var date = (DateFormat(format).parseUTC(this));\n+    return date.add(Duration(minutes: addMin));\n+  }\n+\n+  String timeAgo() {\n+    if (this == \"\") {\n+      return \"\";\n+    }\n+\n+    return timeago.format(dataFormat());\n+  }\n+\n+\n+  String stringFormatToOtherFormat({\n+    String format = \"yyyy-MM-dd\",\n+    String newFormat = 'dd/MM/yyyy',\n+    int addMin = 0\n+  }) {\n+    try {\n+      var date = DateFormat(format).parse(this);\n+      if(date == null) {\n+        return \"\";\n+      }\n+\n+      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n+    } catch (e) {\n+\n+        return \"\";\n+    }\n+  }\n+\n+  DateTime get date {\n+    return DateFormat('yyyy/MM/dd').parse(this);\n+  }\n+\n+  DateTime get dateTime {\n+    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n+  }\n+\n+}\n+\n+extension DateTimeExtension on DateTime {\n+  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n+    return DateFormat(format).format(this);\n+  }\n+}\n"
                },
                {
                    "date": 1725866238632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,102 +37,17 @@\n             r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n         .hasMatch(this);\n   }\n \n-  DateTime dataFormat(\n-      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n-    var date = (DateFormat(format).parseUTC(this));\n-    return date.add(Duration(minutes: addMin));\n-  }\n-\n-  String timeAgo() {\n-    if (this == \"\") {\n-      return \"\";\n-    }\n-\n-    return timeago.format(dataFormat());\n-  }\n-\n-\n-  String stringFormatToOtherFormat({\n-    String format = \"yyyy-MM-dd\",\n-    String newFormat = 'dd/MM/yyyy',\n-    int addMin = 0\n-  }) {\n-    try {\n-      var date = DateFormat(format).parse(this);\n-      if(date == null) {\n-        return \"\";\n-      }\n-\n-      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n-    } catch (e) {\n-\n-        return \"\";\n-    }\n-  }\n-\n-  DateTime get date {\n-    return DateFormat('yyyy/MM/dd').parse(this);\n-  }\n-\n-  DateTime get dateTime {\n-    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n-  }\n-\n+DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n+  var date = DateFormat(format).parse(this);\n+  return date.add(Duration(minutes: addMin));\n }\n-\n-extension DateTimeExtension on DateTime {\n-  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n-    return DateFormat(format).format(this);\n-  }\n-}\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-import 'package:intl/intl.dart';\n-import 'package:timeago/timeago.dart' as timeago;\n-\n-\n-extension MDExtensionState on State {\n-  void mdShowAlert(String title, String message, VoidCallback onPressed,\n-      {String buttonTitle = \"Ok\",\n-      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n-    showDialog(\n-        context: context,\n-        barrierDismissible: !isForce,\n-        builder: (context) => CupertinoAlertDialog(\n-              title: Text(title),\n-              content: Text(message),\n-              actions: [\n-                CupertinoDialogAction(\n-                  child: Text(buttonTitle),\n-                  isDefaultAction: true,\n-                  onPressed: () {\n-                    Navigator.pop(context);\n-                    onPressed();\n-                  },\n-                )\n-              ],\n-            ));\n-  }\n-\n-  void endEditing() {\n-    FocusScope.of(context).requestFocus(FocusNode());\n-  }\n-}\n-\n-extension StringExtension on String {\n-  bool get isEmail {\n-    return RegExp(\n-            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n-        .hasMatch(this);\n-  }\n-\n-  DateTime dataFormat(\n+  /*DateTime dataFormat(\n       {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n     var date = (DateFormat(format).parseUTC(this));\n     return date.add(Duration(minutes: addMin));\n-  }\n+  }*/\n \n   String timeAgo() {\n     if (this == \"\") {\n       return \"\";\n"
                },
                {
                    "date": 1725867066933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,17 +37,17 @@\n             r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n         .hasMatch(this);\n   }\n \n-DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n+/*DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n   var date = DateFormat(format).parse(this);\n   return date.add(Duration(minutes: addMin));\n-}\n-  /*DateTime dataFormat(\n+}*/\n+  DateTime dataFormat(\n       {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n     var date = (DateFormat(format).parseUTC(this));\n     return date.add(Duration(minutes: addMin));\n-  }*/\n+  }\n \n   String timeAgo() {\n     if (this == \"\") {\n       return \"\";\n"
                },
                {
                    "date": 1725867256931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,17 +37,17 @@\n             r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n         .hasMatch(this);\n   }\n \n-/*DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n+DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n   var date = DateFormat(format).parse(this);\n   return date.add(Duration(minutes: addMin));\n-}*/\n-  DateTime dataFormat(\n+}\n+  /*DateTime dataFormat(\n       {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n     var date = (DateFormat(format).parseUTC(this));\n     return date.add(Duration(minutes: addMin));\n-  }\n+  }*/\n \n   String timeAgo() {\n     if (this == \"\") {\n       return \"\";\n"
                },
                {
                    "date": 1726045253540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:intl/intl.dart';\n+import 'package:timeago/timeago.dart' as timeago;\n+\n+extension MDExtensionState on State {\n+  void mdShowAlert(String title, String message, VoidCallback onPressed,\n+      {String buttonTitle = \"Ok\",\n+      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n+    showDialog(\n+        context: context,\n+        barrierDismissible: !isForce,\n+        builder: (context) => CupertinoAlertDialog(\n+              title: Text(title),\n+              content: Text(message),\n+              actions: [\n+                CupertinoDialogAction(\n+                  child: Text(buttonTitle),\n+                  isDefaultAction: true,\n+                  onPressed: () {\n+                    Navigator.pop(context);\n+                    onPressed();\n+                  },\n+                )\n+              ],\n+            ));\n+  }\n+\n+  void endEditing() {\n+    FocusScope.of(context).requestFocus(FocusNode());\n+  }\n+}\n+\n+extension StringExtension on String {\n+  bool get isEmail {\n+    return RegExp(\n+            r\"^[a-zA-Z0-9.a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9]+\\.[a-zA-Z]+\")\n+        .hasMatch(this);\n+  }\n+\n+DateTime dataFormat({String format = \"yyyy-MM-dd HH:mm:ss\", int addMin = 0}) {\n+  var date = DateFormat(format).parse(this);\n+  return date.add(Duration(minutes: addMin));\n+}\n+  /*DateTime dataFormat(\n+      {String format = \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", int addMin = 0}) {\n+    var date = (DateFormat(format).parseUTC(this));\n+    return date.add(Duration(minutes: addMin));\n+  }*/\n+\n+  String timeAgo() {\n+    if (this == \"\") {\n+      return \"\";\n+    }\n+\n+    return timeago.format(dataFormat());\n+  }\n+\n+\n+  String stringFormatToOtherFormat({\n+    String format = \"yyyy-MM-dd\",\n+    String newFormat = 'dd/MM/yyyy',\n+    int addMin = 0\n+  }) {\n+    try {\n+      var date = DateFormat(format).parse(this);\n+      if(date == null) {\n+        return \"\";\n+      }\n+\n+      return date.add(Duration(minutes: addMin)).stringFormat(format: newFormat);\n+    } catch (e) {\n+\n+        return \"\";\n+    }\n+  }\n+\n+  DateTime get date {\n+    return DateFormat('yyyy/MM/dd').parse(this);\n+  }\n+\n+  DateTime get dateTime {\n+    return DateFormat('yyyy/MM/dd HH:mm').parse(this);\n+  }\n+\n+}\n+\n+extension DateTimeExtension on DateTime {\n+  String stringFormat({String format = \"yyyy-MM-dd\"}) {\n+    return DateFormat(format).format(this);\n+  }\n+}\n"
                }
            ],
            "date": 1720345318873,
            "name": "Commit-0",
            "content": "\n\n\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\n\nextension MDExtensionState on State {\n  void mdShowAlert(String title, String message, VoidCallback onPressed,\n      {String buttonTitle = \"Ok\",\n      TextAlign mainAxisAlignment = TextAlign.center, isForce = false }) {\n    showDialog(\n        context: context,\n        barrierDismissible: !isForce,\n        builder: (context) => CupertinoAlertDialog(\n              title: Text(title),\n              content: Text(message),\n              actions: [\n                CupertinoDialogAction(\n                  child: Text(buttonTitle),\n                  isDefaultAction: true,\n                  onPressed: () {\n                    Navigator.pop(context);\n                    onPressed();\n                  },\n                )\n              ],\n            ),\n            );\n  }\n\n}"
        }
    ]
}