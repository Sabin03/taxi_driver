{
    "sourceFile": "lib/view/login/bank_detail_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1720967646653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722774415067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,268 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/document_upload_view.dart';\n+\n+\n+\n+\n+\n+class BankDetailView extends StatefulWidget {\n+  const BankDetailView({super.key});\n+\n+  @override\n+State<BankDetailView> createState() => _BankDetailViewState();\n+}\n+\n+class  _BankDetailViewState extends State<BankDetailView>{\n+\n+\n+TextEditingController txtBankName = TextEditingController();\n+TextEditingController txtAccountHolderName = TextEditingController();\n+TextEditingController txtAccountNumber = TextEditingController();\n+TextEditingController txtSwiftCode = TextEditingController();\n+\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    getBankDetail();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Bank Details\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+                LineTextField(\n+          title: \"Bank Name\", \n+          hintText: \"Ex: Nepal Bank\",\n+          controller: txtBankName,\n+          \n+          \n+          ),\n+              \n+                const SizedBox(\n+                height: 8,\n+                ),\n+          \n+                 LineTextField(\n+          title: \"Account Holder Name\", \n+          hintText: \"Ex: Ram khatri\",\n+          controller: txtAccountHolderName,\n+                 ),\n+                \n+              \n+                const SizedBox(\n+                height: 8,\n+                ),\n+          \n+           \n+          \n+          LineTextField(\n+          title: \"Account Number\", \n+          hintText: \"Ex: 12345678945254\",\n+          controller: txtAccountNumber,\n+                 ),\n+                \n+          const SizedBox(\n+            height: 8,\n+          ),\n+          \n+                LineTextField(\n+          title: \"Swift/IFSC Code\", \n+          hintText: \"YT123C\",\n+          controller: txtSwiftCode,\n+          obscureText: true,\n+         \n+          \n+          ),\n+\n+          const SizedBox(\n+                height: 8,\n+                ),\n+\n+\n+          Row(\n+  mainAxisAlignment: MainAxisAlignment.center,\n+   children: [\n+     Text(\n+                    \"By continuning, I confirm that i have read & agree to the\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                    ),\n+   ],\n+ ),\n+Row(\n+  mainAxisAlignment: MainAxisAlignment.center,\n+  children: [\n+    Text(\n+                \"Terms & conditions\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+                Text(\n+                \"and\",\n+                style: TextStyle(\n+                  color: TColor.secondaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+                Text(\n+                \"Privacy policy\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+  ],\n+),\n+              \n+                const SizedBox(\n+                height: 15,\n+                ),\n+                \n+                RoundButton(\n+          onPressed: () {\n+            updateAction();\n+            //context.push( const DocumentUploadView (title: \"Personal Document\"),);\n+          },\n+          title: \"NEXT\",\n+                ),\n+          \n+             \n+              ],\n+              \n+            ),\n+          ),\n+        ),\n+    );\n+    \n+  }\n+\n+   //TODO: Button Action\n+\n+  void updateAction() {\n+    if (txtBankName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n+      return;\n+    }\n+\n+    if (txtAccountHolderName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n+      return;\n+    }\n+\n+     if (txtAccountNumber.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n+      return;\n+    }\n+\n+    if (txtSwiftCode.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    updateBankDetail({\n+      \"account_name\": txtAccountHolderName.text,\n+      \"ifsc\": txtSwiftCode.text,\n+      \"account_no\": txtAccountNumber.text,\n+      \"bank_name\": txtBankName.text,\n+    });\n+  }\n+\n+  //TODO:Service Call\n+  void getBankDetail() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var payload = responseObj[KKey.payload] as Map? ?? {};\n+        setState(() {\n+          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n+          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n+          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n+          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void updateBankDetail(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\"Success\",\n+            responseObj[KKey.message] as String? ?? MSG.success, () {});\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n+\n+\n"
                },
                {
                    "date": 1723806089017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,14 +4,14 @@\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/line_text_field.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/document_upload_view.dart';\n \n \n \n \n \n+\n class BankDetailView extends StatefulWidget {\n   const BankDetailView({super.key});\n \n   @override\n"
                },
                {
                    "date": 1724058037837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,497 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class BankDetailView extends StatefulWidget {\n+  const BankDetailView({super.key});\n+\n+  @override\n+  State<BankDetailView> createState() => _BankDetailViewState();\n+}\n+\n+class _BankDetailViewState extends State<BankDetailView> {\n+  TextEditingController txtBankName = TextEditingController();\n+  TextEditingController txtAccountHolderName = TextEditingController();\n+  TextEditingController txtAccountNumber = TextEditingController();\n+  TextEditingController txtSwiftCode = TextEditingController();\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    getBankDetail();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Bank Details\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineTextField(\n+                title: \"Bank Name\",\n+                hintText: \"Ex: SBI\",\n+                controller: txtBankName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Holder name\",\n+                hintText: \"Ex: A Patel\",\n+                controller: txtAccountHolderName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Number\",\n+                hintText: \"Ex: 12345678945245\",\n+                controller: txtAccountNumber,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Swift/IFSC Code\",\n+                hintText: \"YT123C\",\n+                controller: txtSwiftCode,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"By continuing, I confirm that i have read & agree to the\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"Terms & conditions\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \" and \",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \"Privacy policy\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              RoundButton(\n+                onPressed: () {\n+                  updateAction();\n+                  // context.push(const DocumentUploadView(title: \"Personal Document\" ),);\n+                },\n+                title: \"NEXT\",\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Button Action\n+\n+  void updateAction() {\n+    if (txtBankName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n+      return;\n+    }\n+\n+    if (txtAccountHolderName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n+      return;\n+    }\n+\n+     if (txtAccountNumber.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n+      return;\n+    }\n+\n+    if (txtSwiftCode.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    updateBankDetail({\n+      \"account_name\": txtAccountHolderName.text,\n+      \"ifsc\": txtSwiftCode.text,\n+      \"account_no\": txtAccountNumber.text,\n+      \"bank_name\": txtBankName.text,\n+    });\n+  }\n+\n+  //TODO:Service Call\n+  void getBankDetail() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var payload = responseObj[KKey.payload] as Map? ?? {};\n+        setState(() {\n+          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n+          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n+          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n+          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void updateBankDetail(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\"Success\",\n+            responseObj[KKey.message] as String? ?? MSG.success, () {});\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+\n+\n+\n+class BankDetailView extends StatefulWidget {\n+  const BankDetailView({super.key});\n+\n+  @override\n+State<BankDetailView> createState() => _BankDetailViewState();\n+}\n+\n+class  _BankDetailViewState extends State<BankDetailView>{\n+\n+\n+TextEditingController txtBankName = TextEditingController();\n+TextEditingController txtAccountHolderName = TextEditingController();\n+TextEditingController txtAccountNumber = TextEditingController();\n+TextEditingController txtSwiftCode = TextEditingController();\n+\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    getBankDetail();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Bank Details\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+                LineTextField(\n+          title: \"Bank Name\", \n+          hintText: \"Ex: Nepal Bank\",\n+          controller: txtBankName,\n+          \n+          \n+          ),\n+              \n+                const SizedBox(\n+                height: 8,\n+                ),\n+          \n+                 LineTextField(\n+          title: \"Account Holder Name\", \n+          hintText: \"Ex: Ram khatri\",\n+          controller: txtAccountHolderName,\n+                 ),\n+                \n+              \n+                const SizedBox(\n+                height: 8,\n+                ),\n+          \n+           \n+          \n+          LineTextField(\n+          title: \"Account Number\", \n+          hintText: \"Ex: 12345678945254\",\n+          controller: txtAccountNumber,\n+                 ),\n+                \n+          const SizedBox(\n+            height: 8,\n+          ),\n+          \n+                LineTextField(\n+          title: \"Swift/IFSC Code\", \n+          hintText: \"YT123C\",\n+          controller: txtSwiftCode,\n+          obscureText: true,\n+         \n+          \n+          ),\n+\n+          const SizedBox(\n+                height: 8,\n+                ),\n+\n+\n+          Row(\n+  mainAxisAlignment: MainAxisAlignment.center,\n+   children: [\n+     Text(\n+                    \"By continuning, I confirm that i have read & agree to the\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                    ),\n+   ],\n+ ),\n+Row(\n+  mainAxisAlignment: MainAxisAlignment.center,\n+  children: [\n+    Text(\n+                \"Terms & conditions\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+                Text(\n+                \"and\",\n+                style: TextStyle(\n+                  color: TColor.secondaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+                Text(\n+                \"Privacy policy\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 11,\n+                ),\n+                ),\n+  ],\n+),\n+              \n+                const SizedBox(\n+                height: 15,\n+                ),\n+                \n+                RoundButton(\n+          onPressed: () {\n+            updateAction();\n+            //context.push( const DocumentUploadView (title: \"Personal Document\"),);\n+          },\n+          title: \"NEXT\",\n+                ),\n+          \n+             \n+              ],\n+              \n+            ),\n+          ),\n+        ),\n+    );\n+    \n+  }\n+\n+   //TODO: Button Action\n+\n+  void updateAction() {\n+    if (txtBankName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n+      return;\n+    }\n+\n+    if (txtAccountHolderName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n+      return;\n+    }\n+\n+     if (txtAccountNumber.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n+      return;\n+    }\n+\n+    if (txtSwiftCode.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    updateBankDetail({\n+      \"account_name\": txtAccountHolderName.text,\n+      \"ifsc\": txtSwiftCode.text,\n+      \"account_no\": txtAccountNumber.text,\n+      \"bank_name\": txtBankName.text,\n+    });\n+  }\n+\n+  //TODO:Service Call\n+  void getBankDetail() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var payload = responseObj[KKey.payload] as Map? ?? {};\n+        setState(() {\n+          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n+          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n+          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n+          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void updateBankDetail(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\"Success\",\n+            responseObj[KKey.message] as String? ?? MSG.success, () {});\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n+\n+*/\n"
                },
                {
                    "date": 1725470888504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/document_upload_view.dart';\n+\n+class BankDetailView extends StatefulWidget {\n+  const BankDetailView({super.key});\n+\n+  @override\n+  State<BankDetailView> createState() => _BankDetailViewState();\n+}\n+\n+class _BankDetailViewState extends State<BankDetailView> {\n+  TextEditingController txtBankName = TextEditingController();\n+  TextEditingController txtAccountHolderName = TextEditingController();\n+  TextEditingController txtAccountNumber = TextEditingController();\n+  TextEditingController txtSwiftCode = TextEditingController();\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    getBankDetail();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Bank Details\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineTextField(\n+                title: \"Bank Name\",\n+                hintText: \"Ex: SBI\",\n+                controller: txtBankName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Holder name\",\n+                hintText: \"Ex: A Patel\",\n+                controller: txtAccountHolderName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Number\",\n+                hintText: \"Ex: 12345678945245\",\n+                controller: txtAccountNumber,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Swift/IFSC Code\",\n+                hintText: \"YT123C\",\n+                controller: txtSwiftCode,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"By continuing, I confirm that i have read & agree to the\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"Terms & conditions\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \" and \",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \"Privacy policy\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              RoundButton(\n+                onPressed: () {\n+                  updateAction();\n+                  // context.push(const DocumentUploadView(title: \"Personal Document\" ),);\n+                },\n+                title: \"NEXT\",\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Button Action\n+\n+  void updateAction() {\n+    if (txtBankName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n+      return;\n+    }\n+\n+    if (txtAccountHolderName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n+      return;\n+    }\n+\n+     if (txtAccountNumber.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n+      return;\n+    }\n+\n+    if (txtSwiftCode.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    updateBankDetail({\n+      \"account_name\": txtAccountHolderName.text,\n+      \"ifsc\": txtSwiftCode.text,\n+      \"account_no\": txtAccountNumber.text,\n+      \"bank_name\": txtBankName.text,\n+    });\n+  }\n+\n+  //TODO:Service Call\n+  void getBankDetail() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var payload = responseObj[KKey.payload] as Map? ?? {};\n+        setState(() {\n+          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n+          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n+          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n+          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void updateBankDetail(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\"Success\",\n+            responseObj[KKey.message] as String? ?? MSG.success, () {});\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725859346062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/document_upload_view.dart';\n+\n+class BankDetailView extends StatefulWidget {\n+  const BankDetailView({super.key});\n+\n+  @override\n+  State<BankDetailView> createState() => _BankDetailViewState();\n+}\n+\n+class _BankDetailViewState extends State<BankDetailView> {\n+  TextEditingController txtBankName = TextEditingController();\n+  TextEditingController txtAccountHolderName = TextEditingController();\n+  TextEditingController txtAccountNumber = TextEditingController();\n+  TextEditingController txtSwiftCode = TextEditingController();\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    getBankDetail();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Bank Details\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineTextField(\n+                title: \"Bank Name\",\n+                hintText: \"Ex: SBI\",\n+                controller: txtBankName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Holder name\",\n+                hintText: \"Ex: A Patel\",\n+                controller: txtAccountHolderName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Account Number\",\n+                hintText: \"Ex: 12345678945245\",\n+                controller: txtAccountNumber,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Swift/IFSC Code\",\n+                hintText: \"YT123C\",\n+                controller: txtSwiftCode,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"By continuing, I confirm that i have read & agree to the\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                  Text(\n+                    \"Terms & conditions\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \" and \",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                  Text(\n+                    \"Privacy policy\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 11,\n+                    ),\n+                  ),\n+                ],\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              RoundButton(\n+                onPressed: () {\n+                  updateAction();\n+                  // context.push(const DocumentUploadView(title: \"Personal Document\" ),);\n+                },\n+                title: \"NEXT\",\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Button Action\n+\n+  void updateAction() {\n+    if (txtBankName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n+      return;\n+    }\n+\n+    if (txtAccountHolderName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n+      return;\n+    }\n+\n+     if (txtAccountNumber.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n+      return;\n+    }\n+\n+    if (txtSwiftCode.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    updateBankDetail({\n+      \"account_name\": txtAccountHolderName.text,\n+      \"ifsc\": txtSwiftCode.text,\n+      \"account_no\": txtAccountNumber.text,\n+      \"bank_name\": txtBankName.text,\n+    });\n+  }\n+\n+  //TODO:Service Call\n+  void getBankDetail() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var payload = responseObj[KKey.payload] as Map? ?? {};\n+        setState(() {\n+          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n+          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n+          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n+          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void updateBankDetail(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\"Success\",\n+            responseObj[KKey.message] as String? ?? MSG.success, () {});\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                }
            ],
            "date": 1720967646653,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common/common_extension.dart';\nimport 'package:taxi_driver/common/globs.dart';\nimport 'package:taxi_driver/common/service_call.dart';\nimport 'package:taxi_driver/common_widget/line_text_field.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\nimport 'package:taxi_driver/view/login/document_upload_view.dart';\n\n\n\n\n\nclass BankDetailView extends StatefulWidget {\n  const BankDetailView({super.key});\n\n  @override\nState<BankDetailView> createState() => _BankDetailViewState();\n}\n\nclass  _BankDetailViewState extends State<BankDetailView>{\n\n\nTextEditingController txtBankName = TextEditingController();\nTextEditingController txtAccountHolderName = TextEditingController();\nTextEditingController txtAccountNumber = TextEditingController();\nTextEditingController txtSwiftCode = TextEditingController();\n\n\n  @override\n  void initState() {\n    // TODO: implement initState\n    super.initState();\n    getBankDetail();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n   \n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Colors.white,\n        elevation: 1,\n        leading: IconButton(\n        onPressed: (){\n          context.pop();\n        }, \n        icon: Image.asset(\n          \"assets/img/back.png\", \n        width: 25, \n        height: 25,),),\n\n        \n          centerTitle: true,\n        title: Text(\n                  \"Bank Details\",\n                  style: TextStyle(\n                    color: TColor.primaryText,\n                    fontSize: 25,\n                    fontWeight: FontWeight.w800),\n                  \n        ),\n\n\n        ),\n\n        body: SingleChildScrollView(\n          child: Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 20),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                \n                \n                \n             const SizedBox(\n              height: 30,\n              ),\n          \n                LineTextField(\n          title: \"Bank Name\", \n          hintText: \"Ex: Nepal Bank\",\n          controller: txtBankName,\n          \n          \n          ),\n              \n                const SizedBox(\n                height: 8,\n                ),\n          \n                 LineTextField(\n          title: \"Account Holder Name\", \n          hintText: \"Ex: Ram khatri\",\n          controller: txtAccountHolderName,\n                 ),\n                \n              \n                const SizedBox(\n                height: 8,\n                ),\n          \n           \n          \n          LineTextField(\n          title: \"Account Number\", \n          hintText: \"Ex: 12345678945254\",\n          controller: txtAccountNumber,\n                 ),\n                \n          const SizedBox(\n            height: 8,\n          ),\n          \n                LineTextField(\n          title: \"Swift/IFSC Code\", \n          hintText: \"YT123C\",\n          controller: txtSwiftCode,\n          obscureText: true,\n         \n          \n          ),\n\n          const SizedBox(\n                height: 8,\n                ),\n\n\n          Row(\n  mainAxisAlignment: MainAxisAlignment.center,\n   children: [\n     Text(\n                    \"By continuning, I confirm that i have read & agree to the\",\n                    style: TextStyle(\n                      color: TColor.secondaryText,\n                      fontSize: 11,\n                    ),\n                    ),\n   ],\n ),\nRow(\n  mainAxisAlignment: MainAxisAlignment.center,\n  children: [\n    Text(\n                \"Terms & conditions\",\n                style: TextStyle(\n                  color: TColor.primaryText,\n                  fontSize: 11,\n                ),\n                ),\n                Text(\n                \"and\",\n                style: TextStyle(\n                  color: TColor.secondaryText,\n                  fontSize: 11,\n                ),\n                ),\n                Text(\n                \"Privacy policy\",\n                style: TextStyle(\n                  color: TColor.primaryText,\n                  fontSize: 11,\n                ),\n                ),\n  ],\n),\n              \n                const SizedBox(\n                height: 15,\n                ),\n                \n                RoundButton(\n          onPressed: () {\n            updateAction();\n            //context.push( const DocumentUploadView (title: \"Personal Document\"),);\n          },\n          title: \"NEXT\",\n                ),\n          \n             \n              ],\n              \n            ),\n          ),\n        ),\n    );\n    \n  }\n\n   //TODO: Button Action\n\n  void updateAction() {\n    if (txtBankName.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter bank name\", () {});\n      return;\n    }\n\n    if (txtAccountHolderName.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter account holder name\", () {});\n      return;\n    }\n\n     if (txtAccountNumber.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter account number\", () {});\n      return;\n    }\n\n    if (txtSwiftCode.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter Bank Swift/IFSC Code\", () {});\n      return;\n    }\n\n    endEditing();\n\n    updateBankDetail({\n      \"account_name\": txtAccountHolderName.text,\n      \"ifsc\": txtSwiftCode.text,\n      \"account_no\": txtAccountNumber.text,\n      \"bank_name\": txtBankName.text,\n    });\n  }\n\n  //TODO:Service Call\n  void getBankDetail() {\n    Globs.showHUD();\n    ServiceCall.post({}, SVKey.svBankDetail, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n\n      if (responseObj[KKey.status] == \"1\") {\n        var payload = responseObj[KKey.payload] as Map? ?? {};\n        setState(() {\n          txtAccountHolderName.text = payload[\"account_name\"] as String? ?? \"\";\n          txtAccountNumber.text = payload[\"account_no\"] as String? ?? \"\";\n          txtBankName.text = payload[\"bank_name\"] as String? ?? \"\";\n          txtSwiftCode.text = payload[\"bsb\"] as String? ?? \"\";\n        });\n      } else {\n        mdShowAlert(\n            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n      }\n    }, failure: (err) async {\n      Globs.hideHUD();\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n\n  void updateBankDetail(Map<String, dynamic> parameter) {\n    Globs.showHUD();\n    ServiceCall.post(parameter, SVKey.svDriverBankDetailUpdate, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n\n      if (responseObj[KKey.status] == \"1\") {\n        mdShowAlert(\"Success\",\n            responseObj[KKey.message] as String? ?? MSG.success, () {});\n      } else {\n        mdShowAlert(\n            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n      }\n    }, failure: (err) async {\n      Globs.hideHUD();\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n}\n\n\n"
        }
    ]
}