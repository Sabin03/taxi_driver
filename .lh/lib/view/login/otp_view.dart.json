{
    "sourceFile": "lib/view/login/otp_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1720343576327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720345153300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:flutter/material.dart';\n import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n import 'package:otp_timer_button/otp_timer_button.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n \n \n \n@@ -34,16 +35,19 @@\n   onSendSms() async{\n     try {\n \n             await auth.verifyPhoneNumber(\n-        phoneNumber: '+81 70 9120 1638',\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n         verificationCompleted: (PhoneAuthCredential credential) async {\n           // ANDROID ONLY!\n \n           // Sign the user in (or link) with the auto-generated credential\n           await auth.signInWithCredential(credential);\n         },\n         verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n           \n         },\n         codeSent: (verificationId, forceResendingToken) {\n           verificationId = verificationId;\n@@ -53,14 +57,37 @@\n         },\n       );\n       \n     } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n       \n     }\n   }\n \n+  void smsVerification() async {\n+    if (code.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n \n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: verificationid, smsCode: code);\n \n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n   @override\n   Widget build(BuildContext context) {\n    \n     return Scaffold(\n@@ -140,12 +167,14 @@\n             showFieldAsBox: false,\n             borderWidth: 1.0,\n             //runs when a code is typed in\n             onCodeChanged: (String code) {\n+              code = code;\n                 //handle validation or checks here if necessary         \n             },\n             //runs when every textfield is filled \n             onSubmit: (String verificationCode) {\n+              smsVerification();\n \n             }, \n             \n     ),\n"
                },
                {
                    "date": 1720345356052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,226 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String verificationid = \"\";\n+var code =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          verificationId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          verificationId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (code.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: verificationid, smsCode: code);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              code = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720345709787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,226 +223,4 @@\n     \n   }\n }\n \n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String verificationid = \"\";\n-var code =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          verificationId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          verificationId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (code.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: verificationid, smsCode: code);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              code = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {},\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {},\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720419496268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720419566206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,230 +224,4 @@\n     \n   }\n }\n \n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String verificationid = \"\";\n-var code =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          verificationId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          verificationId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (code.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: verificationid, smsCode: code);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              code = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720422454128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720429113299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720430615552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,458 +224,4 @@\n     \n   }\n }\n \n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720439719643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720440222972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,231 +224,4 @@\n     \n   }\n }\n \n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720440390172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720440675479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -224,231 +224,4 @@\n     \n   }\n }\n \n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720519283776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720519469587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720529482888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,227 @@\n+\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class  _OTPViewState extends State<OTPView>{\n+\n+FirebaseAuth auth = FirebaseAuth.instance;\n+String vId = \"\";\n+var otpCode =\"\";\n+\n+@override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async{\n+    try {\n+\n+            await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+          \n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+      \n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+      \n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+   \n+    return Scaffold(\n+      appBar: AppBar(\n+        \n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),),\n+\n+        body: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.start,\n+            children: [\n+              Text(\n+                \"OTP Verifaction\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 25,\n+                  fontWeight: FontWeight.w800), \n+              ),\n+              const SizedBox(\n+                 height: 4,\n+      ),\n+          \n+              Text(\n+                    \"Enter the 6-digit code sent to you at\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+\n+        \n+       \n+        Row(\n+           mainAxisAlignment: MainAxisAlignment.start,\n+           children: [\n+            Text(\n+                    \"${widget.code} ${widget.number}\",\n+                    style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    const SizedBox(width: 8,),\n+\n+                    TextButton(onPressed: (){\n+                      context.pop();\n+                    }, \n+                    \n+                    child: Text(\n+                    \"Edit\",\n+                    style: TextStyle(\n+                      color: TColor.secondaryText,\n+                      fontSize: 16,\n+                    ),\n+                    ),\n+                    ),\n+           ],\n+        ),\n+          \n+\n+ OtpTextField(\n+            numberOfFields: 6,\n+            borderColor: TColor.placeholder,\n+            focusedBorderColor: TColor.primary,\n+            textStyle: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 16,\n+                    ),\n+            showFieldAsBox: false,\n+            borderWidth: 1.0,\n+            //runs when a code is typed in\n+            onCodeChanged: (String code) {\n+              otpCode = code;\n+                //handle validation or checks here if necessary         \n+            },\n+            //runs when every textfield is filled \n+            onSubmit: (String verificationCode) {\n+              otpCode = verificationCode;\n+              smsVerification();\n+\n+            }, \n+            \n+    ),\n+    const SizedBox(\n+      height: 20,\n+      ),\n+\n+\n+      RoundButton(\n+        onPressed: () {\n+          smsVerification();\n+        },\n+        title: \"SUBMIT\",\n+      ),\n+\n+     \n+\n+      Row(\n+        mainAxisAlignment: MainAxisAlignment.center,\n+        children: [\n+          OtpTimerButton(\n+                  height: 60,\n+                  onPressed: () {\n+                    onSendSms();\n+                  },\n+                  text: const Text(\n+                    'Resend OTP',\n+                    style: TextStyle(fontSize: 16),\n+                  ),\n+                  buttonType: ButtonType.text_button,\n+                  backgroundColor: TColor.primaryText,\n+                  duration: 60,\n+                ),\n+        ],\n+      ),\n+     \n+    \n+    \n+      \n+      \n+            ],\n+            \n+          ),\n+        ),\n+    );\n+    \n+  }\n+}\n+\n"
                },
                {
                    "date": 1720715548006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,230 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}\n"
                },
                {
                    "date": 1720726762282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n \n class OTPView extends StatefulWidget {\n   final String number;\n   final String code;\n@@ -105,9 +106,9 @@\n             Globs.hideHUD();\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n-\n+       context.push(const ProfileImageView() );\n            \n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n"
                },
                {
                    "date": 1720726811848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,912 +228,4 @@\n \n }\n \n }\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class  _OTPViewState extends State<OTPView>{\n-\n-FirebaseAuth auth = FirebaseAuth.instance;\n-String vId = \"\";\n-var otpCode =\"\";\n-\n-@override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async{\n-    try {\n-\n-            await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-          \n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-      \n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-      \n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-   \n-    return Scaffold(\n-      appBar: AppBar(\n-        \n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),),\n-\n-        body: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.start,\n-            children: [\n-              Text(\n-                \"OTP Verifaction\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 25,\n-                  fontWeight: FontWeight.w800), \n-              ),\n-              const SizedBox(\n-                 height: 4,\n-      ),\n-          \n-              Text(\n-                    \"Enter the 6-digit code sent to you at\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-\n-        \n-       \n-        Row(\n-           mainAxisAlignment: MainAxisAlignment.start,\n-           children: [\n-            Text(\n-                    \"${widget.code} ${widget.number}\",\n-                    style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    const SizedBox(width: 8,),\n-\n-                    TextButton(onPressed: (){\n-                      context.pop();\n-                    }, \n-                    \n-                    child: Text(\n-                    \"Edit\",\n-                    style: TextStyle(\n-                      color: TColor.secondaryText,\n-                      fontSize: 16,\n-                    ),\n-                    ),\n-                    ),\n-           ],\n-        ),\n-          \n-\n- OtpTextField(\n-            numberOfFields: 6,\n-            borderColor: TColor.placeholder,\n-            focusedBorderColor: TColor.primary,\n-            textStyle: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 16,\n-                    ),\n-            showFieldAsBox: false,\n-            borderWidth: 1.0,\n-            //runs when a code is typed in\n-            onCodeChanged: (String code) {\n-              otpCode = code;\n-                //handle validation or checks here if necessary         \n-            },\n-            //runs when every textfield is filled \n-            onSubmit: (String verificationCode) {\n-              otpCode = verificationCode;\n-              smsVerification();\n-\n-            }, \n-            \n-    ),\n-    const SizedBox(\n-      height: 20,\n-      ),\n-\n-\n-      RoundButton(\n-        onPressed: () {\n-          smsVerification();\n-        },\n-        title: \"SUBMIT\",\n-      ),\n-\n-     \n-\n-      Row(\n-        mainAxisAlignment: MainAxisAlignment.center,\n-        children: [\n-          OtpTimerButton(\n-                  height: 60,\n-                  onPressed: () {\n-                    onSendSms();\n-                  },\n-                  text: const Text(\n-                    'Resend OTP',\n-                    style: TextStyle(fontSize: 16),\n-                  ),\n-                  buttonType: ButtonType.text_button,\n-                  backgroundColor: TColor.primaryText,\n-                  duration: 60,\n-                ),\n-        ],\n-      ),\n-     \n-    \n-    \n-      \n-      \n-            ],\n-            \n-          ),\n-        ),\n-    );\n-    \n-  }\n-}\n-\n"
                },
                {
                    "date": 1720726827142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,232 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+\n+class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG,\n+             () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}\n"
                },
                {
                    "date": 1722421219847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,240 +107,10 @@\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n        context.push(const ProfileImageView() );\n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG,\n-             () {});\n-          }\n-        \n \n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n+       \n            \n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n"
                },
                {
                    "date": 1722774243719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,13 +8,242 @@\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n \n+\n+\n class OTPView extends StatefulWidget {\n+  final bool isDriver;\n   final String number;\n   final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n   const OTPView({super.key, required this.number, required this.code});\n \n   @override\n   State<OTPView> createState() => _OTPViewState();\n@@ -229,5 +458,5 @@\n   context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n \n }\n \n-}\n+}*/\n"
                },
                {
                    "date": 1722862432317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,12 +113,12 @@\n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n \n             if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n+              //context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n+                //context.push(const HomeView());\n               } else {\n                 context.push(const ProfileImageView());\n               }\n             }\n"
                },
                {
                    "date": 1722862480894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,462 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              //context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                //context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+\n+       \n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}*/\n"
                },
                {
                    "date": 1722863271458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,12 +113,12 @@\n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n \n             if (ServiceCall.userType == 1) {\n-              //context.push(const UserHomeView());\n+              context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n-                //context.push(const HomeView());\n+                context.push(const HomeView());\n               } else {\n                 context.push(const ProfileImageView());\n               }\n             }\n"
                },
                {
                    "date": 1724071169004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,466 +459,4 @@\n \n }\n \n }*/\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              //context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                //context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-\n-\n-\n-/*class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}*/\n"
                },
                {
                    "date": 1724145630475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n             if (ServiceCall.userType == 1) {\n               context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n+                //context.push(const HomeView());\n               } else {\n                 context.push(const ProfileImageView());\n               }\n             }\n"
                },
                {
                    "date": 1724322265185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n             if (ServiceCall.userType == 1) {\n               context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n-                //context.push(const HomeView());\n+                context.push(const HomeView());\n               } else {\n                 context.push(const ProfileImageView());\n               }\n             }\n"
                },
                {
                    "date": 1724574349363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,463 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/driver_edit_profile_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const DriverEditProfileView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+\n+       \n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}*/\n"
                },
                {
                    "date": 1724574535681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/driver_edit_profile_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n import 'package:taxi_driver/view/user/user_home_view.dart';\n \n \n@@ -114,470 +113,8 @@\n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n \n             if (ServiceCall.userType == 1) {\n-              context.push(const DriverEditProfileView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-\n-\n-\n-/*class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}*/\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n               context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n"
                },
                {
                    "date": 1724575026664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,462 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 2) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 2) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+\n+       \n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}*/\n"
                },
                {
                    "date": 1724575229511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,9 @@\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/driver_edit_profile_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n import 'package:taxi_driver/view/user/user_home_view.dart';\n \n \n@@ -112,12 +113,13 @@\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n \n-            if (ServiceCall.userType == 2) {\n-              context.push(const UserHomeView());\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const DriverEditProfileView());\n             } else {\n-              if (ServiceCall.userObj[KKey.status] == 2) {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n               } else {\n                 context.push(const ProfileImageView());\n               }\n"
                },
                {
                    "date": 1724575404275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/driver_edit_profile_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n import 'package:taxi_driver/view/user/user_home_view.dart';\n \n \n@@ -113,11 +112,10 @@\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n \n-\n             if (ServiceCall.userType == 1) {\n-              context.push(const DriverEditProfileView());\n+              context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n               } else {\n"
                },
                {
                    "date": 1724575963487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,21 @@\n+\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:flutter_bloc/flutter_bloc.dart';\n import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n import 'package:otp_timer_button/otp_timer_button.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n \n-\n-\n class OTPView extends StatefulWidget {\n-  final bool isDriver;\n   final String number;\n   final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+  const OTPView({super.key, required this.number, required this.code});\n \n   @override\n   State<OTPView> createState() => _OTPViewState();\n }\n@@ -77,8 +72,9 @@\n       final User? user = (await auth.signInWithCredential(credential)).user;\n \n       if (user != null) {\n         submitApiData(user.uid);\n+       // mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n       } else {\n         mdShowAlert(\"Fail\", \"invalid otp\", () {});\n       }\n     } catch (e) {\n@@ -104,258 +100,28 @@\n       body: BlocConsumer<LoginCubit, LoginState>(\n         listener: (context, state) {\n           // TODO: LoginState implement listener\n \n-          if (state is LoginHUDState) {\n+       if (state is LoginHUDState) {\n             Globs.showHUD();\n           } else if (state is LoginApiResultState) {\n             Globs.hideHUD();\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n                 context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n+         } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n           }\n-        },\n+      },\n         builder: (context, state) {\n           return Padding(\n             padding: const EdgeInsets.symmetric(horizontal: 20),\n             child: Column(\n               crossAxisAlignment: CrossAxisAlignment.start,\n               children: [\n                 Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-\n-\n-\n-/*class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n                   \"OTP Verifaction\",\n                   style: TextStyle(\n                       color: TColor.primaryText,\n                       fontSize: 25,\n@@ -453,472 +219,9 @@\n       ),\n     );\n   }\n \n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}*/\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n+ void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, \"2\");\n   }\n \n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-\n-\n-\n-/*class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}*/\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724576308304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,26 @@\n-\n import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:flutter_bloc/flutter_bloc.dart';\n import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n import 'package:otp_timer_button/otp_timer_button.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n \n+\n+\n class OTPView extends StatefulWidget {\n+  final bool isDriver;\n   final String number;\n   final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n \n   @override\n   State<OTPView> createState() => _OTPViewState();\n }\n@@ -72,9 +77,8 @@\n       final User? user = (await auth.signInWithCredential(credential)).user;\n \n       if (user != null) {\n         submitApiData(user.uid);\n-       // mdShowAlert(\"Sucess\", \"Sucessfully signed in UID:${user.uid}\", () {});\n       } else {\n         mdShowAlert(\"Fail\", \"invalid otp\", () {});\n       }\n     } catch (e) {\n@@ -100,28 +104,258 @@\n       body: BlocConsumer<LoginCubit, LoginState>(\n         listener: (context, state) {\n           // TODO: LoginState implement listener\n \n-       if (state is LoginHUDState) {\n+          if (state is LoginHUDState) {\n             Globs.showHUD();\n           } else if (state is LoginApiResultState) {\n             Globs.hideHUD();\n \n             mdShowAlert(\n                 \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n                 context.push(const ProfileImageView());\n-         } else if (state is LoginErrorState) {\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n           }\n-      },\n+        },\n         builder: (context, state) {\n           return Padding(\n             padding: const EdgeInsets.symmetric(horizontal: 20),\n             child: Column(\n               crossAxisAlignment: CrossAxisAlignment.start,\n               children: [\n                 Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+\n+       \n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n                   \"OTP Verifaction\",\n                   style: TextStyle(\n                       color: TColor.primaryText,\n                       fontSize: 25,\n@@ -219,9 +453,10 @@\n       ),\n     );\n   }\n \n- void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, \"2\");\n-  }\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n\\ No newline at end of file\n \n-}\n+}\n+\n+}*/\n"
                },
                {
                    "date": 1724592125430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import 'package:firebase_auth/firebase_auth.dart';\n+/*import 'package:firebase_auth/firebase_auth.dart';\n import 'package:flutter/material.dart';\n import 'package:flutter_bloc/flutter_bloc.dart';\n import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n import 'package:otp_timer_button/otp_timer_button.dart';\n@@ -235,13 +235,28 @@\n \n   void submitApiData(String uid) {\n     context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n   }\n-}\n+}*/\n \n \n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n \n-/*class OTPView extends StatefulWidget {\n+\n+class OTPView extends StatefulWidget {\n   final String number;\n   final String code;\n   const OTPView({super.key, required this.number, required this.code});\n \n@@ -458,5 +473,5 @@\n   context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n \n }\n \n-}*/\n\\ No newline at end of file\n+}\n"
                },
                {
                    "date": 1724592744863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,462 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n+\n+\n+\n+/*class OTPView extends StatefulWidget {\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+       submitApiData( user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: loginState implement listener\n+\n+           if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+       context.push(const ProfileImageView() );\n+\n+       \n+           \n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        \n+\n+\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verifaction\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+void submitApiData (String uid) {\n+  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n+\n+}\n+\n+}*/\n"
                },
                {
                    "date": 1724665603482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n               } else {\n-                context.push(const ProfileImageView());\n+                //context.push(const ProfileImageView());\n               }\n             }\n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n"
                },
                {
                    "date": 1724666087484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n               } else {\n-                //context.push(const ProfileImageView());\n+                context.push(const ProfileImageView());\n               }\n             }\n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n@@ -459,481 +459,4 @@\n \n }\n \n }*/\n-/*import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}*/\n-\n-\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}\n"
                },
                {
                    "date": 1725471675431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n"
                },
                {
                    "date": 1725522956888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,237 @@\n+import 'package:firebase_auth/firebase_auth.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_bloc/flutter_bloc.dart';\n+import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n+import 'package:otp_timer_button/otp_timer_button.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/cubit/login_cubit.dart';\n+import 'package:taxi_driver/view/home/home_view.dart';\n+import 'package:taxi_driver/view/login/profile_image_view.dart';\n+import 'package:taxi_driver/view/user/user_home_view.dart';\n+\n+class OTPView extends StatefulWidget {\n+  final bool isDriver;\n+  final String number;\n+  final String code;\n+  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n+\n+  @override\n+  State<OTPView> createState() => _OTPViewState();\n+}\n+\n+class _OTPViewState extends State<OTPView> {\n+  FirebaseAuth auth = FirebaseAuth.instance;\n+  String vId = \"\";\n+  var otpCode = \"\";\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    onSendSms();\n+  }\n+\n+  onSendSms() async {\n+    try {\n+      await auth.verifyPhoneNumber(\n+        phoneNumber: \"${widget.code} ${widget.number}\",\n+        timeout: const Duration(seconds: 5),\n+        verificationCompleted: (PhoneAuthCredential credential) async {\n+          // ANDROID ONLY!\n+\n+          // Sign the user in (or link) with the auto-generated credential\n+          await auth.signInWithCredential(credential);\n+        },\n+        verificationFailed: (error) {\n+          mdShowAlert(\"Fail\", error.toString(), () {});\n+        },\n+        codeSent: (verificationId, forceResendingToken) {\n+          vId = verificationId;\n+        },\n+        codeAutoRetrievalTimeout: (verificationId) {\n+          vId = verificationId;\n+        },\n+      );\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  void smsVerification() async {\n+    if (otpCode.length < 6) {\n+      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n+      return;\n+    }\n+\n+    try {\n+      final AuthCredential credential =\n+          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n+\n+      final User? user = (await auth.signInWithCredential(credential)).user;\n+\n+      if (user != null) {\n+        submitApiData(user.uid);\n+      } else {\n+        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n+      }\n+    } catch (e) {\n+      mdShowAlert(\"Fail\", e.toString(), () {});\n+    }\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+      ),\n+      body: BlocConsumer<LoginCubit, LoginState>(\n+        listener: (context, state) {\n+          // TODO: LoginState implement listener\n+\n+          if (state is LoginHUDState) {\n+            Globs.showHUD();\n+          } else if (state is LoginApiResultState) {\n+            Globs.hideHUD();\n+\n+            mdShowAlert(\n+                \"Success\", \"Successfully signed in api calling done\", () {});\n+\n+            if (ServiceCall.userType == 1) {\n+              context.push(const UserHomeView());\n+            } else {\n+              if (ServiceCall.userObj[KKey.status] == 1) {\n+                context.push(const HomeView());\n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n+            }\n+          } else if (state is LoginErrorState) {\n+            Globs.hideHUD();\n+            mdShowAlert(\"Fail\", state.errorMSG, () {});\n+          }\n+        },\n+        builder: (context, state) {\n+          return Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.start,\n+              children: [\n+                Text(\n+                  \"OTP Verification\",\n+                  style: TextStyle(\n+                      color: TColor.primaryText,\n+                      fontSize: 25,\n+                      fontWeight: FontWeight.w800),\n+                ),\n+                const SizedBox(\n+                  height: 4,\n+                ),\n+                Text(\n+                  \"Enter the 6-digit code sent to you at\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.start,\n+                  children: [\n+                    Text(\n+                      \"${widget.code} ${widget.number}\",\n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 16,\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      width: 8,\n+                    ),\n+                    TextButton(\n+                      onPressed: () {\n+                        context.pop();\n+                      },\n+                      child: Text(\n+                        \"Edit\",\n+                        style: TextStyle(\n+                          color: TColor.secondary,\n+                          fontSize: 16,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+                OtpTextField(\n+                  numberOfFields: 6,\n+                  borderColor: TColor.placeholder,\n+                  focusedBorderColor: TColor.primary,\n+                  textStyle: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 16,\n+                  ),\n+                  showFieldAsBox: false,\n+                  borderWidth: 1.0,\n+                  //runs when a code is typed in\n+                  onCodeChanged: (String code) {\n+                    otpCode = code;\n+                    //handle validation or checks here if necessary\n+                  },\n+                  //runs when every textfield is filled\n+                  onSubmit: (String verificationCode) {\n+                    otpCode = verificationCode;\n+                    smsVerification();\n+                  },\n+                ),\n+                const SizedBox(\n+                  height: 20,\n+                ),\n+                RoundButton(\n+                  onPressed: () {\n+                    smsVerification();\n+                  },\n+                  title: \"SUBMIT\",\n+                ),\n+                Row(\n+                  mainAxisAlignment: MainAxisAlignment.center,\n+                  children: [\n+                    OtpTimerButton(\n+                      height: 60,\n+                      onPressed: () {\n+                        onSendSms();\n+                      },\n+                      text: const Text(\n+                        'Resend OTP',\n+                        style: TextStyle(fontSize: 16),\n+                      ),\n+                      buttonType: ButtonType.text_button,\n+                      backgroundColor: TColor.primaryText,\n+                      duration: 60,\n+                    ),\n+                  ],\n+                ),\n+              ],\n+            ),\n+          );\n+        },\n+      ),\n+    );\n+  }\n+\n+  void submitApiData(String uid) {\n+    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n+  }\n+}\n"
                },
                {
                    "date": 1725523431057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,11 +115,9 @@\n               context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n+              } \n             }\n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n"
                },
                {
                    "date": 1725524641696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,11 @@\n               context.push(const UserHomeView());\n             } else {\n               if (ServiceCall.userObj[KKey.status] == 1) {\n                 context.push(const HomeView());\n-              } \n+              } else {\n+                context.push(const ProfileImageView());\n+              }\n             }\n           } else if (state is LoginErrorState) {\n             Globs.hideHUD();\n             mdShowAlert(\"Fail\", state.errorMSG, () {});\n"
                },
                {
                    "date": 1725859653913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,703 +234,4 @@\n   void submitApiData(String uid) {\n     context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n   }\n }\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-import 'package:firebase_auth/firebase_auth.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter_bloc/flutter_bloc.dart';\n-import 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\n-import 'package:otp_timer_button/otp_timer_button.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/cubit/login_cubit.dart';\n-import 'package:taxi_driver/view/home/home_view.dart';\n-import 'package:taxi_driver/view/login/profile_image_view.dart';\n-import 'package:taxi_driver/view/user/user_home_view.dart';\n-\n-\n-\n-class OTPView extends StatefulWidget {\n-  final bool isDriver;\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code, this.isDriver = true});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-        submitApiData(user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: LoginState implement listener\n-\n-          if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-\n-            if (ServiceCall.userType == 1) {\n-              context.push(const UserHomeView());\n-            } else {\n-              if (ServiceCall.userObj[KKey.status] == 1) {\n-                context.push(const HomeView());\n-              } else {\n-                context.push(const ProfileImageView());\n-              }\n-            }\n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verification\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondary,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-  void submitApiData(String uid) {\n-    context.read<LoginCubit>().submitLogin(widget.code, widget.number, widget.isDriver ?  \"2\" : \"1\" );\n-  }\n-}\n-\n-\n-\n-/*class OTPView extends StatefulWidget {\n-  final String number;\n-  final String code;\n-  const OTPView({super.key, required this.number, required this.code});\n-\n-  @override\n-  State<OTPView> createState() => _OTPViewState();\n-}\n-\n-class _OTPViewState extends State<OTPView> {\n-  FirebaseAuth auth = FirebaseAuth.instance;\n-  String vId = \"\";\n-  var otpCode = \"\";\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    onSendSms();\n-  }\n-\n-  onSendSms() async {\n-    try {\n-      await auth.verifyPhoneNumber(\n-        phoneNumber: \"${widget.code} ${widget.number}\",\n-        timeout: const Duration(seconds: 5),\n-        verificationCompleted: (PhoneAuthCredential credential) async {\n-          // ANDROID ONLY!\n-\n-          // Sign the user in (or link) with the auto-generated credential\n-          await auth.signInWithCredential(credential);\n-        },\n-        verificationFailed: (error) {\n-          mdShowAlert(\"Fail\", error.toString(), () {});\n-        },\n-        codeSent: (verificationId, forceResendingToken) {\n-          vId = verificationId;\n-        },\n-        codeAutoRetrievalTimeout: (verificationId) {\n-          vId = verificationId;\n-        },\n-      );\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  void smsVerification() async {\n-    if (otpCode.length < 6) {\n-      mdShowAlert(\"Error\", \"Please enter valid code\", () {});\n-      return;\n-    }\n-\n-    try {\n-      final AuthCredential credential =\n-          PhoneAuthProvider.credential(verificationId: vId, smsCode: otpCode);\n-\n-      final User? user = (await auth.signInWithCredential(credential)).user;\n-\n-      if (user != null) {\n-       submitApiData( user.uid);\n-      } else {\n-        mdShowAlert(\"Fail\", \"invalid otp\", () {});\n-      }\n-    } catch (e) {\n-      mdShowAlert(\"Fail\", e.toString(), () {});\n-    }\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-      ),\n-      body: BlocConsumer<LoginCubit, LoginState>(\n-        listener: (context, state) {\n-          // TODO: loginState implement listener\n-\n-           if (state is LoginHUDState) {\n-            Globs.showHUD();\n-          } else if (state is LoginApiResultState) {\n-            Globs.hideHUD();\n-\n-            mdShowAlert(\n-                \"Success\", \"Successfully signed in api calling done\", () {});\n-       context.push(const ProfileImageView() );\n-\n-       \n-           \n-          } else if (state is LoginErrorState) {\n-            Globs.hideHUD();\n-            mdShowAlert(\"Fail\", state.errorMSG, () {});\n-          }\n-        \n-\n-\n-        },\n-        builder: (context, state) {\n-          return Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.start,\n-              children: [\n-                Text(\n-                  \"OTP Verifaction\",\n-                  style: TextStyle(\n-                      color: TColor.primaryText,\n-                      fontSize: 25,\n-                      fontWeight: FontWeight.w800),\n-                ),\n-                const SizedBox(\n-                  height: 4,\n-                ),\n-                Text(\n-                  \"Enter the 6-digit code sent to you at\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.start,\n-                  children: [\n-                    Text(\n-                      \"${widget.code} ${widget.number}\",\n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 16,\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      width: 8,\n-                    ),\n-                    TextButton(\n-                      onPressed: () {\n-                        context.pop();\n-                      },\n-                      child: Text(\n-                        \"Edit\",\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 16,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-                OtpTextField(\n-                  numberOfFields: 6,\n-                  borderColor: TColor.placeholder,\n-                  focusedBorderColor: TColor.primary,\n-                  textStyle: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 16,\n-                  ),\n-                  showFieldAsBox: false,\n-                  borderWidth: 1.0,\n-                  //runs when a code is typed in\n-                  onCodeChanged: (String code) {\n-                    otpCode = code;\n-                    //handle validation or checks here if necessary\n-                  },\n-                  //runs when every textfield is filled\n-                  onSubmit: (String verificationCode) {\n-                    otpCode = verificationCode;\n-                    smsVerification();\n-                  },\n-                ),\n-                const SizedBox(\n-                  height: 20,\n-                ),\n-                RoundButton(\n-                  onPressed: () {\n-                    smsVerification();\n-                  },\n-                  title: \"SUBMIT\",\n-                ),\n-                Row(\n-                  mainAxisAlignment: MainAxisAlignment.center,\n-                  children: [\n-                    OtpTimerButton(\n-                      height: 60,\n-                      onPressed: () {\n-                        onSendSms();\n-                      },\n-                      text: const Text(\n-                        'Resend OTP',\n-                        style: TextStyle(fontSize: 16),\n-                      ),\n-                      buttonType: ButtonType.text_button,\n-                      backgroundColor: TColor.primaryText,\n-                      duration: 60,\n-                    ),\n-                  ],\n-                ),\n-              ],\n-            ),\n-          );\n-        },\n-      ),\n-    );\n-  }\n-\n-void submitApiData (String uid) {\n-  context.read<LoginCubit>().submitLogin(widget.code, widget.number,  \"2\" );\n-\n-}\n-\n-}*/\n"
                }
            ],
            "date": 1720343576327,
            "name": "Commit-0",
            "content": "\nimport 'package:firebase_auth/firebase_auth.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_otp_text_field/flutter_otp_text_field.dart';\nimport 'package:otp_timer_button/otp_timer_button.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\n\n\n\nclass OTPView extends StatefulWidget {\n  final String number;\n  final String code;\n  const OTPView({super.key, required this.number, required this.code});\n\n  @override\nState<OTPView> createState() => _OTPViewState();\n}\n\nclass  _OTPViewState extends State<OTPView>{\n\nFirebaseAuth auth = FirebaseAuth.instance;\nString verificationid = \"\";\nvar code =\"\";\n\n@override\n  void initState() {\n    // TODO: implement initState\n    super.initState();\n\n    onSendSms();\n  }\n\n  onSendSms() async{\n    try {\n\n            await auth.verifyPhoneNumber(\n        phoneNumber: '+81 70 9120 1638',\n        verificationCompleted: (PhoneAuthCredential credential) async {\n          // ANDROID ONLY!\n\n          // Sign the user in (or link) with the auto-generated credential\n          await auth.signInWithCredential(credential);\n        },\n        verificationFailed: (error) {\n          \n        },\n        codeSent: (verificationId, forceResendingToken) {\n          verificationId = verificationId;\n        },\n        codeAutoRetrievalTimeout: (verificationId) {\n          verificationId = verificationId;\n        },\n      );\n      \n    } catch (e) {\n      \n    }\n  }\n\n\n\n  @override\n  Widget build(BuildContext context) {\n   \n    return Scaffold(\n      appBar: AppBar(\n        \n        leading: IconButton(\n        onPressed: (){\n          context.pop();\n        }, \n        icon: Image.asset(\n          \"assets/img/back.png\", \n        width: 25, \n        height: 25,),),),\n\n        body: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 20),\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                \"OTP Verifaction\",\n                style: TextStyle(\n                  color: TColor.primaryText,\n                  fontSize: 25,\n                  fontWeight: FontWeight.w800), \n              ),\n              const SizedBox(\n                 height: 4,\n      ),\n          \n              Text(\n                    \"Enter the 6-digit code sent to you at\",\n                    style: TextStyle(\n                      color: TColor.secondaryText,\n                      fontSize: 16,\n                    ),\n                    ),\n\n        \n       \n        Row(\n           mainAxisAlignment: MainAxisAlignment.start,\n           children: [\n            Text(\n                    \"${widget.code} ${widget.number}\",\n                    style: TextStyle(\n                      color: TColor.primaryText,\n                      fontSize: 16,\n                    ),\n                    ),\n                    const SizedBox(width: 8,),\n\n                    TextButton(onPressed: (){\n                      context.pop();\n                    }, \n                    \n                    child: Text(\n                    \"Edit\",\n                    style: TextStyle(\n                      color: TColor.secondaryText,\n                      fontSize: 16,\n                    ),\n                    ),\n                    ),\n           ],\n        ),\n          \n\n OtpTextField(\n            numberOfFields: 6,\n            borderColor: TColor.placeholder,\n            focusedBorderColor: TColor.primary,\n            textStyle: TextStyle(\n                      color: TColor.primaryText,\n                      fontSize: 16,\n                    ),\n            showFieldAsBox: false,\n            borderWidth: 1.0,\n            //runs when a code is typed in\n            onCodeChanged: (String code) {\n                //handle validation or checks here if necessary         \n            },\n            //runs when every textfield is filled \n            onSubmit: (String verificationCode) {\n\n            }, \n            \n    ),\n    const SizedBox(\n      height: 20,\n      ),\n\n\n      RoundButton(\n        onPressed: () {},\n        title: \"SUBMIT\",\n      ),\n\n     \n\n      Row(\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          OtpTimerButton(\n                  height: 60,\n                  onPressed: () {},\n                  text: const Text(\n                    'Resend OTP',\n                    style: TextStyle(fontSize: 16),\n                  ),\n                  buttonType: ButtonType.text_button,\n                  backgroundColor: TColor.primaryText,\n                  duration: 60,\n                ),\n        ],\n      ),\n     \n    \n    \n      \n      \n            ],\n            \n          ),\n        ),\n    );\n    \n  }\n}\n\n"
        }
    ]
}