{
    "sourceFile": "lib/view/login/add_vehicle_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1720946121592,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722774412440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,400 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723201433274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,396 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    \n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723201550397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,400 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723420712580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,397 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+   \n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723420835125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,357 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+            \n+              \n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+   \n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723421069259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,348 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n+\n+\n+\n+\n+\n+\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var media = MediaQuery.sizeOf(context);\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,),),\n+\n+        \n+          centerTitle: true,\n+        title: Text(\n+                  \"Add Vehicle\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800),\n+                  \n+        ),\n+\n+\n+        ),\n+\n+        body: SingleChildScrollView(\n+          child: Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20),\n+            child: Column(\n+              crossAxisAlignment: CrossAxisAlignment.center,\n+              children: [\n+                \n+                \n+                \n+             const SizedBox(\n+              height: 30,\n+              ),\n+          \n+            LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+            \n+              \n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+   \n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+  }\n+     \n+\n+\n+\n+    \n+  \n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723421253081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -208,713 +208,8 @@\n                 height: 25,\n               ),\n \n \n-            \n-              \n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-   \n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-  }\n-     \n-\n-\n-\n-    \n-  \n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-            \n-              \n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-   \n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n               InkWell(\n                 onTap: () async {\n                   await Navigator.push(\n                     context,\n@@ -1012,405 +307,8 @@\n       mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n       return;\n     }\n \n-   \n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n     if (selectImage == null) {\n       mdShowAlert(\"Error\", \"Please select your car image\", () {});\n       return;\n     }\n@@ -1499,1200 +397,4 @@\n       mdShowAlert(\"Error\", err, () {});\n     });\n   }\n }\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    \n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723421860816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,386 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+  State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+\n+    var media = MediaQuery.sizeOf(context);\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Add Vehicle\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.center,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723551758624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,344 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+  State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+\n+    var media = MediaQuery.sizeOf(context);\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Add Vehicle\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.center,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+         \n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1723805788035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,52 @@\n                 height: 25,\n               ),\n \n \n+            InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n          \n \n               \n               const SizedBox(\n"
                },
                {
                    "date": 1724057918512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,8 +194,397 @@\n                 height: 25,\n               ),\n \n \n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+  State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+\n+    var media = MediaQuery.sizeOf(context);\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Add Vehicle\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.center,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n             InkWell(\n                 onTap: () async {\n                   await Navigator.push(\n                     context,\n@@ -384,5 +773,5 @@\n       Globs.hideHUD();\n       mdShowAlert(\"Error\", err, () {});\n     });\n   }\n-}\n+}*/\n"
                },
                {
                    "date": 1725470749939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,386 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+  State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+\n+    var media = MediaQuery.sizeOf(context);\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Add Vehicle\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.center,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725806939408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import 'package:taxi_driver/common_widget/popup_layout.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n \n class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n+  const AddVehicleView({super.key}); yaha bata sure \n \n   @override\n   State<AddVehicleView> createState() => _AddVehicleViewState();\n }\n"
                },
                {
                    "date": 1725859171824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import 'package:taxi_driver/common_widget/popup_layout.dart';\n import 'package:taxi_driver/common_widget/round_button.dart';\n \n class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key}); yaha bata sure \n+  const AddVehicleView({super.key}); \n \n   @override\n   State<AddVehicleView> createState() => _AddVehicleViewState();\n }\n@@ -383,1567 +383,4 @@\n       mdShowAlert(\"Error\", err, () {});\n     });\n   }\n }\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-  State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-\n-    var media = MediaQuery.sizeOf(context);\n-\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Add Vehicle\",\n-          style: TextStyle(\n-              color: TColor.primaryText,\n-              fontSize: 25,\n-              fontWeight: FontWeight.w800),\n-        ),\n-      ),\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.center,\n-            children: [\n-              const SizedBox(\n-                height: 30,\n-              ),\n-              LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-  State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-\n-    var media = MediaQuery.sizeOf(context);\n-\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Add Vehicle\",\n-          style: TextStyle(\n-              color: TColor.primaryText,\n-              fontSize: 25,\n-              fontWeight: FontWeight.w800),\n-        ),\n-      ),\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.center,\n-            children: [\n-              const SizedBox(\n-                height: 30,\n-              ),\n-              LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-            InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-         \n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}*/\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-  State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-\n-    var media = MediaQuery.sizeOf(context);\n-\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Add Vehicle\",\n-          style: TextStyle(\n-              color: TColor.primaryText,\n-              fontSize: 25,\n-              fontWeight: FontWeight.w800),\n-        ),\n-      ),\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          child: Column(\n-            crossAxisAlignment: CrossAxisAlignment.center,\n-            children: [\n-              const SizedBox(\n-                height: 30,\n-              ),\n-              LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n-import 'dart:io';\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/drop_down_button.dart';\n-import 'package:taxi_driver/common_widget/image_picker_view.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/popup_layout.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-import 'package:taxi_driver/view/login/vehicle_document_view.dart';\n-\n-\n-\n-\n-\n-\n-\n-class AddVehicleView extends StatefulWidget {\n-  const AddVehicleView({super.key});\n-\n-  @override\n-State<AddVehicleView> createState() => _AddVehicleViewState();\n-}\n-\n-class _AddVehicleViewState extends State<AddVehicleView> {\n-  TextEditingController txtSeat = TextEditingController();\n-  TextEditingController txtBrandName = TextEditingController();\n-  TextEditingController txtModelName = TextEditingController();\n-  TextEditingController txtNumberPlate = TextEditingController();\n-  TextEditingController txtSeries = TextEditingController();\n-  File? selectImage;\n-\n-  List brandArr = [];\n-  List modelArr = [];\n-  List seriesArr = [];\n-\n-  Map? selectBrandObj;\n-  Map? selectModelObj;\n-  Map? selectSeriesObj;\n-\n-  int otherFlag = 0;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    getBrandList();\n-  }\n-\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var media = MediaQuery.sizeOf(context);\n-    return Scaffold(\n-      appBar: AppBar(\n-        backgroundColor: Colors.white,\n-        elevation: 1,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,),),\n-\n-        \n-          centerTitle: true,\n-        title: Text(\n-                  \"Add Vehicle\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800),\n-                  \n-        ),\n-\n-\n-        ),\n-\n-        body: SingleChildScrollView(\n-          child: Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20),\n-            child: Column(\n-              crossAxisAlignment: CrossAxisAlignment.center,\n-              children: [\n-                \n-                \n-                \n-             const SizedBox(\n-              height: 30,\n-              ),\n-          \n-            LineDropDownButton(\n-                  title: \"Brand\",\n-                  hintText: \"Select Brand\",\n-                  itemsArr: brandArr,\n-                  selectVal: selectBrandObj,\n-                  didChanged: (bObj) {\n-                    selectBrandObj = bObj;\n-                    selectModelObj = null;\n-                    selectSeriesObj = null;\n-                    if (bObj[\"brand_id\"] == 0) {\n-                      otherFlag = 1;\n-                      //Display New Enter Brand\n-                    } else {\n-                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"brand_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Brand\",\n-                  hintText: \"Ex: BMW\",\n-                  controller: txtBrandName,\n-                ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-\n-              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Model\",\n-                  hintText: \"Select Model\",\n-                  itemsArr: modelArr,\n-                  selectVal: selectModelObj,\n-                  didChanged: (mObj) {\n-                    selectModelObj = mObj;\n-                    selectSeriesObj = null;\n-\n-                    if (mObj[\"model_id\"] == 0) {\n-                      otherFlag = 2;\n-                      //Display New Enter Model\n-                    } else {\n-                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n-                    }\n-\n-                    setState(() {});\n-                  },\n-                  displayKey: \"model_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n-              LineTextField(\n-                title: \"Enter Model\",\n-                hintText: \"Ex: ABC\",\n-                controller: txtModelName,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              \n-              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n-              LineDropDownButton(\n-                  title: \"Series\",\n-                  hintText: \"Select Series\",\n-                  itemsArr: seriesArr,\n-                  selectVal: selectSeriesObj,\n-                  didChanged: (sObj) {\n-                    selectSeriesObj = sObj;\n-                    if (sObj[\"series_id\"] == 0) {\n-                      otherFlag = 3;\n-                    }\n-                    setState(() {});\n-                  },\n-                  displayKey: \"series_name\"),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n-                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n-                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n-                LineTextField(\n-                  title: \"Enter Series\",\n-                  hintText: \"X1\",\n-                  controller: txtSeries,\n-                ),\n-              \n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Seat\",\n-                hintText: \"Ex: No of Seat available\",\n-                controller: txtSeat,\n-              ),\n-              const SizedBox(\n-                height: 8,\n-              ),\n-              LineTextField(\n-                title: \"Number Plate\",\n-                hintText: \"YT12345\",\n-                controller: txtNumberPlate,\n-              ),\n-\n-               const SizedBox(\n-                height: 25,\n-              ),\n-\n-\n-              InkWell(\n-                onTap: () async {\n-                  await Navigator.push(\n-                    context,\n-                    PopupLayout(\n-                      child: ImagePickerView(\n-                        didSelect: (imagePath) {\n-                          selectImage = File(imagePath);\n-                          setState(() {});\n-                        },\n-                      ),\n-                    ),\n-                  );\n-                },\n-                child: Container(\n-                  width: media.width - 120,\n-                  height: media.width - 120,\n-                  padding: const EdgeInsets.all(8),\n-                  decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(25),\n-                      boxShadow: const [\n-                        BoxShadow(color: Colors.black26, blurRadius: 4)\n-                      ]),\n-                  child: ClipRRect(\n-                    borderRadius: BorderRadius.circular(25),\n-                    child: selectImage != null\n-                        ? Image.file(\n-                            selectImage!,\n-                            width: media.width-120,\n-                            height: media.width - 120,\n-                            fit: BoxFit.cover,\n-                          )\n-                        : Icon(\n-                            Icons.directions_car,\n-                            size: 150,\n-                            color: TColor.secondaryText,\n-                          ),\n-                  ),\n-                ),\n-              ),\n-\n-\n-\n-              \n-              const SizedBox(\n-                height: 25,\n-              ),\n-              RoundButton(\n-                onPressed: submitCarAction,\n-                title: \"REGISTER\",\n-              ),\n-              const SizedBox(\n-                height: 25,\n-              ),\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-  void submitCarAction() {\n-    if(selectBrandObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n-      return;\n-    }\n-\n-    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n-      return;\n-    }\n-\n-    if ( otherFlag > 1 &&  selectModelObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n-      return;\n-    }\n-\n-    if (otherFlag > 2 &&  selectSeriesObj == null) {\n-      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n-      return;\n-    }\n-\n-    if(txtSeat.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n-      return;\n-    }\n-\n-    if (txtNumberPlate.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n-      return;\n-    }\n-\n-    if (selectImage == null) {\n-      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    submitCarApi({\n-      \"other_status\":otherFlag.toString(),\n-      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n-      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n-      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n-      \"seat\": txtSeat.text.toString(),\n-      \"car_number\": txtNumberPlate.text\n-    });\n-\n-  }\n-\n-  //TODO: ServiceCall\n-\n-  void getBrandList() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        brandArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        brandArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getModelList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        modelArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        modelArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void getSeriesList(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n-        seriesArr = responseObj[KKey.payload] as List? ?? [];\n-      } else {\n-        seriesArr = [];\n-      }\n-\n-      setState(() {});\n-    }, failure: (err) async {\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-\n-  void submitCarApi(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.multipart(parameter, SVKey.svAddCar,\n-        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n-  \n-        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n-          Navigator.pop(context);\n-        });\n-      } else {\n-        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err, () {});\n-    });\n-  }\n-}\n"
                },
                {
                    "date": 1725859328314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,386 @@\n+import 'dart:io';\n+\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/drop_down_button.dart';\n+import 'package:taxi_driver/common_widget/image_picker_view.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/popup_layout.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class AddVehicleView extends StatefulWidget {\n+  const AddVehicleView({super.key});\n+\n+  @override\n+  State<AddVehicleView> createState() => _AddVehicleViewState();\n+}\n+\n+class _AddVehicleViewState extends State<AddVehicleView> {\n+  TextEditingController txtSeat = TextEditingController();\n+  TextEditingController txtBrandName = TextEditingController();\n+  TextEditingController txtModelName = TextEditingController();\n+  TextEditingController txtNumberPlate = TextEditingController();\n+  TextEditingController txtSeries = TextEditingController();\n+  File? selectImage;\n+\n+  List brandArr = [];\n+  List modelArr = [];\n+  List seriesArr = [];\n+\n+  Map? selectBrandObj;\n+  Map? selectModelObj;\n+  Map? selectSeriesObj;\n+\n+  int otherFlag = 0;\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    getBrandList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+\n+    var media = MediaQuery.sizeOf(context);\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        backgroundColor: Colors.white,\n+        elevation: 1,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Add Vehicle\",\n+          style: TextStyle(\n+              color: TColor.primaryText,\n+              fontSize: 25,\n+              fontWeight: FontWeight.w800),\n+        ),\n+      ),\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          child: Column(\n+            crossAxisAlignment: CrossAxisAlignment.center,\n+            children: [\n+              const SizedBox(\n+                height: 30,\n+              ),\n+              LineDropDownButton(\n+                  title: \"Brand\",\n+                  hintText: \"Select Brand\",\n+                  itemsArr: brandArr,\n+                  selectVal: selectBrandObj,\n+                  didChanged: (bObj) {\n+                    selectBrandObj = bObj;\n+                    selectModelObj = null;\n+                    selectSeriesObj = null;\n+                    if (bObj[\"brand_id\"] == 0) {\n+                      otherFlag = 1;\n+                      //Display New Enter Brand\n+                    } else {\n+                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"brand_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Brand\",\n+                  hintText: \"Ex: BMW\",\n+                  controller: txtBrandName,\n+                ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+\n+              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Model\",\n+                  hintText: \"Select Model\",\n+                  itemsArr: modelArr,\n+                  selectVal: selectModelObj,\n+                  didChanged: (mObj) {\n+                    selectModelObj = mObj;\n+                    selectSeriesObj = null;\n+\n+                    if (mObj[\"model_id\"] == 0) {\n+                      otherFlag = 2;\n+                      //Display New Enter Model\n+                    } else {\n+                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n+                    }\n+\n+                    setState(() {});\n+                  },\n+                  displayKey: \"model_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n+              LineTextField(\n+                title: \"Enter Model\",\n+                hintText: \"Ex: ABC\",\n+                controller: txtModelName,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              \n+              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n+              LineDropDownButton(\n+                  title: \"Series\",\n+                  hintText: \"Select Series\",\n+                  itemsArr: seriesArr,\n+                  selectVal: selectSeriesObj,\n+                  didChanged: (sObj) {\n+                    selectSeriesObj = sObj;\n+                    if (sObj[\"series_id\"] == 0) {\n+                      otherFlag = 3;\n+                    }\n+                    setState(() {});\n+                  },\n+                  displayKey: \"series_name\"),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n+                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n+                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n+                LineTextField(\n+                  title: \"Enter Series\",\n+                  hintText: \"X1\",\n+                  controller: txtSeries,\n+                ),\n+              \n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Seat\",\n+                hintText: \"Ex: No of Seat available\",\n+                controller: txtSeat,\n+              ),\n+              const SizedBox(\n+                height: 8,\n+              ),\n+              LineTextField(\n+                title: \"Number Plate\",\n+                hintText: \"YT12345\",\n+                controller: txtNumberPlate,\n+              ),\n+\n+               const SizedBox(\n+                height: 25,\n+              ),\n+\n+\n+              InkWell(\n+                onTap: () async {\n+                  await Navigator.push(\n+                    context,\n+                    PopupLayout(\n+                      child: ImagePickerView(\n+                        didSelect: (imagePath) {\n+                          selectImage = File(imagePath);\n+                          setState(() {});\n+                        },\n+                      ),\n+                    ),\n+                  );\n+                },\n+                child: Container(\n+                  width: media.width - 120,\n+                  height: media.width - 120,\n+                  padding: const EdgeInsets.all(8),\n+                  decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(25),\n+                      boxShadow: const [\n+                        BoxShadow(color: Colors.black26, blurRadius: 4)\n+                      ]),\n+                  child: ClipRRect(\n+                    borderRadius: BorderRadius.circular(25),\n+                    child: selectImage != null\n+                        ? Image.file(\n+                            selectImage!,\n+                            width: media.width-120,\n+                            height: media.width - 120,\n+                            fit: BoxFit.cover,\n+                          )\n+                        : Icon(\n+                            Icons.directions_car,\n+                            size: 150,\n+                            color: TColor.secondaryText,\n+                          ),\n+                  ),\n+                ),\n+              ),\n+\n+\n+\n+              \n+              const SizedBox(\n+                height: 25,\n+              ),\n+              RoundButton(\n+                onPressed: submitCarAction,\n+                title: \"REGISTER\",\n+              ),\n+              const SizedBox(\n+                height: 25,\n+              ),\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+  void submitCarAction() {\n+    if(selectBrandObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n+      return;\n+    }\n+\n+    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n+      return;\n+    }\n+\n+    if ( otherFlag > 1 &&  selectModelObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n+      return;\n+    }\n+\n+    if (otherFlag > 2 &&  selectSeriesObj == null) {\n+      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n+      return;\n+    }\n+\n+    if(txtSeat.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n+      return;\n+    }\n+\n+    if (txtNumberPlate.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n+      return;\n+    }\n+\n+    if (selectImage == null) {\n+      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    submitCarApi({\n+      \"other_status\":otherFlag.toString(),\n+      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n+      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n+      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n+      \"seat\": txtSeat.text.toString(),\n+      \"car_number\": txtNumberPlate.text\n+    });\n+\n+  }\n+\n+  //TODO: ServiceCall\n+\n+  void getBrandList() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        brandArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        brandArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getModelList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        modelArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        modelArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void getSeriesList(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n+        seriesArr = responseObj[KKey.payload] as List? ?? [];\n+      } else {\n+        seriesArr = [];\n+      }\n+\n+      setState(() {});\n+    }, failure: (err) async {\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+\n+  void submitCarApi(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.multipart(parameter, SVKey.svAddCar,\n+        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n+  \n+        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n+          Navigator.pop(context);\n+        });\n+      } else {\n+        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err, () {});\n+    });\n+  }\n+}\n"
                }
            ],
            "date": 1720946121592,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\nimport 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common/common_extension.dart';\nimport 'package:taxi_driver/common/globs.dart';\nimport 'package:taxi_driver/common/service_call.dart';\nimport 'package:taxi_driver/common_widget/drop_down_button.dart';\nimport 'package:taxi_driver/common_widget/image_picker_view.dart';\nimport 'package:taxi_driver/common_widget/line_text_field.dart';\nimport 'package:taxi_driver/common_widget/popup_layout.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\nimport 'package:taxi_driver/view/login/vehicle_document_view.dart';\n\n\n\n\n\n\n\nclass AddVehicleView extends StatefulWidget {\n  const AddVehicleView({super.key});\n\n  @override\nState<AddVehicleView> createState() => _AddVehicleViewState();\n}\n\nclass _AddVehicleViewState extends State<AddVehicleView> {\n  TextEditingController txtSeat = TextEditingController();\n  TextEditingController txtBrandName = TextEditingController();\n  TextEditingController txtModelName = TextEditingController();\n  TextEditingController txtNumberPlate = TextEditingController();\n  TextEditingController txtSeries = TextEditingController();\n  File? selectImage;\n\n  List brandArr = [];\n  List modelArr = [];\n  List seriesArr = [];\n\n  Map? selectBrandObj;\n  Map? selectModelObj;\n  Map? selectSeriesObj;\n\n  int otherFlag = 0;\n\n  @override\n  void initState() {\n    // TODO: implement initState\n    super.initState();\n\n    getBrandList();\n  }\n\n\n  @override\n  Widget build(BuildContext context) {\n    var media = MediaQuery.sizeOf(context);\n    return Scaffold(\n      appBar: AppBar(\n        backgroundColor: Colors.white,\n        elevation: 1,\n        leading: IconButton(\n        onPressed: (){\n          context.pop();\n        }, \n        icon: Image.asset(\n          \"assets/img/back.png\", \n        width: 25, \n        height: 25,),),\n\n        \n          centerTitle: true,\n        title: Text(\n                  \"Add Vehicle\",\n                  style: TextStyle(\n                    color: TColor.primaryText,\n                    fontSize: 25,\n                    fontWeight: FontWeight.w800),\n                  \n        ),\n\n\n        ),\n\n        body: SingleChildScrollView(\n          child: Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 20),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.center,\n              children: [\n                \n                \n                \n             const SizedBox(\n              height: 30,\n              ),\n          \n            LineDropDownButton(\n                  title: \"Brand\",\n                  hintText: \"Select Brand\",\n                  itemsArr: brandArr,\n                  selectVal: selectBrandObj,\n                  didChanged: (bObj) {\n                    selectBrandObj = bObj;\n                    selectModelObj = null;\n                    selectSeriesObj = null;\n                    if (bObj[\"brand_id\"] == 0) {\n                      otherFlag = 1;\n                      //Display New Enter Brand\n                    } else {\n                      getModelList({\"brand_id\": bObj[\"brand_id\"].toString()});\n                    }\n\n                    setState(() {});\n                  },\n                  displayKey: \"brand_name\"),\n              const SizedBox(\n                height: 8,\n              ),\n              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0)\n                LineTextField(\n                  title: \"Enter Brand\",\n                  hintText: \"Ex: BMW\",\n                  controller: txtBrandName,\n                ),\n              const SizedBox(\n                height: 8,\n              ),\n\n              if ( !((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0))\n              LineDropDownButton(\n                  title: \"Model\",\n                  hintText: \"Select Model\",\n                  itemsArr: modelArr,\n                  selectVal: selectModelObj,\n                  didChanged: (mObj) {\n                    selectModelObj = mObj;\n                    selectSeriesObj = null;\n\n                    if (mObj[\"model_id\"] == 0) {\n                      otherFlag = 2;\n                      //Display New Enter Model\n                    } else {\n                      getSeriesList({\"model_id\": mObj[\"model_id\"].toString()});\n                    }\n\n                    setState(() {});\n                  },\n                  displayKey: \"model_name\"),\n              const SizedBox(\n                height: 8,\n              ),\n              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0)\n              LineTextField(\n                title: \"Enter Model\",\n                hintText: \"Ex: ABC\",\n                controller: txtModelName,\n              ),\n              const SizedBox(\n                height: 8,\n              ),\n              \n              if (!((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 || (selectModelObj?[\"model_id\"] as int? ?? -1) == 0))\n              LineDropDownButton(\n                  title: \"Series\",\n                  hintText: \"Select Series\",\n                  itemsArr: seriesArr,\n                  selectVal: selectSeriesObj,\n                  didChanged: (sObj) {\n                    selectSeriesObj = sObj;\n                    if (sObj[\"series_id\"] == 0) {\n                      otherFlag = 3;\n                    }\n                    setState(() {});\n                  },\n                  displayKey: \"series_name\"),\n              const SizedBox(\n                height: 8,\n              ),\n              if ((selectBrandObj?[\"brand_id\"] as int? ?? -1) == 0 ||\n                  (selectModelObj?[\"model_id\"] as int? ?? -1) == 0 ||\n                  (selectSeriesObj?[\"series_id\"] as int? ?? -1) == 0)\n                LineTextField(\n                  title: \"Enter Series\",\n                  hintText: \"X1\",\n                  controller: txtSeries,\n                ),\n              \n              const SizedBox(\n                height: 8,\n              ),\n              LineTextField(\n                title: \"Seat\",\n                hintText: \"Ex: No of Seat available\",\n                controller: txtSeat,\n              ),\n              const SizedBox(\n                height: 8,\n              ),\n              LineTextField(\n                title: \"Number Plate\",\n                hintText: \"YT12345\",\n                controller: txtNumberPlate,\n              ),\n\n               const SizedBox(\n                height: 25,\n              ),\n\n\n              InkWell(\n                onTap: () async {\n                  await Navigator.push(\n                    context,\n                    PopupLayout(\n                      child: ImagePickerView(\n                        didSelect: (imagePath) {\n                          selectImage = File(imagePath);\n                          setState(() {});\n                        },\n                      ),\n                    ),\n                  );\n                },\n                child: Container(\n                  width: media.width - 120,\n                  height: media.width - 120,\n                  padding: const EdgeInsets.all(8),\n                  decoration: BoxDecoration(\n                      color: Colors.white,\n                      borderRadius: BorderRadius.circular(25),\n                      boxShadow: const [\n                        BoxShadow(color: Colors.black26, blurRadius: 4)\n                      ]),\n                  child: ClipRRect(\n                    borderRadius: BorderRadius.circular(25),\n                    child: selectImage != null\n                        ? Image.file(\n                            selectImage!,\n                            width: media.width-120,\n                            height: media.width - 120,\n                            fit: BoxFit.cover,\n                          )\n                        : Icon(\n                            Icons.directions_car,\n                            size: 150,\n                            color: TColor.secondaryText,\n                          ),\n                  ),\n                ),\n              ),\n\n\n\n              \n              const SizedBox(\n                height: 25,\n              ),\n              RoundButton(\n                onPressed: submitCarAction,\n                title: \"REGISTER\",\n              ),\n              const SizedBox(\n                height: 25,\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  //TODO: Action\n  void submitCarAction() {\n    if(selectBrandObj == null) {\n      mdShowAlert(\"Error\", \"Please select your car brand\", () { });\n      return;\n    }\n\n    if (otherFlag == 1 && txtBrandName.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter your car brand name\", () {});\n      return;\n    }\n\n    if ( otherFlag > 1 &&  selectModelObj == null) {\n      mdShowAlert(\"Error\", \"Please select your car model\", () {});\n      return;\n    }\n\n    if (otherFlag > 0 && otherFlag <=2 && txtModelName.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter your car model name\", () {});\n      return;\n    }\n\n    if (otherFlag > 2 &&  selectSeriesObj == null) {\n      mdShowAlert(\"Error\", \"Please select your car series\", () {});\n      return;\n    }\n\n    if(txtSeat.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter your car seat\", () {});\n      return;\n    }\n\n    if (txtNumberPlate.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter your car number plate\", () {});\n      return;\n    }\n\n    if (selectImage == null) {\n      mdShowAlert(\"Error\", \"Please select your car image\", () {});\n      return;\n    }\n\n    endEditing();\n\n    submitCarApi({\n      \"other_status\":otherFlag.toString(),\n      \"brand\": otherFlag == 1 ? txtBrandName.text : selectBrandObj![\"brand_id\"].toString(),\n      \"model\": otherFlag > 0 && otherFlag <= 2 ? txtModelName.text : selectModelObj![\"model_id\"].toString(),\n      \"series\": otherFlag > 0 ? txtSeries.text : selectSeriesObj![\"series_id\"].toString() ,\n      \"seat\": txtSeat.text.toString(),\n      \"car_number\": txtNumberPlate.text\n    });\n\n  }\n\n  //TODO: ServiceCall\n\n  void getBrandList() {\n    Globs.showHUD();\n    ServiceCall.post({}, SVKey.svBrandList, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n        brandArr = responseObj[KKey.payload] as List? ?? [];\n      } else {\n        brandArr = [];\n      }\n\n      setState(() {});\n    }, failure: (err) async {\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n\n  void getModelList(Map<String, dynamic> parameter) {\n    Globs.showHUD();\n    ServiceCall.post(parameter, SVKey.svModelList, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n        modelArr = responseObj[KKey.payload] as List? ?? [];\n      } else {\n        modelArr = [];\n      }\n\n      setState(() {});\n    }, failure: (err) async {\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n\n  void getSeriesList(Map<String, dynamic> parameter) {\n    Globs.showHUD();\n    ServiceCall.post(parameter, SVKey.svSeriesList, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n      if ((responseObj[KKey.status] as String? ?? \"\") == \"1\") {\n        seriesArr = responseObj[KKey.payload] as List? ?? [];\n      } else {\n        seriesArr = [];\n      }\n\n      setState(() {});\n    }, failure: (err) async {\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n\n  void submitCarApi(Map<String, String> parameter) {\n    Globs.showHUD();\n    ServiceCall.multipart(parameter, SVKey.svAddCar,\n        isTokenApi: true, imgObj: {\"image\": selectImage! }, withSuccess: (responseObj) async {\n      Globs.hideHUD();\n      if ((responseObj[KKey.status] ?? \"\") == \"1\") {\n  \n        mdShowAlert(\"Success\", responseObj[KKey.message] ?? MSG.success, () {\n          Navigator.pop(context);\n        });\n      } else {\n        mdShowAlert(\"Error\", responseObj[KKey.message] ?? MSG.fail, () {});\n      }\n    }, failure: (err) async {\n      Globs.hideHUD();\n      mdShowAlert(\"Error\", err, () {});\n    });\n  }\n}\n"
        }
    ]
}