{
    "sourceFile": "lib/view/user/car_service_select_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722672316670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724061304008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,4 +164,174 @@\n       ),\n     );\n   }\n }\n+\n+\n+\n+/*import 'package:cached_network_image/cached_network_image.dart';\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class CarServiceSelectView extends StatefulWidget {\n+  final List serviceArr;\n+  final Function(dynamic) didSelect;\n+\n+  const CarServiceSelectView(\n+      {super.key, required this.serviceArr, required this.didSelect});\n+\n+  @override\n+  State<CarServiceSelectView> createState() => _CarServiceSelectViewState();\n+}\n+\n+class _CarServiceSelectViewState extends State<CarServiceSelectView> {\n+  // List listArr = [\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"Economy\",\n+  //     \"price\": \"\\$10-\\$20\",\n+  //   },\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"Luxury\",\n+  //     \"price\": \"\\$13-\\$23\",\n+  //   },\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"First Class\",\n+  //     \"price\": \"\\$25-\\$30\",\n+  //   },\n+  // ];\n+\n+  int selectIndex = 0;\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Container(\n+      height: 350,\n+      decoration: const BoxDecoration(\n+          color: Colors.white,\n+          borderRadius: BorderRadius.only(\n+            topLeft: Radius.circular(25),\n+            topRight: Radius.circular(25),\n+          ),\n+          boxShadow: [BoxShadow(color: Colors.black26, blurRadius: 5)]),\n+      child: Column(\n+        crossAxisAlignment: CrossAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+            child: Text(\n+              \"Select Car Service\",\n+              style: TextStyle(\n+                color: TColor.primaryText,\n+                fontSize: 17,\n+                fontWeight: FontWeight.w700,\n+              ),\n+            ),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+          SizedBox(\n+            height: 120,\n+            child: ListView.separated(\n+              scrollDirection: Axis.horizontal,\n+              itemBuilder: (context, index) {\n+                var cObj = widget.serviceArr[index] as Map? ?? {};\n+\n+                var estMinVal = (cObj[\"est_price_min\"] as double? ?? 0.0);\n+                var estMaxVal = (cObj[\"est_price_max\"] as double? ?? 0.0);\n+\n+                return GestureDetector(\n+                  onTap: () {\n+                    setState(() {\n+                      selectIndex = index;\n+                    });\n+                  },\n+                  child: Stack(\n+                    alignment: Alignment.centerLeft,\n+                    children: [\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 45),\n+                        padding: const EdgeInsets.only(\n+                          left: 90,\n+                        ),\n+                        width: 200,\n+                        height: 100,\n+                        decoration: BoxDecoration(\n+                            color: Colors.white,\n+                            borderRadius: BorderRadius.circular(15),\n+                            boxShadow: [\n+                              BoxShadow(\n+                                color: selectIndex == index\n+                                    ? TColor.primary\n+                                    : Colors.black26,\n+                                blurRadius: 3,\n+                              )\n+                            ]),\n+                        child: Column(\n+                          mainAxisAlignment: MainAxisAlignment.center,\n+                          crossAxisAlignment: CrossAxisAlignment.start,\n+                          children: [\n+                            Text(\n+                              cObj[\"service_name\"],\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 17,\n+                                fontWeight: FontWeight.w700,\n+                              ),\n+                            ),\n+                            Text(\n+                              \"\\$${estMinVal.toStringAsFixed(1)} - \\$${estMaxVal.toStringAsFixed(1)}\",\n+                              style: TextStyle(\n+                                color: TColor.primary,\n+                                fontSize: 17,\n+                                fontWeight: FontWeight.w700,\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+\n+                      CachedNetworkImage(\n+                        imageUrl: cObj[\"icon\"] as String? ?? \"\",\n+                        fit: BoxFit.contain,\n+                        width: 130,\n+                        height: 100,\n+                      ),\n+                      // Image.asset(\n+                      //   cObj[\"icon\"] as String? ?? \"\",\n+                      //   fit: BoxFit.contain,\n+                      //   width: 130,\n+                      //   height: 100,\n+                      // ),\n+                    ],\n+                  ),\n+                );\n+              },\n+              separatorBuilder: (context, index) => const SizedBox(width: 15),\n+              itemCount: widget.serviceArr.length,\n+            ),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+          Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+            child: RoundButton(\n+                title: \"Book Ride\",\n+                onPressed: () {\n+                  Navigator.pop(context);\n+                  widget\n+                      .didSelect(widget.serviceArr[selectIndex] as Map? ?? {});\n+                }),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+        ],\n+      ),\n+    );\n+  }\n+}*/\n"
                },
                {
                    "date": 1725518349918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,173 +165,4 @@\n     );\n   }\n }\n \n-\n-\n-/*import 'package:cached_network_image/cached_network_image.dart';\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class CarServiceSelectView extends StatefulWidget {\n-  final List serviceArr;\n-  final Function(dynamic) didSelect;\n-\n-  const CarServiceSelectView(\n-      {super.key, required this.serviceArr, required this.didSelect});\n-\n-  @override\n-  State<CarServiceSelectView> createState() => _CarServiceSelectViewState();\n-}\n-\n-class _CarServiceSelectViewState extends State<CarServiceSelectView> {\n-  // List listArr = [\n-  //   {\n-  //     \"icon\": \"assets/img/car_1.png\",\n-  //     \"name\": \"Economy\",\n-  //     \"price\": \"\\$10-\\$20\",\n-  //   },\n-  //   {\n-  //     \"icon\": \"assets/img/car_1.png\",\n-  //     \"name\": \"Luxury\",\n-  //     \"price\": \"\\$13-\\$23\",\n-  //   },\n-  //   {\n-  //     \"icon\": \"assets/img/car_1.png\",\n-  //     \"name\": \"First Class\",\n-  //     \"price\": \"\\$25-\\$30\",\n-  //   },\n-  // ];\n-\n-  int selectIndex = 0;\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Container(\n-      height: 350,\n-      decoration: const BoxDecoration(\n-          color: Colors.white,\n-          borderRadius: BorderRadius.only(\n-            topLeft: Radius.circular(25),\n-            topRight: Radius.circular(25),\n-          ),\n-          boxShadow: [BoxShadow(color: Colors.black26, blurRadius: 5)]),\n-      child: Column(\n-        crossAxisAlignment: CrossAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n-            child: Text(\n-              \"Select Car Service\",\n-              style: TextStyle(\n-                color: TColor.primaryText,\n-                fontSize: 17,\n-                fontWeight: FontWeight.w700,\n-              ),\n-            ),\n-          ),\n-          const SizedBox(\n-            height: 15,\n-          ),\n-          SizedBox(\n-            height: 120,\n-            child: ListView.separated(\n-              scrollDirection: Axis.horizontal,\n-              itemBuilder: (context, index) {\n-                var cObj = widget.serviceArr[index] as Map? ?? {};\n-\n-                var estMinVal = (cObj[\"est_price_min\"] as double? ?? 0.0);\n-                var estMaxVal = (cObj[\"est_price_max\"] as double? ?? 0.0);\n-\n-                return GestureDetector(\n-                  onTap: () {\n-                    setState(() {\n-                      selectIndex = index;\n-                    });\n-                  },\n-                  child: Stack(\n-                    alignment: Alignment.centerLeft,\n-                    children: [\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 45),\n-                        padding: const EdgeInsets.only(\n-                          left: 90,\n-                        ),\n-                        width: 200,\n-                        height: 100,\n-                        decoration: BoxDecoration(\n-                            color: Colors.white,\n-                            borderRadius: BorderRadius.circular(15),\n-                            boxShadow: [\n-                              BoxShadow(\n-                                color: selectIndex == index\n-                                    ? TColor.primary\n-                                    : Colors.black26,\n-                                blurRadius: 3,\n-                              )\n-                            ]),\n-                        child: Column(\n-                          mainAxisAlignment: MainAxisAlignment.center,\n-                          crossAxisAlignment: CrossAxisAlignment.start,\n-                          children: [\n-                            Text(\n-                              cObj[\"service_name\"],\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 17,\n-                                fontWeight: FontWeight.w700,\n-                              ),\n-                            ),\n-                            Text(\n-                              \"\\$${estMinVal.toStringAsFixed(1)} - \\$${estMaxVal.toStringAsFixed(1)}\",\n-                              style: TextStyle(\n-                                color: TColor.primary,\n-                                fontSize: 17,\n-                                fontWeight: FontWeight.w700,\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-\n-                      CachedNetworkImage(\n-                        imageUrl: cObj[\"icon\"] as String? ?? \"\",\n-                        fit: BoxFit.contain,\n-                        width: 130,\n-                        height: 100,\n-                      ),\n-                      // Image.asset(\n-                      //   cObj[\"icon\"] as String? ?? \"\",\n-                      //   fit: BoxFit.contain,\n-                      //   width: 130,\n-                      //   height: 100,\n-                      // ),\n-                    ],\n-                  ),\n-                );\n-              },\n-              separatorBuilder: (context, index) => const SizedBox(width: 15),\n-              itemCount: widget.serviceArr.length,\n-            ),\n-          ),\n-          const SizedBox(\n-            height: 15,\n-          ),\n-          Padding(\n-            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n-            child: RoundButton(\n-                title: \"Book Ride\",\n-                onPressed: () {\n-                  Navigator.pop(context);\n-                  widget\n-                      .didSelect(widget.serviceArr[selectIndex] as Map? ?? {});\n-                }),\n-          ),\n-          const SizedBox(\n-            height: 15,\n-          ),\n-        ],\n-      ),\n-    );\n-  }\n-}*/\n"
                },
                {
                    "date": 1725860336394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+import 'package:cached_network_image/cached_network_image.dart';\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class CarServiceSelectView extends StatefulWidget {\n+  final List serviceArr;\n+  final Function(dynamic) didSelect;\n+\n+  const CarServiceSelectView(\n+      {super.key, required this.serviceArr, required this.didSelect});\n+\n+  @override\n+  State<CarServiceSelectView> createState() => _CarServiceSelectViewState();\n+}\n+\n+class _CarServiceSelectViewState extends State<CarServiceSelectView> {\n+  // List listArr = [\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"Economy\",\n+  //     \"price\": \"\\$10-\\$20\",\n+  //   },\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"Luxury\",\n+  //     \"price\": \"\\$13-\\$23\",\n+  //   },\n+  //   {\n+  //     \"icon\": \"assets/img/car_1.png\",\n+  //     \"name\": \"First Class\",\n+  //     \"price\": \"\\$25-\\$30\",\n+  //   },\n+  // ];\n+\n+  int selectIndex = 0;\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Container(\n+      height: 350,\n+      decoration: const BoxDecoration(\n+          color: Colors.white,\n+          borderRadius: BorderRadius.only(\n+            topLeft: Radius.circular(25),\n+            topRight: Radius.circular(25),\n+          ),\n+          boxShadow: [BoxShadow(color: Colors.black26, blurRadius: 5)]),\n+      child: Column(\n+        crossAxisAlignment: CrossAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+            child: Text(\n+              \"Select Car Service\",\n+              style: TextStyle(\n+                color: TColor.primaryText,\n+                fontSize: 17,\n+                fontWeight: FontWeight.w700,\n+              ),\n+            ),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+          SizedBox(\n+            height: 120,\n+            child: ListView.separated(\n+              scrollDirection: Axis.horizontal,\n+              itemBuilder: (context, index) {\n+                var cObj = widget.serviceArr[index] as Map? ?? {};\n+\n+                var estMinVal = (cObj[\"est_price_min\"] as double? ?? 0.0);\n+                var estMaxVal = (cObj[\"est_price_max\"] as double? ?? 0.0);\n+\n+                return GestureDetector(\n+                  onTap: () {\n+                    setState(() {\n+                      selectIndex = index;\n+                    });\n+                  },\n+                  child: Stack(\n+                    alignment: Alignment.centerLeft,\n+                    children: [\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 45),\n+                        padding: const EdgeInsets.only(\n+                          left: 90,\n+                        ),\n+                        width: 200,\n+                        height: 100,\n+                        decoration: BoxDecoration(\n+                            color: Colors.white,\n+                            borderRadius: BorderRadius.circular(15),\n+                            boxShadow: [\n+                              BoxShadow(\n+                                color: selectIndex == index\n+                                    ? TColor.primary\n+                                    : Colors.black26,\n+                                blurRadius: 3,\n+                              )\n+                            ]),\n+                        child: Column(\n+                          mainAxisAlignment: MainAxisAlignment.center,\n+                          crossAxisAlignment: CrossAxisAlignment.start,\n+                          children: [\n+                            Text(\n+                              cObj[\"service_name\"],\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 17,\n+                                fontWeight: FontWeight.w700,\n+                              ),\n+                            ),\n+                            Text(\n+                              \"\\$${estMinVal.toStringAsFixed(1)} - \\$${estMaxVal.toStringAsFixed(1)}\",\n+                              style: TextStyle(\n+                                color: TColor.primary,\n+                                fontSize: 17,\n+                                fontWeight: FontWeight.w700,\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+\n+                      CachedNetworkImage(\n+                        imageUrl: cObj[\"icon\"] as String? ?? \"\",\n+                        fit: BoxFit.contain,\n+                        width: 130,\n+                        height: 100,\n+                      ),\n+                      // Image.asset(\n+                      //   cObj[\"icon\"] as String? ?? \"\",\n+                      //   fit: BoxFit.contain,\n+                      //   width: 130,\n+                      //   height: 100,\n+                      // ),\n+                    ],\n+                  ),\n+                );\n+              },\n+              separatorBuilder: (context, index) => const SizedBox(width: 15),\n+              itemCount: widget.serviceArr.length,\n+            ),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+          Padding(\n+            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+            child: RoundButton(\n+                title: \"Book Ride\",\n+                onPressed: () {\n+                  Navigator.pop(context);\n+                  widget\n+                      .didSelect(widget.serviceArr[selectIndex] as Map? ?? {});\n+                }),\n+          ),\n+          const SizedBox(\n+            height: 15,\n+          ),\n+        ],\n+      ),\n+    );\n+  }\n+}\n"
                }
            ],
            "date": 1722672316670,
            "name": "Commit-0",
            "content": "import 'package:cached_network_image/cached_network_image.dart';\nimport 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\n\nclass CarServiceSelectView extends StatefulWidget {\n  final List serviceArr;\n  final Function(dynamic) didSelect;\n\n  const CarServiceSelectView(\n      {super.key, required this.serviceArr, required this.didSelect});\n\n  @override\n  State<CarServiceSelectView> createState() => _CarServiceSelectViewState();\n}\n\nclass _CarServiceSelectViewState extends State<CarServiceSelectView> {\n  // List listArr = [\n  //   {\n  //     \"icon\": \"assets/img/car_1.png\",\n  //     \"name\": \"Economy\",\n  //     \"price\": \"\\$10-\\$20\",\n  //   },\n  //   {\n  //     \"icon\": \"assets/img/car_1.png\",\n  //     \"name\": \"Luxury\",\n  //     \"price\": \"\\$13-\\$23\",\n  //   },\n  //   {\n  //     \"icon\": \"assets/img/car_1.png\",\n  //     \"name\": \"First Class\",\n  //     \"price\": \"\\$25-\\$30\",\n  //   },\n  // ];\n\n  int selectIndex = 0;\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      height: 350,\n      decoration: const BoxDecoration(\n          color: Colors.white,\n          borderRadius: BorderRadius.only(\n            topLeft: Radius.circular(25),\n            topRight: Radius.circular(25),\n          ),\n          boxShadow: [BoxShadow(color: Colors.black26, blurRadius: 5)]),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n            child: Text(\n              \"Select Car Service\",\n              style: TextStyle(\n                color: TColor.primaryText,\n                fontSize: 17,\n                fontWeight: FontWeight.w700,\n              ),\n            ),\n          ),\n          const SizedBox(\n            height: 15,\n          ),\n          SizedBox(\n            height: 120,\n            child: ListView.separated(\n              scrollDirection: Axis.horizontal,\n              itemBuilder: (context, index) {\n                var cObj = widget.serviceArr[index] as Map? ?? {};\n\n                var estMinVal = (cObj[\"est_price_min\"] as double? ?? 0.0);\n                var estMaxVal = (cObj[\"est_price_max\"] as double? ?? 0.0);\n\n                return GestureDetector(\n                  onTap: () {\n                    setState(() {\n                      selectIndex = index;\n                    });\n                  },\n                  child: Stack(\n                    alignment: Alignment.centerLeft,\n                    children: [\n                      Container(\n                        margin: const EdgeInsets.only(left: 45),\n                        padding: const EdgeInsets.only(\n                          left: 90,\n                        ),\n                        width: 200,\n                        height: 100,\n                        decoration: BoxDecoration(\n                            color: Colors.white,\n                            borderRadius: BorderRadius.circular(15),\n                            boxShadow: [\n                              BoxShadow(\n                                color: selectIndex == index\n                                    ? TColor.primary\n                                    : Colors.black26,\n                                blurRadius: 3,\n                              )\n                            ]),\n                        child: Column(\n                          mainAxisAlignment: MainAxisAlignment.center,\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(\n                              cObj[\"service_name\"],\n                              style: TextStyle(\n                                color: TColor.primaryText,\n                                fontSize: 17,\n                                fontWeight: FontWeight.w700,\n                              ),\n                            ),\n                            Text(\n                              \"\\$${estMinVal.toStringAsFixed(1)} - \\$${estMaxVal.toStringAsFixed(1)}\",\n                              style: TextStyle(\n                                color: TColor.primary,\n                                fontSize: 17,\n                                fontWeight: FontWeight.w700,\n                              ),\n                            ),\n                          ],\n                        ),\n                      ),\n\n                      CachedNetworkImage(\n                        imageUrl: cObj[\"icon\"] as String? ?? \"\",\n                        fit: BoxFit.contain,\n                        width: 130,\n                        height: 100,\n                      ),\n                      // Image.asset(\n                      //   cObj[\"icon\"] as String? ?? \"\",\n                      //   fit: BoxFit.contain,\n                      //   width: 130,\n                      //   height: 100,\n                      // ),\n                    ],\n                  ),\n                );\n              },\n              separatorBuilder: (context, index) => const SizedBox(width: 15),\n              itemCount: widget.serviceArr.length,\n            ),\n          ),\n          const SizedBox(\n            height: 15,\n          ),\n          Padding(\n            padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n            child: RoundButton(\n                title: \"Book Ride\",\n                onPressed: () {\n                  Navigator.pop(context);\n                  widget\n                      .didSelect(widget.serviceArr[selectIndex] as Map? ?? {});\n                }),\n          ),\n          const SizedBox(\n            height: 15,\n          ),\n        ],\n      ),\n    );\n  }\n}\n"
        }
    ]
}