{
    "sourceFile": "lib/view/home/tip_request_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 23,
            "patches": [
                {
                    "date": 1719737585861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719738814756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,9 +259,9 @@\n                        const SizedBox(\n                         width: 15,),\n \n                         Text(\n-                              \"Moon Light Drug Distributers, Ghorahi Nepal\",\n+                              \"Moon Light Drug Distributers, Ghorahi Nepal 456gdsdsfds\",\n                               style: TextStyle(\n                                 color: TColor.primaryText,\n                                 fontSize: 15,\n                                 \n"
                },
                {
                    "date": 1719738849731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,16 +258,18 @@\n \n                        const SizedBox(\n                         width: 15,),\n \n-                        Text(\n-                              \"Moon Light Drug Distributers, Ghorahi Nepal 456gdsdsfds\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                                \n-                              ),\n-                              ),\n+                        Expanded(\n+                          child: Text(\n+                                \"Moon Light Drug Distributers, Ghorahi Nepal 456gdsdsfds\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n                           \n                         ],\n                        \n                      ),\n"
                },
                {
                    "date": 1719738992108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -225,16 +225,18 @@\n \n                        const SizedBox(\n                         width: 15,),\n \n-                        Text(\n-                               \"23 Dang Nepal , Ring Road\", \n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                                \n-                              ),\n-                              ),\n+                        Expanded(\n+                          child: Text(\n+                                 \"23 Dang Nepal , Ring Road\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n                           \n                         ],\n                        \n                      ),\n@@ -260,9 +262,9 @@\n                         width: 15,),\n \n                         Expanded(\n                           child: Text(\n-                                \"Moon Light Drug Distributers, Ghorahi Nepal 456gdsdsfds\",\n+                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n                                 style: TextStyle(\n                                   color: TColor.primaryText,\n                                   fontSize: 15,\n                                   \n"
                },
                {
                    "date": 1719908796675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,61 +46,66 @@\n   @override\n Widget build(BuildContext context) {\n \n   return Scaffold(\n-    body: Stack(\n+    body: Column(\n+      crossAxisAlignment: CrossAxisAlignment.start,\n       children: [\n \n       \n     \n \n-      OSMFlutter( \n-        controller: controller,\n-        osmOption: OSMOption(\n-          enableRotationByGesture: true,\n-             \n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n+      SizedBox(\n+        width: context.width,\n+        height: context.width * 0.7,\n+        child: OSMFlutter( \n+          controller: controller,\n+          osmOption: OSMOption(\n+            enableRotationByGesture: true,\n+               \n+              zoomOption: const ZoomOption(\n+                    initZoom: 8,\n+                    minZoomLevel: 3,\n+                    maxZoomLevel: 19,\n+                    stepZoom: 1.0,\n+              ),\n+                staticPoints: [],\n+              roadConfiguration:const RoadOption(\n+                      roadColor: Colors.blueAccent,\n+              ),\n+             userLocationMarker: UserLocationMaker (\n+                  personMarker: const MarkerIcon(\n+                      icon: Icon(\n+                          Icons.location_history_rounded,\n+                          color: Colors.red,\n+                          size: 48,\n+                      ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                      icon: Icon(\n+                          Icons.double_arrow,\n+                          size: 48,\n+                      ),\n+                  ),\n+              ),\n+        \n+              showDefaultInfoWindow: false\n+          ),\n+          onMapIsReady: (isReady) {\n+            if(isReady) {\n+              print(\"map is ready\");\n+            }\n+          },\n+          onLocationChanged: (myLocation) {\n+             print(\"user location :$myLocation\");\n+          },  \n+        \n+          onGeoPointClicked: (myLocation) {\n+             print(\"GeoPointClicked location :$myLocation\");\n+          },  \n             ),\n-              staticPoints: [],\n-            roadConfiguration:const RoadOption(\n-                    roadColor: Colors.blueAccent,\n-            ),\n-           userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n+      ),\n \n-            showDefaultInfoWindow: false\n-        ),\n-        onMapIsReady: (isReady) {\n-          if(isReady) {\n-            print(\"map is ready\");\n-          }\n-        },\n-        onLocationChanged: (myLocation) {\n-           print(\"user location :$myLocation\");\n-        },  \n-\n-        onGeoPointClicked: (myLocation) {\n-           print(\"GeoPointClicked location :$myLocation\");\n-        },  \n-    ),\n-\n     Column(\n \n       mainAxisAlignment: MainAxisAlignment.end,\n       children: [\n"
                },
                {
                    "date": 1719908953047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,66 +46,61 @@\n   @override\n Widget build(BuildContext context) {\n \n   return Scaffold(\n-    body: Column(\n-      crossAxisAlignment: CrossAxisAlignment.start,\n+    body: Stack(\n       children: [\n \n       \n     \n \n-      SizedBox(\n-        width: context.width,\n-        height: context.width * 0.7,\n-        child: OSMFlutter( \n-          controller: controller,\n-          osmOption: OSMOption(\n-            enableRotationByGesture: true,\n-               \n-              zoomOption: const ZoomOption(\n-                    initZoom: 8,\n-                    minZoomLevel: 3,\n-                    maxZoomLevel: 19,\n-                    stepZoom: 1.0,\n-              ),\n-                staticPoints: [],\n-              roadConfiguration:const RoadOption(\n-                      roadColor: Colors.blueAccent,\n-              ),\n-             userLocationMarker: UserLocationMaker (\n-                  personMarker: const MarkerIcon(\n-                      icon: Icon(\n-                          Icons.location_history_rounded,\n-                          color: Colors.red,\n-                          size: 48,\n-                      ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                      icon: Icon(\n-                          Icons.double_arrow,\n-                          size: 48,\n-                      ),\n-                  ),\n-              ),\n-        \n-              showDefaultInfoWindow: false\n-          ),\n-          onMapIsReady: (isReady) {\n-            if(isReady) {\n-              print(\"map is ready\");\n-            }\n-          },\n-          onLocationChanged: (myLocation) {\n-             print(\"user location :$myLocation\");\n-          },  \n-        \n-          onGeoPointClicked: (myLocation) {\n-             print(\"GeoPointClicked location :$myLocation\");\n-          },  \n+      OSMFlutter( \n+        controller: controller,\n+        osmOption: OSMOption(\n+          enableRotationByGesture: true,\n+             \n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n             ),\n-      ),\n+              staticPoints: [],\n+            roadConfiguration:const RoadOption(\n+                    roadColor: Colors.blueAccent,\n+            ),\n+           userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n \n+            showDefaultInfoWindow: false\n+        ),\n+        onMapIsReady: (isReady) {\n+          if(isReady) {\n+            print(\"map is ready\");\n+          }\n+        },\n+        onLocationChanged: (myLocation) {\n+           print(\"user location :$myLocation\");\n+        },  \n+\n+        onGeoPointClicked: (myLocation) {\n+           print(\"GeoPointClicked location :$myLocation\");\n+        },  \n+    ),\n+\n     Column(\n \n       mainAxisAlignment: MainAxisAlignment.end,\n       children: [\n"
                },
                {
                    "date": 1719930283178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,465 @@\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter/rendering.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+\n+\n+\n+class TipRequestView extends StatefulWidget {\n+  const TipRequestView({super.key});\n+\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+\n+}\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+\n+  @override\n+void initState () {\n+  super.initState();\n+  controller = MapController(\n+                             initPosition: GeoPoint(\n+        latitude: 28.0398257,\n+        longitude: 82.4838780,\n+      ),\n+                            \n+            );\n+\n+            controller.addObserver(this);\n+}\n+            @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    body: Stack(\n+      children: [\n+\n+      \n+    \n+\n+      OSMFlutter( \n+        controller: controller,\n+        osmOption: OSMOption(\n+          enableRotationByGesture: true,\n+             \n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+              staticPoints: [],\n+            roadConfiguration:const RoadOption(\n+                    roadColor: Colors.blueAccent,\n+            ),\n+           userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+\n+            showDefaultInfoWindow: false\n+        ),\n+        onMapIsReady: (isReady) {\n+          if(isReady) {\n+            print(\"map is ready\");\n+          }\n+        },\n+        onLocationChanged: (myLocation) {\n+           print(\"user location :$myLocation\");\n+        },  \n+\n+        onGeoPointClicked: (myLocation) {\n+           print(\"GeoPointClicked location :$myLocation\");\n+        },  \n+    ),\n+\n+    Column(\n+\n+      mainAxisAlignment: MainAxisAlignment.end,\n+      children: [\n+\n+       \n+\n+        Container(\n+          padding: const EdgeInsets.symmetric(vertical: 15),\n+\n+           decoration: const BoxDecoration(\n+                  color: Colors.white,\n+                  borderRadius: BorderRadius.only(\n+                  topLeft: Radius.circular(10),\n+                  topRight: Radius.circular(10), ),\n+                  boxShadow:  [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset (0,-5),\n+                     ),\n+                 ]\n+                 \n+                  ),\n+          child: Column(\n+            children: [\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                \n+               \n+\n+                Text(\n+                      \"25 min\", \n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 25,\n+                        fontWeight: FontWeight.w800,\n+                      ),\n+                    ),\n+\n+               \n+                ],\n+              ),\n+\n+             const SizedBox(\n+              height: 8,\n+             ),\n+            Row(\n+             \n+              children: [\n+\n+                 Expanded(\n+                   child: Text(\n+                        \"\\$12.50\", \n+                        textAlign: TextAlign.center,\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 18,\n+                          \n+                        ),\n+                      ),\n+                 ),\n+                    Expanded(\n+                      child: Text(\n+                        \"4.5 KM\", \n+                        textAlign: TextAlign.center,\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 18,\n+                          \n+                        ),\n+                      ),\n+                    ),\n+                     Expanded(\n+                       child: Padding(\n+                         padding: const EdgeInsets.symmetric(horizontal: 25, \n+                         vertical: 8),\n+                       \n+                         child: Row(\n+                         mainAxisAlignment: MainAxisAlignment.center,\n+                           children: [\n+                            Image.asset\n+                            (\"assets/img/rate_tip.png\", \n+                            width: 15, \n+                            height: 15, \n+                            ),\n+                         \n+                            const SizedBox(width: 4,),\n+                            \n+                             Text(\n+                              \"3.5\", \n+                              style: TextStyle(\n+                                color: TColor.secondaryText,\n+                                fontSize: 18,\n+                                \n+                              ),\n+                              ),\n+                           ],\n+                         ),\n+                       ),\n+                     ),\n+              ],\n+            ),\n+\n+            const SizedBox(\n+              height: 15,\n+            ),\n+\n+                     Padding(\n+                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n+                       child:\n+                        Row(\n+                        children: [\n+                       Container(\n+                        width: 10,\n+                        height: 10,\n+                        decoration: BoxDecoration(\n+                          color: TColor.secondary,\n+                        borderRadius: BorderRadius.circular(10)\n+                        ),\n+                       ),\n+\n+                       const SizedBox(\n+                        width: 15,),\n+\n+                        Expanded(\n+                          child: Text(\n+                                 \"23 Dang Nepal , Ring Road\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n+                          \n+                        ],\n+                       \n+                     ),\n+              \n+            ),\n+\n+\n+             Padding(\n+                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n+                       child:\n+                        Row(\n+                        children: [\n+                       Container(\n+                        width: 10,\n+                        height: 10,\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                      \n+                        ),\n+                       ),\n+\n+                       const SizedBox(\n+                        width: 15,),\n+\n+                        Expanded(\n+                          child: Text(\n+                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n+                          \n+                        ],\n+                       \n+                     ),\n+              \n+            ),\n+\n+             const SizedBox(\n+              height: 15,\n+            ),\n+\n+             InkWell(\n+              onTap: () {\n+             context.push( const RunRideView() );\n+              },\n+               child: Container(\n+                          width: double.maxFinite,\n+                          margin: const EdgeInsets.symmetric(horizontal: 20),\n+                          padding: const EdgeInsets.all(6),\n+                          decoration: BoxDecoration(\n+                            color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                          ),\n+                          child: Stack(\n+                            alignment: Alignment.centerRight,\n+                            children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                          Text(\n+                                \"TAP TO ACCEPT\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 17,\n+                                  fontWeight: FontWeight.w700,\n+                                  \n+                                ),\n+                                ),\n+                              ],\n+                            ),\n+               \n+                            Container(\n+                          height: 40,\n+                          width: 40,\n+                          decoration: BoxDecoration(\n+                            color: Colors.black12,\n+                          borderRadius: BorderRadius.circular(20),\n+                          ),\n+                          alignment: Alignment.center,\n+                          child:\n+               \n+                          Text(\n+                                \"15\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,),\n+                                  \n+                                ),\n+                                ),\n+                          ],),\n+                         ),\n+             ),\n+\n+\n+             const SizedBox(\n+              height: 25,\n+            ),\n+            \n+            ],\n+          ),\n+        )\n+      ],\n+    ),\n+    \n+    SafeArea(\n+      child: Column(\n+      mainAxisAlignment: MainAxisAlignment.start,\n+      children: [\n+        Padding(\n+          padding: const EdgeInsets.all(15),\n+          child: Row(\n+            mainAxisAlignment: MainAxisAlignment.center,\n+            children: [\n+             \n+          \n+                InkWell(\n+                  onTap: () {\n+                   context.pop();\n+                  },\n+                  child: Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            \n+                               decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(30),\n+                      \n+                      boxShadow: const [\n+                      BoxShadow(\n+                        color: Colors.black26,\n+                        blurRadius: 10,\n+                        \n+                         ),\n+                              \n+                              ]),\n+                              child:Row(\n+                                mainAxisSize: MainAxisSize.min,\n+                                crossAxisAlignment: CrossAxisAlignment.center,\n+                                children: [\n+                       Image.asset(\n+                        \"assets/img/close.png\", \n+                        width: 25, \n+                        height: 25,\n+                        ),\n+                 \n+                         Text(\n+                          \"No Thanks\", \n+                          style: TextStyle(\n+                            color: TColor.primaryText,\n+                            fontSize: 16,\n+                            \n+                          ),\n+                        ),\n+                                ],\n+                  )),\n+                ),\n+                \n+              \n+              \n+            ],\n+          ),\n+        )\n+      ],\n+    ),\n+    )\n+\n+    ],\n+  ),\n+  );\n+}\n+\n+void addMarker() async {\n+  await controller.setMarkerOfStaticPoint(\n+    id: \"pickup\", \n+    markerIcon: MarkerIcon(\n+    iconWidget: Image.asset(\n+      \"assets/img/pickup_pin.png\", \n+      width: 80, \n+      height: 80,\n+      ),\n+  ),);\n+\n+   await controller.setMarkerOfStaticPoint(\n+    id: \"dropoff\", \n+    markerIcon: MarkerIcon(\n+    iconWidget: Image.asset(\n+      \"assets/img/drop_pin.png\", \n+      width: 80, \n+      height: 80,\n+      ),\n+  ),);\n+\n+                            \n+  await controller.setStaticPosition( \n+    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n+    \"pickup\");\n+\n+    await controller.setStaticPosition( \n+    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n+    \"dropoff\");\n+\n+loadMapRoad();\n+}\n+void loadMapRoad() async {\n+await controller.drawRoad( \n+  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n+  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n+  roadType: RoadType.car,\n+  roadOption: \n+  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n+  );\n+}\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async{\n+    if(isReady) {\n+      addMarker();\n+    }\n+    \n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722774243860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,471 @@\n import 'package:flutter/rendering.dart';\n import 'package:flutter/widgets.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/view/home/run_ride_view.dart';\n \n \n \n+\n class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+  //23.02756018230479, 72.58131973941731\n+  //23.02726396414328, 72.5851928489523\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+        longitude:\n+            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+      ),\n+    );\n+\n+    controller.addObserver(this);\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: controller,\n+            osmOption: OSMOption(\n+                enableRotationByGesture: true,\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                staticPoints: [],\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.blueAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                  defaultMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                ),\n+                showDefaultInfoWindow: false),\n+            onMapIsReady: (isReady) {\n+              if (isReady) {\n+                print(\"map is ready\");\n+              }\n+            },\n+            onLocationChanged: (myLocation) {\n+              print(\"user location :$myLocation\");\n+            },\n+            onGeoPointClicked: (myLocation) {\n+              print(\"GeoPointClicked location :$myLocation\");\n+            },\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void addMarker() async {\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"pickup\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/pickup_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"dropoff\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/drop_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    //23.02756018230479, 72.58131973941731\n+    //23.02726396414328, 72.5851928489523\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude:\n+              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n+    ], \"pickup\");\n+\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n+    ], \"dropoff\");\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    await controller.drawRoad(\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n+        roadType: RoadType.car,\n+        roadOption: const RoadOption(\n+          roadColor: Colors.blueAccent,\n+          roadBorderWidth: 5,\n+        ));\n+  }\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async {\n+    if (isReady) {\n+      addMarker();\n+    }\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+\n+/*class TipRequestView extends StatefulWidget {\n   const TipRequestView({super.key});\n \n \n   @override\n@@ -461,5 +919,5 @@\n       addMarker();\n     }\n     \n   }\n-}\n\\ No newline at end of file\n+}*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722774408069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,923 @@\n+\n+\n+import 'package:flutter/cupertino.dart';\n+import 'package:flutter/material.dart';\n+import 'package:flutter/rendering.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+\n+\n+\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+  //23.02756018230479, 72.58131973941731\n+  //23.02726396414328, 72.5851928489523\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+        longitude:\n+            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+      ),\n+    );\n+\n+    controller.addObserver(this);\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: controller,\n+            osmOption: OSMOption(\n+                enableRotationByGesture: true,\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                staticPoints: [],\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.blueAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                  defaultMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                ),\n+                showDefaultInfoWindow: false),\n+            onMapIsReady: (isReady) {\n+              if (isReady) {\n+                print(\"map is ready\");\n+              }\n+            },\n+            onLocationChanged: (myLocation) {\n+              print(\"user location :$myLocation\");\n+            },\n+            onGeoPointClicked: (myLocation) {\n+              print(\"GeoPointClicked location :$myLocation\");\n+            },\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void addMarker() async {\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"pickup\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/pickup_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"dropoff\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/drop_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    //23.02756018230479, 72.58131973941731\n+    //23.02726396414328, 72.5851928489523\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude:\n+              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n+    ], \"pickup\");\n+\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n+    ], \"dropoff\");\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    await controller.drawRoad(\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n+        roadType: RoadType.car,\n+        roadOption: const RoadOption(\n+          roadColor: Colors.blueAccent,\n+          roadBorderWidth: 5,\n+        ));\n+  }\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async {\n+    if (isReady) {\n+      addMarker();\n+    }\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+\n+/*class TipRequestView extends StatefulWidget {\n+  const TipRequestView({super.key});\n+\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+\n+}\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+\n+  @override\n+void initState () {\n+  super.initState();\n+  controller = MapController(\n+                             initPosition: GeoPoint(\n+        latitude: 28.0398257,\n+        longitude: 82.4838780,\n+      ),\n+                            \n+            );\n+\n+            controller.addObserver(this);\n+}\n+            @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    body: Stack(\n+      children: [\n+\n+      \n+    \n+\n+      OSMFlutter( \n+        controller: controller,\n+        osmOption: OSMOption(\n+          enableRotationByGesture: true,\n+             \n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+              staticPoints: [],\n+            roadConfiguration:const RoadOption(\n+                    roadColor: Colors.blueAccent,\n+            ),\n+           userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+\n+            showDefaultInfoWindow: false\n+        ),\n+        onMapIsReady: (isReady) {\n+          if(isReady) {\n+            print(\"map is ready\");\n+          }\n+        },\n+        onLocationChanged: (myLocation) {\n+           print(\"user location :$myLocation\");\n+        },  \n+\n+        onGeoPointClicked: (myLocation) {\n+           print(\"GeoPointClicked location :$myLocation\");\n+        },  \n+    ),\n+\n+    Column(\n+\n+      mainAxisAlignment: MainAxisAlignment.end,\n+      children: [\n+\n+       \n+\n+        Container(\n+          padding: const EdgeInsets.symmetric(vertical: 15),\n+\n+           decoration: const BoxDecoration(\n+                  color: Colors.white,\n+                  borderRadius: BorderRadius.only(\n+                  topLeft: Radius.circular(10),\n+                  topRight: Radius.circular(10), ),\n+                  boxShadow:  [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset (0,-5),\n+                     ),\n+                 ]\n+                 \n+                  ),\n+          child: Column(\n+            children: [\n+              Row(\n+                mainAxisAlignment: MainAxisAlignment.center,\n+                children: [\n+                \n+               \n+\n+                Text(\n+                      \"25 min\", \n+                      style: TextStyle(\n+                        color: TColor.primaryText,\n+                        fontSize: 25,\n+                        fontWeight: FontWeight.w800,\n+                      ),\n+                    ),\n+\n+               \n+                ],\n+              ),\n+\n+             const SizedBox(\n+              height: 8,\n+             ),\n+            Row(\n+             \n+              children: [\n+\n+                 Expanded(\n+                   child: Text(\n+                        \"\\$12.50\", \n+                        textAlign: TextAlign.center,\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 18,\n+                          \n+                        ),\n+                      ),\n+                 ),\n+                    Expanded(\n+                      child: Text(\n+                        \"4.5 KM\", \n+                        textAlign: TextAlign.center,\n+                        style: TextStyle(\n+                          color: TColor.secondaryText,\n+                          fontSize: 18,\n+                          \n+                        ),\n+                      ),\n+                    ),\n+                     Expanded(\n+                       child: Padding(\n+                         padding: const EdgeInsets.symmetric(horizontal: 25, \n+                         vertical: 8),\n+                       \n+                         child: Row(\n+                         mainAxisAlignment: MainAxisAlignment.center,\n+                           children: [\n+                            Image.asset\n+                            (\"assets/img/rate_tip.png\", \n+                            width: 15, \n+                            height: 15, \n+                            ),\n+                         \n+                            const SizedBox(width: 4,),\n+                            \n+                             Text(\n+                              \"3.5\", \n+                              style: TextStyle(\n+                                color: TColor.secondaryText,\n+                                fontSize: 18,\n+                                \n+                              ),\n+                              ),\n+                           ],\n+                         ),\n+                       ),\n+                     ),\n+              ],\n+            ),\n+\n+            const SizedBox(\n+              height: 15,\n+            ),\n+\n+                     Padding(\n+                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n+                       child:\n+                        Row(\n+                        children: [\n+                       Container(\n+                        width: 10,\n+                        height: 10,\n+                        decoration: BoxDecoration(\n+                          color: TColor.secondary,\n+                        borderRadius: BorderRadius.circular(10)\n+                        ),\n+                       ),\n+\n+                       const SizedBox(\n+                        width: 15,),\n+\n+                        Expanded(\n+                          child: Text(\n+                                 \"23 Dang Nepal , Ring Road\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n+                          \n+                        ],\n+                       \n+                     ),\n+              \n+            ),\n+\n+\n+             Padding(\n+                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n+                       child:\n+                        Row(\n+                        children: [\n+                       Container(\n+                        width: 10,\n+                        height: 10,\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                      \n+                        ),\n+                       ),\n+\n+                       const SizedBox(\n+                        width: 15,),\n+\n+                        Expanded(\n+                          child: Text(\n+                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryText,\n+                                  fontSize: 15,\n+                                  \n+                                ),\n+                                ),\n+                        ),\n+                          \n+                        ],\n+                       \n+                     ),\n+              \n+            ),\n+\n+             const SizedBox(\n+              height: 15,\n+            ),\n+\n+             InkWell(\n+              onTap: () {\n+             context.push( const RunRideView() );\n+              },\n+               child: Container(\n+                          width: double.maxFinite,\n+                          margin: const EdgeInsets.symmetric(horizontal: 20),\n+                          padding: const EdgeInsets.all(6),\n+                          decoration: BoxDecoration(\n+                            color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                          ),\n+                          child: Stack(\n+                            alignment: Alignment.centerRight,\n+                            children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                          Text(\n+                                \"TAP TO ACCEPT\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 17,\n+                                  fontWeight: FontWeight.w700,\n+                                  \n+                                ),\n+                                ),\n+                              ],\n+                            ),\n+               \n+                            Container(\n+                          height: 40,\n+                          width: 40,\n+                          decoration: BoxDecoration(\n+                            color: Colors.black12,\n+                          borderRadius: BorderRadius.circular(20),\n+                          ),\n+                          alignment: Alignment.center,\n+                          child:\n+               \n+                          Text(\n+                                \"15\", \n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,),\n+                                  \n+                                ),\n+                                ),\n+                          ],),\n+                         ),\n+             ),\n+\n+\n+             const SizedBox(\n+              height: 25,\n+            ),\n+            \n+            ],\n+          ),\n+        )\n+      ],\n+    ),\n+    \n+    SafeArea(\n+      child: Column(\n+      mainAxisAlignment: MainAxisAlignment.start,\n+      children: [\n+        Padding(\n+          padding: const EdgeInsets.all(15),\n+          child: Row(\n+            mainAxisAlignment: MainAxisAlignment.center,\n+            children: [\n+             \n+          \n+                InkWell(\n+                  onTap: () {\n+                   context.pop();\n+                  },\n+                  child: Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            \n+                               decoration: BoxDecoration(\n+                      color: Colors.white,\n+                      borderRadius: BorderRadius.circular(30),\n+                      \n+                      boxShadow: const [\n+                      BoxShadow(\n+                        color: Colors.black26,\n+                        blurRadius: 10,\n+                        \n+                         ),\n+                              \n+                              ]),\n+                              child:Row(\n+                                mainAxisSize: MainAxisSize.min,\n+                                crossAxisAlignment: CrossAxisAlignment.center,\n+                                children: [\n+                       Image.asset(\n+                        \"assets/img/close.png\", \n+                        width: 25, \n+                        height: 25,\n+                        ),\n+                 \n+                         Text(\n+                          \"No Thanks\", \n+                          style: TextStyle(\n+                            color: TColor.primaryText,\n+                            fontSize: 16,\n+                            \n+                          ),\n+                        ),\n+                                ],\n+                  )),\n+                ),\n+                \n+              \n+              \n+            ],\n+          ),\n+        )\n+      ],\n+    ),\n+    )\n+\n+    ],\n+  ),\n+  );\n+}\n+\n+void addMarker() async {\n+  await controller.setMarkerOfStaticPoint(\n+    id: \"pickup\", \n+    markerIcon: MarkerIcon(\n+    iconWidget: Image.asset(\n+      \"assets/img/pickup_pin.png\", \n+      width: 80, \n+      height: 80,\n+      ),\n+  ),);\n+\n+   await controller.setMarkerOfStaticPoint(\n+    id: \"dropoff\", \n+    markerIcon: MarkerIcon(\n+    iconWidget: Image.asset(\n+      \"assets/img/drop_pin.png\", \n+      width: 80, \n+      height: 80,\n+      ),\n+  ),);\n+\n+                            \n+  await controller.setStaticPosition( \n+    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n+    \"pickup\");\n+\n+    await controller.setStaticPosition( \n+    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n+    \"dropoff\");\n+\n+loadMapRoad();\n+}\n+void loadMapRoad() async {\n+await controller.drawRoad( \n+  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n+  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n+  roadType: RoadType.car,\n+  roadOption: \n+  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n+  );\n+}\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async{\n+    if(isReady) {\n+      addMarker();\n+    }\n+    \n+  }\n+}*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1723292500346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n   bool isOpen = true;\n \n   late MapController controller;\n+  //latitude: 33.583332, longitude: 130.399994\n   //23.02756018230479, 72.58131973941731\n   //23.02726396414328, 72.5851928489523\n \n   @override\n@@ -365,9 +366,9 @@\n           height: 80,\n         ),\n       ),\n     );\n-\n+   //latitude: 33.583332, longitude: 130.399994\n     //23.02756018230479, 72.58131973941731\n     //23.02726396414328, 72.5851928489523\n     await controller.setStaticPosition([\n       GeoPoint(\n"
                },
                {
                    "date": 1724754948972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,12 @@\n \n \n-import 'package:flutter/cupertino.dart';\n import 'package:flutter/material.dart';\n-import 'package:flutter/rendering.dart';\n-import 'package:flutter/widgets.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n \n \n \n \n"
                },
                {
                    "date": 1724837993770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n \n \n \n \n@@ -420,9 +421,9 @@\n         withSuccess: (responseObj) async {\n       Globs.hideHUD();\n       if (responseObj[KKey.status] == \"1\") {\n         context.pop();\n-        ////context.push(const RunRideView());\n+        context.push(const RunRideView(rObj: {},));\n         ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n             content:\n                 Text(responseObj[KKey.message] as String? ?? MSG.success)));\n         if (mounted) {\n@@ -916,1393 +917,5 @@\n       addMarker();\n     }\n     \n   }\n-}*/\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter/rendering.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-\n-\n-\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-  //23.02756018230479, 72.58131973941731\n-  //23.02726396414328, 72.5851928489523\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-        longitude:\n-            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n-      ),\n-    );\n-\n-    controller.addObserver(this);\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: controller,\n-            osmOption: OSMOption(\n-                enableRotationByGesture: true,\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                staticPoints: [],\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.blueAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                  defaultMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n-                ),\n-                showDefaultInfoWindow: false),\n-            onMapIsReady: (isReady) {\n-              if (isReady) {\n-                print(\"map is ready\");\n-              }\n-            },\n-            onLocationChanged: (myLocation) {\n-              print(\"user location :$myLocation\");\n-            },\n-            onGeoPointClicked: (myLocation) {\n-              print(\"GeoPointClicked location :$myLocation\");\n-            },\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  void addMarker() async {\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"pickup\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/pickup_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"dropoff\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/drop_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-    //23.02756018230479, 72.58131973941731\n-    //23.02726396414328, 72.5851928489523\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude:\n-              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n-    ], \"pickup\");\n-\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n-    ], \"dropoff\");\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    await controller.drawRoad(\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n-        roadType: RoadType.car,\n-        roadOption: const RoadOption(\n-          roadColor: Colors.blueAccent,\n-          roadBorderWidth: 5,\n-        ));\n-  }\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async {\n-    if (isReady) {\n-      addMarker();\n-    }\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-\n-/*class TipRequestView extends StatefulWidget {\n-  const TipRequestView({super.key});\n-\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-\n-}\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-\n-  @override\n-void initState () {\n-  super.initState();\n-  controller = MapController(\n-                             initPosition: GeoPoint(\n-        latitude: 28.0398257,\n-        longitude: 82.4838780,\n-      ),\n-                            \n-            );\n-\n-            controller.addObserver(this);\n-}\n-            @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    body: Stack(\n-      children: [\n-\n-      \n-    \n-\n-      OSMFlutter( \n-        controller: controller,\n-        osmOption: OSMOption(\n-          enableRotationByGesture: true,\n-             \n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-              staticPoints: [],\n-            roadConfiguration:const RoadOption(\n-                    roadColor: Colors.blueAccent,\n-            ),\n-           userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-\n-            showDefaultInfoWindow: false\n-        ),\n-        onMapIsReady: (isReady) {\n-          if(isReady) {\n-            print(\"map is ready\");\n-          }\n-        },\n-        onLocationChanged: (myLocation) {\n-           print(\"user location :$myLocation\");\n-        },  \n-\n-        onGeoPointClicked: (myLocation) {\n-           print(\"GeoPointClicked location :$myLocation\");\n-        },  \n-    ),\n-\n-    Column(\n-\n-      mainAxisAlignment: MainAxisAlignment.end,\n-      children: [\n-\n-       \n-\n-        Container(\n-          padding: const EdgeInsets.symmetric(vertical: 15),\n-\n-           decoration: const BoxDecoration(\n-                  color: Colors.white,\n-                  borderRadius: BorderRadius.only(\n-                  topLeft: Radius.circular(10),\n-                  topRight: Radius.circular(10), ),\n-                  boxShadow:  [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset (0,-5),\n-                     ),\n-                 ]\n-                 \n-                  ),\n-          child: Column(\n-            children: [\n-              Row(\n-                mainAxisAlignment: MainAxisAlignment.center,\n-                children: [\n-                \n-               \n-\n-                Text(\n-                      \"25 min\", \n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 25,\n-                        fontWeight: FontWeight.w800,\n-                      ),\n-                    ),\n-\n-               \n-                ],\n-              ),\n-\n-             const SizedBox(\n-              height: 8,\n-             ),\n-            Row(\n-             \n-              children: [\n-\n-                 Expanded(\n-                   child: Text(\n-                        \"\\$12.50\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                 ),\n-                    Expanded(\n-                      child: Text(\n-                        \"4.5 KM\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                    ),\n-                     Expanded(\n-                       child: Padding(\n-                         padding: const EdgeInsets.symmetric(horizontal: 25, \n-                         vertical: 8),\n-                       \n-                         child: Row(\n-                         mainAxisAlignment: MainAxisAlignment.center,\n-                           children: [\n-                            Image.asset\n-                            (\"assets/img/rate_tip.png\", \n-                            width: 15, \n-                            height: 15, \n-                            ),\n-                         \n-                            const SizedBox(width: 4,),\n-                            \n-                             Text(\n-                              \"3.5\", \n-                              style: TextStyle(\n-                                color: TColor.secondaryText,\n-                                fontSize: 18,\n-                                \n-                              ),\n-                              ),\n-                           ],\n-                         ),\n-                       ),\n-                     ),\n-              ],\n-            ),\n-\n-            const SizedBox(\n-              height: 15,\n-            ),\n-\n-                     Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.secondary,\n-                        borderRadius: BorderRadius.circular(10)\n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                 \"23 Dang Nepal , Ring Road\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-\n-             Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                      \n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-             const SizedBox(\n-              height: 15,\n-            ),\n-\n-             InkWell(\n-              onTap: () {\n-             context.push( const RunRideView() );\n-              },\n-               child: Container(\n-                          width: double.maxFinite,\n-                          margin: const EdgeInsets.symmetric(horizontal: 20),\n-                          padding: const EdgeInsets.all(6),\n-                          decoration: BoxDecoration(\n-                            color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                          ),\n-                          child: Stack(\n-                            alignment: Alignment.centerRight,\n-                            children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                          Text(\n-                                \"TAP TO ACCEPT\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 17,\n-                                  fontWeight: FontWeight.w700,\n-                                  \n-                                ),\n-                                ),\n-                              ],\n-                            ),\n-               \n-                            Container(\n-                          height: 40,\n-                          width: 40,\n-                          decoration: BoxDecoration(\n-                            color: Colors.black12,\n-                          borderRadius: BorderRadius.circular(20),\n-                          ),\n-                          alignment: Alignment.center,\n-                          child:\n-               \n-                          Text(\n-                                \"15\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,),\n-                                  \n-                                ),\n-                                ),\n-                          ],),\n-                         ),\n-             ),\n-\n-\n-             const SizedBox(\n-              height: 25,\n-            ),\n-            \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    \n-    SafeArea(\n-      child: Column(\n-      mainAxisAlignment: MainAxisAlignment.start,\n-      children: [\n-        Padding(\n-          padding: const EdgeInsets.all(15),\n-          child: Row(\n-            mainAxisAlignment: MainAxisAlignment.center,\n-            children: [\n-             \n-          \n-                InkWell(\n-                  onTap: () {\n-                   context.pop();\n-                  },\n-                  child: Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            \n-                               decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(30),\n-                      \n-                      boxShadow: const [\n-                      BoxShadow(\n-                        color: Colors.black26,\n-                        blurRadius: 10,\n-                        \n-                         ),\n-                              \n-                              ]),\n-                              child:Row(\n-                                mainAxisSize: MainAxisSize.min,\n-                                crossAxisAlignment: CrossAxisAlignment.center,\n-                                children: [\n-                       Image.asset(\n-                        \"assets/img/close.png\", \n-                        width: 25, \n-                        height: 25,\n-                        ),\n-                 \n-                         Text(\n-                          \"No Thanks\", \n-                          style: TextStyle(\n-                            color: TColor.primaryText,\n-                            fontSize: 16,\n-                            \n-                          ),\n-                        ),\n-                                ],\n-                  )),\n-                ),\n-                \n-              \n-              \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    )\n-\n-    ],\n-  ),\n-  );\n-}\n-\n-void addMarker() async {\n-  await controller.setMarkerOfStaticPoint(\n-    id: \"pickup\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/pickup_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-   await controller.setMarkerOfStaticPoint(\n-    id: \"dropoff\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/drop_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-                            \n-  await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n-    \"pickup\");\n-\n-    await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n-    \"dropoff\");\n-\n-loadMapRoad();\n-}\n-void loadMapRoad() async {\n-await controller.drawRoad( \n-  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n-  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n-  roadType: RoadType.car,\n-  roadOption: \n-  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n-  );\n-}\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async{\n-    if(isReady) {\n-      addMarker();\n-    }\n-    \n-  }\n-}*/\n-\n-\n-import 'package:flutter/cupertino.dart';\n-import 'package:flutter/material.dart';\n-import 'package:flutter/rendering.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-\n-\n-\n-class TipRequestView extends StatefulWidget {\n-  const TipRequestView({super.key});\n-\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-\n-}\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-\n-  @override\n-void initState () {\n-  super.initState();\n-  controller = MapController(\n-                             initPosition: GeoPoint(\n-        latitude: 28.0398257,\n-        longitude: 82.4838780,\n-      ),\n-                            \n-            );\n-\n-            controller.addObserver(this);\n-}\n-            @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    body: Stack(\n-      children: [\n-\n-      \n-    \n-\n-      OSMFlutter( \n-        controller: controller,\n-        osmOption: OSMOption(\n-          enableRotationByGesture: true,\n-             \n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-              staticPoints: [],\n-            roadConfiguration:const RoadOption(\n-                    roadColor: Colors.blueAccent,\n-            ),\n-           userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-\n-            showDefaultInfoWindow: false\n-        ),\n-        onMapIsReady: (isReady) {\n-          if(isReady) {\n-            print(\"map is ready\");\n-          }\n-        },\n-        onLocationChanged: (myLocation) {\n-           print(\"user location :$myLocation\");\n-        },  \n-\n-        onGeoPointClicked: (myLocation) {\n-           print(\"GeoPointClicked location :$myLocation\");\n-        },  \n-    ),\n-\n-    Column(\n-\n-      mainAxisAlignment: MainAxisAlignment.end,\n-      children: [\n-\n-       \n-\n-        Container(\n-          padding: const EdgeInsets.symmetric(vertical: 15),\n-\n-           decoration: const BoxDecoration(\n-                  color: Colors.white,\n-                  borderRadius: BorderRadius.only(\n-                  topLeft: Radius.circular(10),\n-                  topRight: Radius.circular(10), ),\n-                  boxShadow:  [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset (0,-5),\n-                     ),\n-                 ]\n-                 \n-                  ),\n-          child: Column(\n-            children: [\n-              Row(\n-                mainAxisAlignment: MainAxisAlignment.center,\n-                children: [\n-                \n-               \n-\n-                Text(\n-                      \"25 min\", \n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 25,\n-                        fontWeight: FontWeight.w800,\n-                      ),\n-                    ),\n-\n-               \n-                ],\n-              ),\n-\n-             const SizedBox(\n-              height: 8,\n-             ),\n-            Row(\n-             \n-              children: [\n-\n-                 Expanded(\n-                   child: Text(\n-                        \"\\$12.50\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                 ),\n-                    Expanded(\n-                      child: Text(\n-                        \"4.5 KM\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                    ),\n-                     Expanded(\n-                       child: Padding(\n-                         padding: const EdgeInsets.symmetric(horizontal: 25, \n-                         vertical: 8),\n-                       \n-                         child: Row(\n-                         mainAxisAlignment: MainAxisAlignment.center,\n-                           children: [\n-                            Image.asset\n-                            (\"assets/img/rate_tip.png\", \n-                            width: 15, \n-                            height: 15, \n-                            ),\n-                         \n-                            const SizedBox(width: 4,),\n-                            \n-                             Text(\n-                              \"3.5\", \n-                              style: TextStyle(\n-                                color: TColor.secondaryText,\n-                                fontSize: 18,\n-                                \n-                              ),\n-                              ),\n-                           ],\n-                         ),\n-                       ),\n-                     ),\n-              ],\n-            ),\n-\n-            const SizedBox(\n-              height: 15,\n-            ),\n-\n-                     Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.secondary,\n-                        borderRadius: BorderRadius.circular(10)\n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                 \"23 Dang Nepal , Ring Road\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-\n-             Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                      \n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-             const SizedBox(\n-              height: 15,\n-            ),\n-\n-             InkWell(\n-              onTap: () {\n-             context.push( const RunRideView() );\n-              },\n-               child: Container(\n-                          width: double.maxFinite,\n-                          margin: const EdgeInsets.symmetric(horizontal: 20),\n-                          padding: const EdgeInsets.all(6),\n-                          decoration: BoxDecoration(\n-                            color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                          ),\n-                          child: Stack(\n-                            alignment: Alignment.centerRight,\n-                            children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                          Text(\n-                                \"TAP TO ACCEPT\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 17,\n-                                  fontWeight: FontWeight.w700,\n-                                  \n-                                ),\n-                                ),\n-                              ],\n-                            ),\n-               \n-                            Container(\n-                          height: 40,\n-                          width: 40,\n-                          decoration: BoxDecoration(\n-                            color: Colors.black12,\n-                          borderRadius: BorderRadius.circular(20),\n-                          ),\n-                          alignment: Alignment.center,\n-                          child:\n-               \n-                          Text(\n-                                \"15\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,),\n-                                  \n-                                ),\n-                                ),\n-                          ],),\n-                         ),\n-             ),\n-\n-\n-             const SizedBox(\n-              height: 25,\n-            ),\n-            \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    \n-    SafeArea(\n-      child: Column(\n-      mainAxisAlignment: MainAxisAlignment.start,\n-      children: [\n-        Padding(\n-          padding: const EdgeInsets.all(15),\n-          child: Row(\n-            mainAxisAlignment: MainAxisAlignment.center,\n-            children: [\n-             \n-          \n-                InkWell(\n-                  onTap: () {\n-                   context.pop();\n-                  },\n-                  child: Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            \n-                               decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(30),\n-                      \n-                      boxShadow: const [\n-                      BoxShadow(\n-                        color: Colors.black26,\n-                        blurRadius: 10,\n-                        \n-                         ),\n-                              \n-                              ]),\n-                              child:Row(\n-                                mainAxisSize: MainAxisSize.min,\n-                                crossAxisAlignment: CrossAxisAlignment.center,\n-                                children: [\n-                       Image.asset(\n-                        \"assets/img/close.png\", \n-                        width: 25, \n-                        height: 25,\n-                        ),\n-                 \n-                         Text(\n-                          \"No Thanks\", \n-                          style: TextStyle(\n-                            color: TColor.primaryText,\n-                            fontSize: 16,\n-                            \n-                          ),\n-                        ),\n-                                ],\n-                  )),\n-                ),\n-                \n-              \n-              \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    )\n-\n-    ],\n-  ),\n-  );\n-}\n-\n-void addMarker() async {\n-  await controller.setMarkerOfStaticPoint(\n-    id: \"pickup\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/pickup_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-   await controller.setMarkerOfStaticPoint(\n-    id: \"dropoff\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/drop_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-                            \n-  await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n-    \"pickup\");\n-\n-    await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n-    \"dropoff\");\n-\n-loadMapRoad();\n-}\n-void loadMapRoad() async {\n-await controller.drawRoad( \n-  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n-  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n-  roadType: RoadType.car,\n-  roadOption: \n-  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n-  );\n-}\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async{\n-    if(isReady) {\n-      addMarker();\n-    }\n-    \n-  }\n-}\n\\ No newline at end of file\n+}*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1724838287908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n \n \n \n \n@@ -421,9 +420,9 @@\n         withSuccess: (responseObj) async {\n       Globs.hideHUD();\n       if (responseObj[KKey.status] == \"1\") {\n         context.pop();\n-        context.push(const RunRideView(rObj: {},));\n+        ////context.push(const RunRideView());\n         ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n             content:\n                 Text(responseObj[KKey.message] as String? ?? MSG.success)));\n         if (mounted) {\n"
                },
                {
                    "date": 1725470545283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,459 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+        longitude:\n+            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+      ),\n+    );\n+\n+    controller.addObserver(this);\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: controller,\n+            osmOption: OSMOption(\n+                enableRotationByGesture: true,\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                staticPoints: [],\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.blueAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                  defaultMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                ),\n+                showDefaultInfoWindow: false),\n+            onMapIsReady: (isReady) {\n+              if (isReady) {\n+                print(\"map is ready\");\n+              }\n+            },\n+            onLocationChanged: (myLocation) {\n+              print(\"user location :$myLocation\");\n+            },\n+            onGeoPointClicked: (myLocation) {\n+              print(\"GeoPointClicked location :$myLocation\");\n+            },\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void addMarker() async {\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"pickup\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/pickup_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"dropoff\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/drop_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+   \n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude:\n+              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n+    ], \"pickup\");\n+\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n+    ], \"dropoff\");\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    await controller.drawRoad(\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n+        roadType: RoadType.car,\n+        roadOption: const RoadOption(\n+          roadColor: Colors.blueAccent,\n+          roadBorderWidth: 5,\n+        ));\n+  }\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async {\n+    if (isReady) {\n+      addMarker();\n+    }\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+\n"
                },
                {
                    "date": 1725680759273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,884 @@\n+import 'package:flutter/material.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> {\n+  bool isOpen = true;\n+\n+  late GoogleMapController mapController;\n+  final Set<Marker> _markers = {};\n+  final Set<Polyline> _polylines = {};\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+    addMarker();\n+  }\n+\n+  @override\n+  void dispose() {\n+    super.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+              ),\n+              zoom: 8,\n+            ),\n+            markers: _markers,\n+            polylines: _polylines,\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+    addMarker();\n+  }\n+\n+  void addMarker() async {\n+    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    setState(() {\n+      _markers.add(Marker(\n+        markerId: MarkerId('pickup'),\n+        position: LatLng(pickupLat, pickupLng),\n+        infoWindow: InfoWindow(title: 'Pickup Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n+      ));\n+\n+      _markers.add(Marker(\n+        markerId: MarkerId('dropoff'),\n+        position: LatLng(dropLat, dropLng),\n+        infoWindow: InfoWindow(title: 'Dropoff Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n+      ));\n+    });\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    setState(() {\n+      _polylines.add(Polyline(\n+        polylineId: PolylineId('road'),\n+        visible: true,\n+        points: [\n+          LatLng(pickupLat, pickupLng),\n+          LatLng(dropLat, dropLng),\n+        ],\n+        color: Colors.blueAccent,\n+        width: 3,\n+      ));\n+    });\n+\n+    mapController.animateCamera(\n+      CameraUpdate.newLatLngBounds(\n+        LatLngBounds(\n+          southwest: LatLng(\n+            pickupLat < dropLat ? pickupLat : dropLat,\n+            pickupLng < dropLng ? pickupLng : dropLng,\n+          ),\n+          northeast: LatLng(\n+            pickupLat > dropLat ? pickupLat : dropLat,\n+            pickupLng > dropLng ? pickupLng : dropLng,\n+          ),\n+        ),\n+        50,\n+      ),\n+    );\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n+  bool isOpen = true;\n+\n+  late MapController controller;\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+        longitude:\n+            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+      ),\n+    );\n+\n+    controller.addObserver(this);\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: controller,\n+            osmOption: OSMOption(\n+                enableRotationByGesture: true,\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                staticPoints: [],\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.blueAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                  defaultMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                ),\n+                showDefaultInfoWindow: false),\n+            onMapIsReady: (isReady) {\n+              if (isReady) {\n+                print(\"map is ready\");\n+              }\n+            },\n+            onLocationChanged: (myLocation) {\n+              print(\"user location :$myLocation\");\n+            },\n+            onGeoPointClicked: (myLocation) {\n+              print(\"GeoPointClicked location :$myLocation\");\n+            },\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void addMarker() async {\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"pickup\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/pickup_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"dropoff\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/drop_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+   \n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude:\n+              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n+    ], \"pickup\");\n+\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n+    ], \"dropoff\");\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    await controller.drawRoad(\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n+        roadType: RoadType.car,\n+        roadOption: const RoadOption(\n+          roadColor: Colors.blueAccent,\n+          roadBorderWidth: 5,\n+        ));\n+  }\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async {\n+    if (isReady) {\n+      addMarker();\n+    }\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+*/\n"
                },
                {
                    "date": 1725682157346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,430 +1,5 @@\n import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> {\n-  bool isOpen = true;\n-\n-  late GoogleMapController mapController;\n-  final Set<Marker> _markers = {};\n-  final Set<Polyline> _polylines = {};\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-    addMarker();\n-  }\n-\n-  @override\n-  void dispose() {\n-    super.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n-              ),\n-              zoom: 8,\n-            ),\n-            markers: _markers,\n-            polylines: _polylines,\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-    addMarker();\n-  }\n-\n-  void addMarker() async {\n-    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    setState(() {\n-      _markers.add(Marker(\n-        markerId: MarkerId('pickup'),\n-        position: LatLng(pickupLat, pickupLng),\n-        infoWindow: InfoWindow(title: 'Pickup Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n-      ));\n-\n-      _markers.add(Marker(\n-        markerId: MarkerId('dropoff'),\n-        position: LatLng(dropLat, dropLng),\n-        infoWindow: InfoWindow(title: 'Dropoff Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n-      ));\n-    });\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    setState(() {\n-      _polylines.add(Polyline(\n-        polylineId: PolylineId('road'),\n-        visible: true,\n-        points: [\n-          LatLng(pickupLat, pickupLng),\n-          LatLng(dropLat, dropLng),\n-        ],\n-        color: Colors.blueAccent,\n-        width: 3,\n-      ));\n-    });\n-\n-    mapController.animateCamera(\n-      CameraUpdate.newLatLngBounds(\n-        LatLngBounds(\n-          southwest: LatLng(\n-            pickupLat < dropLat ? pickupLat : dropLat,\n-            pickupLng < dropLng ? pickupLng : dropLng,\n-          ),\n-          northeast: LatLng(\n-            pickupLat > dropLat ? pickupLat : dropLat,\n-            pickupLng > dropLng ? pickupLng : dropLng,\n-          ),\n-        ),\n-        50,\n-      ),\n-    );\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -880,5 +455,5 @@\n       mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n     });\n   }\n }\n-*/\n+\n"
                },
                {
                    "date": 1725689824248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,1383 +456,4 @@\n     });\n   }\n }\n \n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-        longitude:\n-            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n-      ),\n-    );\n-\n-    controller.addObserver(this);\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: controller,\n-            osmOption: OSMOption(\n-                enableRotationByGesture: true,\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                staticPoints: [],\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.blueAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                  defaultMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n-                ),\n-                showDefaultInfoWindow: false),\n-            onMapIsReady: (isReady) {\n-              if (isReady) {\n-                print(\"map is ready\");\n-              }\n-            },\n-            onLocationChanged: (myLocation) {\n-              print(\"user location :$myLocation\");\n-            },\n-            onGeoPointClicked: (myLocation) {\n-              print(\"GeoPointClicked location :$myLocation\");\n-            },\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  void addMarker() async {\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"pickup\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/pickup_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"dropoff\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/drop_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-   \n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude:\n-              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n-    ], \"pickup\");\n-\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n-    ], \"dropoff\");\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    await controller.drawRoad(\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n-        roadType: RoadType.car,\n-        roadOption: const RoadOption(\n-          roadColor: Colors.blueAccent,\n-          roadBorderWidth: 5,\n-        ));\n-  }\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async {\n-    if (isReady) {\n-      addMarker();\n-    }\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-\n-\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-\n-\n-\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-  //latitude: 33.583332, longitude: 130.399994\n-  //23.02756018230479, 72.58131973941731\n-  //23.02726396414328, 72.5851928489523\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-        longitude:\n-            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n-      ),\n-    );\n-\n-    controller.addObserver(this);\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: controller,\n-            osmOption: OSMOption(\n-                enableRotationByGesture: true,\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                staticPoints: [],\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.blueAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                  defaultMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n-                ),\n-                showDefaultInfoWindow: false),\n-            onMapIsReady: (isReady) {\n-              if (isReady) {\n-                print(\"map is ready\");\n-              }\n-            },\n-            onLocationChanged: (myLocation) {\n-              print(\"user location :$myLocation\");\n-            },\n-            onGeoPointClicked: (myLocation) {\n-              print(\"GeoPointClicked location :$myLocation\");\n-            },\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  void addMarker() async {\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"pickup\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/pickup_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"dropoff\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/drop_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-   //latitude: 33.583332, longitude: 130.399994\n-    //23.02756018230479, 72.58131973941731\n-    //23.02726396414328, 72.5851928489523\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude:\n-              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n-    ], \"pickup\");\n-\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n-    ], \"dropoff\");\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    await controller.drawRoad(\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n-        roadType: RoadType.car,\n-        roadOption: const RoadOption(\n-          roadColor: Colors.blueAccent,\n-          roadBorderWidth: 5,\n-        ));\n-  }\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async {\n-    if (isReady) {\n-      addMarker();\n-    }\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-\n-/*class TipRequestView extends StatefulWidget {\n-  const TipRequestView({super.key});\n-\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-\n-}\n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n-  bool isOpen = true;\n-\n-  late MapController controller;\n-\n-  @override\n-void initState () {\n-  super.initState();\n-  controller = MapController(\n-                             initPosition: GeoPoint(\n-        latitude: 28.0398257,\n-        longitude: 82.4838780,\n-      ),\n-                            \n-            );\n-\n-            controller.addObserver(this);\n-}\n-            @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    body: Stack(\n-      children: [\n-\n-      \n-    \n-\n-      OSMFlutter( \n-        controller: controller,\n-        osmOption: OSMOption(\n-          enableRotationByGesture: true,\n-             \n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-              staticPoints: [],\n-            roadConfiguration:const RoadOption(\n-                    roadColor: Colors.blueAccent,\n-            ),\n-           userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-\n-            showDefaultInfoWindow: false\n-        ),\n-        onMapIsReady: (isReady) {\n-          if(isReady) {\n-            print(\"map is ready\");\n-          }\n-        },\n-        onLocationChanged: (myLocation) {\n-           print(\"user location :$myLocation\");\n-        },  \n-\n-        onGeoPointClicked: (myLocation) {\n-           print(\"GeoPointClicked location :$myLocation\");\n-        },  \n-    ),\n-\n-    Column(\n-\n-      mainAxisAlignment: MainAxisAlignment.end,\n-      children: [\n-\n-       \n-\n-        Container(\n-          padding: const EdgeInsets.symmetric(vertical: 15),\n-\n-           decoration: const BoxDecoration(\n-                  color: Colors.white,\n-                  borderRadius: BorderRadius.only(\n-                  topLeft: Radius.circular(10),\n-                  topRight: Radius.circular(10), ),\n-                  boxShadow:  [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset (0,-5),\n-                     ),\n-                 ]\n-                 \n-                  ),\n-          child: Column(\n-            children: [\n-              Row(\n-                mainAxisAlignment: MainAxisAlignment.center,\n-                children: [\n-                \n-               \n-\n-                Text(\n-                      \"25 min\", \n-                      style: TextStyle(\n-                        color: TColor.primaryText,\n-                        fontSize: 25,\n-                        fontWeight: FontWeight.w800,\n-                      ),\n-                    ),\n-\n-               \n-                ],\n-              ),\n-\n-             const SizedBox(\n-              height: 8,\n-             ),\n-            Row(\n-             \n-              children: [\n-\n-                 Expanded(\n-                   child: Text(\n-                        \"\\$12.50\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                 ),\n-                    Expanded(\n-                      child: Text(\n-                        \"4.5 KM\", \n-                        textAlign: TextAlign.center,\n-                        style: TextStyle(\n-                          color: TColor.secondaryText,\n-                          fontSize: 18,\n-                          \n-                        ),\n-                      ),\n-                    ),\n-                     Expanded(\n-                       child: Padding(\n-                         padding: const EdgeInsets.symmetric(horizontal: 25, \n-                         vertical: 8),\n-                       \n-                         child: Row(\n-                         mainAxisAlignment: MainAxisAlignment.center,\n-                           children: [\n-                            Image.asset\n-                            (\"assets/img/rate_tip.png\", \n-                            width: 15, \n-                            height: 15, \n-                            ),\n-                         \n-                            const SizedBox(width: 4,),\n-                            \n-                             Text(\n-                              \"3.5\", \n-                              style: TextStyle(\n-                                color: TColor.secondaryText,\n-                                fontSize: 18,\n-                                \n-                              ),\n-                              ),\n-                           ],\n-                         ),\n-                       ),\n-                     ),\n-              ],\n-            ),\n-\n-            const SizedBox(\n-              height: 15,\n-            ),\n-\n-                     Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.secondary,\n-                        borderRadius: BorderRadius.circular(10)\n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                 \"23 Dang Nepal , Ring Road\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-\n-             Padding(\n-                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n-                       child:\n-                        Row(\n-                        children: [\n-                       Container(\n-                        width: 10,\n-                        height: 10,\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                      \n-                        ),\n-                       ),\n-\n-                       const SizedBox(\n-                        width: 15,),\n-\n-                        Expanded(\n-                          child: Text(\n-                                \"Moon Light Drug Distributers, Ghorahi Nepal\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryText,\n-                                  fontSize: 15,\n-                                  \n-                                ),\n-                                ),\n-                        ),\n-                          \n-                        ],\n-                       \n-                     ),\n-              \n-            ),\n-\n-             const SizedBox(\n-              height: 15,\n-            ),\n-\n-             InkWell(\n-              onTap: () {\n-             context.push( const RunRideView() );\n-              },\n-               child: Container(\n-                          width: double.maxFinite,\n-                          margin: const EdgeInsets.symmetric(horizontal: 20),\n-                          padding: const EdgeInsets.all(6),\n-                          decoration: BoxDecoration(\n-                            color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                          ),\n-                          child: Stack(\n-                            alignment: Alignment.centerRight,\n-                            children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                          Text(\n-                                \"TAP TO ACCEPT\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 17,\n-                                  fontWeight: FontWeight.w700,\n-                                  \n-                                ),\n-                                ),\n-                              ],\n-                            ),\n-               \n-                            Container(\n-                          height: 40,\n-                          width: 40,\n-                          decoration: BoxDecoration(\n-                            color: Colors.black12,\n-                          borderRadius: BorderRadius.circular(20),\n-                          ),\n-                          alignment: Alignment.center,\n-                          child:\n-               \n-                          Text(\n-                                \"15\", \n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,),\n-                                  \n-                                ),\n-                                ),\n-                          ],),\n-                         ),\n-             ),\n-\n-\n-             const SizedBox(\n-              height: 25,\n-            ),\n-            \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    \n-    SafeArea(\n-      child: Column(\n-      mainAxisAlignment: MainAxisAlignment.start,\n-      children: [\n-        Padding(\n-          padding: const EdgeInsets.all(15),\n-          child: Row(\n-            mainAxisAlignment: MainAxisAlignment.center,\n-            children: [\n-             \n-          \n-                InkWell(\n-                  onTap: () {\n-                   context.pop();\n-                  },\n-                  child: Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            \n-                               decoration: BoxDecoration(\n-                      color: Colors.white,\n-                      borderRadius: BorderRadius.circular(30),\n-                      \n-                      boxShadow: const [\n-                      BoxShadow(\n-                        color: Colors.black26,\n-                        blurRadius: 10,\n-                        \n-                         ),\n-                              \n-                              ]),\n-                              child:Row(\n-                                mainAxisSize: MainAxisSize.min,\n-                                crossAxisAlignment: CrossAxisAlignment.center,\n-                                children: [\n-                       Image.asset(\n-                        \"assets/img/close.png\", \n-                        width: 25, \n-                        height: 25,\n-                        ),\n-                 \n-                         Text(\n-                          \"No Thanks\", \n-                          style: TextStyle(\n-                            color: TColor.primaryText,\n-                            fontSize: 16,\n-                            \n-                          ),\n-                        ),\n-                                ],\n-                  )),\n-                ),\n-                \n-              \n-              \n-            ],\n-          ),\n-        )\n-      ],\n-    ),\n-    )\n-\n-    ],\n-  ),\n-  );\n-}\n-\n-void addMarker() async {\n-  await controller.setMarkerOfStaticPoint(\n-    id: \"pickup\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/pickup_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-   await controller.setMarkerOfStaticPoint(\n-    id: \"dropoff\", \n-    markerIcon: MarkerIcon(\n-    iconWidget: Image.asset(\n-      \"assets/img/drop_pin.png\", \n-      width: 80, \n-      height: 80,\n-      ),\n-  ),);\n-\n-                            \n-  await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n-    \"pickup\");\n-\n-    await controller.setStaticPosition( \n-    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n-    \"dropoff\");\n-\n-loadMapRoad();\n-}\n-void loadMapRoad() async {\n-await controller.drawRoad( \n-  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n-  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n-  roadType: RoadType.car,\n-  roadOption: \n-  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n-  );\n-}\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async{\n-    if(isReady) {\n-      addMarker();\n-    }\n-    \n-  }\n-}*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725692541627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,407 @@\n import 'package:flutter/material.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> {\n+  bool isOpen = true;\n+  late GoogleMapController mapController;\n+  final Set<Marker> _markers = {};\n+  final Set<Polyline> _polylines = {};\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+    _addMarkers();\n+    _addPolyline();\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+  }\n+\n+  void _addMarkers() {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('pickup'),\n+        position: LatLng(pickupLat, pickupLong),\n+        infoWindow: InfoWindow(title: 'Pickup Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n+      ),\n+    );\n+\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('dropoff'),\n+        position: LatLng(dropLat, dropLong),\n+        infoWindow: InfoWindow(title: 'Dropoff Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n+      ),\n+    );\n+  }\n+\n+  void _addPolyline() {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    _polylines.add(\n+      Polyline(\n+        polylineId: PolylineId('route'),\n+        points: [\n+          LatLng(pickupLat, pickupLong),\n+          LatLng(dropLat, dropLong),\n+        ],\n+        color: Colors.blueAccent,\n+        width: 5,\n+      ),\n+    );\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(pickupLat, pickupLong),\n+              zoom: 8,\n+            ),\n+            markers: _markers,\n+            polylines: _polylines,\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -456,4 +858,5 @@\n     });\n   }\n }\n \n+*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725698063920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n@@ -12,85 +12,76 @@\n   @override\n   State<TipRequestView> createState() => _TipRequestViewState();\n }\n \n-class _TipRequestViewState extends State<TipRequestView> {\n+class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n   bool isOpen = true;\n-  late GoogleMapController mapController;\n-  final Set<Marker> _markers = {};\n-  final Set<Polyline> _polylines = {};\n \n+  late MapController controller;\n+  \n+\n   @override\n   void initState() {\n+    // TODO: implement initState\n     super.initState();\n-    _addMarkers();\n-    _addPolyline();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  void _addMarkers() {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('pickup'),\n-        position: LatLng(pickupLat, pickupLong),\n-        infoWindow: InfoWindow(title: 'Pickup Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n+    controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+        longitude:\n+            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n       ),\n     );\n \n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('dropoff'),\n-        position: LatLng(dropLat, dropLong),\n-        infoWindow: InfoWindow(title: 'Dropoff Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n-      ),\n-    );\n+    controller.addObserver(this);\n   }\n \n-  void _addPolyline() {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    _polylines.add(\n-      Polyline(\n-        polylineId: PolylineId('route'),\n-        points: [\n-          LatLng(pickupLat, pickupLong),\n-          LatLng(dropLat, dropLong),\n-        ],\n-        color: Colors.blueAccent,\n-        width: 5,\n-      ),\n-    );\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-\n     return Scaffold(\n       body: Stack(\n         children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(pickupLat, pickupLong),\n-              zoom: 8,\n-            ),\n-            markers: _markers,\n-            polylines: _polylines,\n+          OSMFlutter(\n+            controller: controller,\n+            osmOption: OSMOption(\n+                enableRotationByGesture: true,\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                staticPoints: [],\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.blueAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                  defaultMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                ),\n+                showDefaultInfoWindow: false),\n+            onMapIsReady: (isReady) {\n+              if (isReady) {\n+                print(\"map is ready\");\n+              }\n+            },\n+            onLocationChanged: (myLocation) {\n+              print(\"user location :$myLocation\");\n+            },\n+            onGeoPointClicked: (myLocation) {\n+              print(\"GeoPointClicked location :$myLocation\");\n+            },\n           ),\n           Column(\n             mainAxisAlignment: MainAxisAlignment.end,\n             children: [\n@@ -342,8 +333,76 @@\n       ),\n     );\n   }\n \n+  void addMarker() async {\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"pickup\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/pickup_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+    await controller.setMarkerOfStaticPoint(\n+      id: \"dropoff\",\n+      markerIcon: MarkerIcon(\n+        iconWidget: Image.asset(\n+          \"assets/img/drop_pin.png\",\n+          width: 80,\n+          height: 80,\n+        ),\n+      ),\n+    );\n+\n+   \n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude:\n+              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n+    ], \"pickup\");\n+\n+    await controller.setStaticPosition([\n+      GeoPoint(\n+          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+          longitude:\n+              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n+    ], \"dropoff\");\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    await controller.drawRoad(\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n+        GeoPoint(\n+            latitude:\n+                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n+            longitude:\n+                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n+        roadType: RoadType.car,\n+        roadOption: const RoadOption(\n+          roadColor: Colors.blueAccent,\n+          roadBorderWidth: 5,\n+        ));\n+  }\n+\n+  @override\n+  Future<void> mapIsReady(bool isReady) async {\n+    if (isReady) {\n+      addMarker();\n+    }\n+  }\n+\n   //TODO: ApiCalling\n   void apiAcceptRide() {\n     Globs.showHUD();\n     ServiceCall.post({\n@@ -400,9 +459,9 @@\n \n \n \n /*import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n@@ -414,76 +473,85 @@\n   @override\n   State<TipRequestView> createState() => _TipRequestViewState();\n }\n \n-class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n+class _TipRequestViewState extends State<TipRequestView> {\n   bool isOpen = true;\n+  late GoogleMapController mapController;\n+  final Set<Marker> _markers = {};\n+  final Set<Polyline> _polylines = {};\n \n-  late MapController controller;\n-  \n-\n   @override\n   void initState() {\n-    // TODO: implement initState\n     super.initState();\n-    controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-        longitude:\n-            double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+    _addMarkers();\n+    _addPolyline();\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+  }\n+\n+  void _addMarkers() {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('pickup'),\n+        position: LatLng(pickupLat, pickupLong),\n+        infoWindow: InfoWindow(title: 'Pickup Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n       ),\n     );\n \n-    controller.addObserver(this);\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('dropoff'),\n+        position: LatLng(dropLat, dropLong),\n+        infoWindow: InfoWindow(title: 'Dropoff Location'),\n+        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n+      ),\n+    );\n   }\n \n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n+  void _addPolyline() {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    _polylines.add(\n+      Polyline(\n+        polylineId: PolylineId('route'),\n+        points: [\n+          LatLng(pickupLat, pickupLong),\n+          LatLng(dropLat, dropLong),\n+        ],\n+        color: Colors.blueAccent,\n+        width: 5,\n+      ),\n+    );\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+\n     return Scaffold(\n       body: Stack(\n         children: [\n-          OSMFlutter(\n-            controller: controller,\n-            osmOption: OSMOption(\n-                enableRotationByGesture: true,\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                staticPoints: [],\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.blueAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                  defaultMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n-                ),\n-                showDefaultInfoWindow: false),\n-            onMapIsReady: (isReady) {\n-              if (isReady) {\n-                print(\"map is ready\");\n-              }\n-            },\n-            onLocationChanged: (myLocation) {\n-              print(\"user location :$myLocation\");\n-            },\n-            onGeoPointClicked: (myLocation) {\n-              print(\"GeoPointClicked location :$myLocation\");\n-            },\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(pickupLat, pickupLong),\n+              zoom: 8,\n+            ),\n+            markers: _markers,\n+            polylines: _polylines,\n           ),\n           Column(\n             mainAxisAlignment: MainAxisAlignment.end,\n             children: [\n@@ -735,76 +803,8 @@\n       ),\n     );\n   }\n \n-  void addMarker() async {\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"pickup\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/pickup_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-    await controller.setMarkerOfStaticPoint(\n-      id: \"dropoff\",\n-      markerIcon: MarkerIcon(\n-        iconWidget: Image.asset(\n-          \"assets/img/drop_pin.png\",\n-          width: 80,\n-          height: 80,\n-        ),\n-      ),\n-    );\n-\n-   \n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude:\n-              double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0)\n-    ], \"pickup\");\n-\n-    await controller.setStaticPosition([\n-      GeoPoint(\n-          latitude: double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-          longitude:\n-              double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0)\n-    ], \"dropoff\");\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    await controller.drawRoad(\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0),\n-        GeoPoint(\n-            latitude:\n-                double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0,\n-            longitude:\n-                double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0),\n-        roadType: RoadType.car,\n-        roadOption: const RoadOption(\n-          roadColor: Colors.blueAccent,\n-          roadBorderWidth: 5,\n-        ));\n-  }\n-\n-  @override\n-  Future<void> mapIsReady(bool isReady) async {\n-    if (isReady) {\n-      addMarker();\n-    }\n-  }\n-\n   //TODO: ApiCalling\n   void apiAcceptRide() {\n     Globs.showHUD();\n     ServiceCall.post({\n"
                },
                {
                    "date": 1725699068334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import 'package:flutter/material.dart';\n+/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -455,12 +455,12 @@\n       mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n     });\n   }\n }\n+*/\n \n \n-\n-/*import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n import 'package:google_maps_flutter/google_maps_flutter.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -858,5 +858,4 @@\n     });\n   }\n }\n \n-*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725785050023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -455,407 +455,5 @@\n       mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n     });\n   }\n }\n-*/\n \n-\n-import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> {\n-  bool isOpen = true;\n-  late GoogleMapController mapController;\n-  final Set<Marker> _markers = {};\n-  final Set<Polyline> _polylines = {};\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-    _addMarkers();\n-    _addPolyline();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  void _addMarkers() {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('pickup'),\n-        position: LatLng(pickupLat, pickupLong),\n-        infoWindow: InfoWindow(title: 'Pickup Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n-      ),\n-    );\n-\n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('dropoff'),\n-        position: LatLng(dropLat, dropLong),\n-        infoWindow: InfoWindow(title: 'Dropoff Location'),\n-        icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n-      ),\n-    );\n-  }\n-\n-  void _addPolyline() {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    final dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    final dropLong = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    _polylines.add(\n-      Polyline(\n-        polylineId: PolylineId('route'),\n-        points: [\n-          LatLng(pickupLat, pickupLong),\n-          LatLng(dropLat, dropLong),\n-        ],\n-        color: Colors.blueAccent,\n-        width: 5,\n-      ),\n-    );\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    final pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    final pickupLong = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(pickupLat, pickupLong),\n-              zoom: 8,\n-            ),\n-            markers: _markers,\n-            polylines: _polylines,\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-\n"
                },
                {
                    "date": 1725806256197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,10 @@\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n+// import 'package:taxi_driver/common/socket_manager.dart';\n+// import 'package:taxi_driver/view/home/run_ride_view.dart';\n \n class TipRequestView extends StatefulWidget {\n   final Map bObj;\n   const TipRequestView({super.key, required this.bObj});\n@@ -16,9 +18,10 @@\n class _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver {\n   bool isOpen = true;\n \n   late MapController controller;\n-  \n+  //23.02756018230479, 72.58131973941731\n+  //23.02726396414328, 72.5851928489523\n \n   @override\n   void initState() {\n     // TODO: implement initState\n@@ -356,9 +359,10 @@\n         ),\n       ),\n     );\n \n-   \n+    //23.02756018230479, 72.58131973941731\n+    //23.02726396414328, 72.5851928489523\n     await controller.setStaticPosition([\n       GeoPoint(\n           latitude:\n               double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n@@ -455,5 +459,4 @@\n       mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n     });\n   }\n }\n-\n"
                },
                {
                    "date": 1726040360857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,426 @@\n+import 'package:flutter/material.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+\n+class TipRequestView extends StatefulWidget {\n+  final Map bObj;\n+  const TipRequestView({super.key, required this.bObj});\n+\n+  @override\n+  State<TipRequestView> createState() => _TipRequestViewState();\n+}\n+\n+class _TipRequestViewState extends State<TipRequestView> {\n+  bool isOpen = true;\n+\n+  late GoogleMapController mapController;\n+  final Set<Marker> _markers = {};\n+  final Set<Polyline> _polylines = {};\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+    WidgetsBinding.instance.addPostFrameCallback((_) {\n+      addMarker();\n+    });\n+  }\n+\n+  @override\n+  void dispose() {\n+    super.dispose();\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+    addMarker();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(\n+                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n+                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n+              ),\n+              zoom: 8,\n+            ),\n+            markers: _markers,\n+            polylines: _polylines,\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.center,\n+                      children: [\n+                        Text(\n+                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 25,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 8,\n+                    ),\n+                    Row(\n+                      children: [\n+                        Expanded(\n+                          child: Text(\n+                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Text(\n+                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n+                            textAlign: TextAlign.center,\n+                            style: TextStyle(\n+                              color: TColor.secondaryText,\n+                              fontSize: 18,\n+                            ),\n+                          ),\n+                        ),\n+                        Expanded(\n+                          child: Padding(\n+                            padding: const EdgeInsets.symmetric(\n+                                horizontal: 25, vertical: 8),\n+                            child: Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/rate_tip.png\",\n+                                  width: 15,\n+                                  height: 15,\n+                                ),\n+                                const SizedBox(\n+                                  width: 4,\n+                                ),\n+                                Text(\n+                                  \"5\",\n+                                  style: TextStyle(\n+                                    color: TColor.secondaryText,\n+                                    fontSize: 18,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                          ),\n+                        ),\n+                      ],\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(\n+                                color: TColor.secondary,\n+                                borderRadius: BorderRadius.circular(10)),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    Padding(\n+                      padding: const EdgeInsets.symmetric(\n+                          horizontal: 20, vertical: 10),\n+                      child: Row(\n+                        children: [\n+                          Container(\n+                            width: 10,\n+                            height: 10,\n+                            decoration: BoxDecoration(color: TColor.primary),\n+                          ),\n+                          const SizedBox(\n+                            width: 15,\n+                          ),\n+                          Expanded(\n+                            child: Text(\n+                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n+                              style: TextStyle(\n+                                color: TColor.primaryText,\n+                                fontSize: 15,\n+                              ),\n+                            ),\n+                          ),\n+                        ],\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 15,\n+                    ),\n+                    InkWell(\n+                      onTap: () {\n+                        apiAcceptRide();\n+                      },\n+                      child: Container(\n+                        width: double.maxFinite,\n+                        margin: const EdgeInsets.symmetric(horizontal: 20),\n+                        padding: const EdgeInsets.all(6),\n+                        decoration: BoxDecoration(\n+                          color: TColor.primary,\n+                          borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: Stack(\n+                          alignment: Alignment.centerRight,\n+                          children: [\n+                            Row(\n+                              mainAxisAlignment: MainAxisAlignment.center,\n+                              children: [\n+                                Text(\n+                                  \"TAP TO ACCEPT\",\n+                                  style: TextStyle(\n+                                    color: TColor.primaryTextW,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w700,\n+                                  ),\n+                                ),\n+                              ],\n+                            ),\n+                            Container(\n+                              height: 40,\n+                              width: 40,\n+                              decoration: BoxDecoration(\n+                                color: Colors.black12,\n+                                borderRadius: BorderRadius.circular(20),\n+                              ),\n+                              alignment: Alignment.center,\n+                              child: Text(\n+                                \"15\",\n+                                style: TextStyle(\n+                                  color: TColor.primaryTextW,\n+                                  fontSize: 14,\n+                                  fontWeight: FontWeight.w700,\n+                                ),\n+                              ),\n+                            ),\n+                          ],\n+                        ),\n+                      ),\n+                    ),\n+                    const SizedBox(\n+                      height: 25,\n+                    ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.center,\n+                    children: [\n+                      InkWell(\n+                        onTap: () {\n+                          apiDeclineRide();\n+                        },\n+                        child: Container(\n+                            padding: const EdgeInsets.symmetric(\n+                                vertical: 15, horizontal: 25),\n+                            decoration: BoxDecoration(\n+                                color: Colors.white,\n+                                borderRadius: BorderRadius.circular(30),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black26,\n+                                    blurRadius: 10,\n+                                  ),\n+                                ]),\n+                            child: Row(\n+                              mainAxisSize: MainAxisSize.min,\n+                              crossAxisAlignment: CrossAxisAlignment.center,\n+                              children: [\n+                                Image.asset(\n+                                  \"assets/img/close.png\",\n+                                  width: 25,\n+                                  height: 25,\n+                                ),\n+                                Text(\n+                                  \"No Thanks\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText, fontSize: 16),\n+                                ),\n+                              ],\n+                            )),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  void addMarker() async {\n+    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    var pickupMarker = Marker(\n+      markerId: MarkerId(\"pickup\"),\n+      position: LatLng(pickupLat, pickupLng),\n+      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n+    );\n+\n+    var dropMarker = Marker(\n+      markerId: MarkerId(\"dropoff\"),\n+      position: LatLng(dropLat, dropLng),\n+      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n+    );\n+\n+    setState(() {\n+      _markers.add(pickupMarker);\n+      _markers.add(dropMarker);\n+    });\n+\n+    loadMapRoad();\n+  }\n+\n+  void loadMapRoad() async {\n+    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n+    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n+    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n+    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n+\n+    var pickupPoint = LatLng(pickupLat, pickupLng);\n+    var dropPoint = LatLng(dropLat, dropLng);\n+\n+    var polyline = Polyline(\n+      polylineId: PolylineId(\"road\"),\n+      color: Colors.blueAccent,\n+      width: 3,\n+      points: [pickupPoint, dropPoint],\n+    );\n+\n+    setState(() {\n+      _polylines.add(polyline);\n+    });\n+\n+    mapController.animateCamera(\n+      CameraUpdate.newLatLngBounds(\n+        LatLngBounds(\n+          southwest: LatLng(\n+            pickupLat < dropLat ? pickupLat : dropLat,\n+            pickupLng < dropLng ? pickupLng : dropLng,\n+          ),\n+          northeast: LatLng(\n+            pickupLat > dropLat ? pickupLat : dropLat,\n+            pickupLng > dropLng ? pickupLng : dropLng,\n+          ),\n+        ),\n+        50,\n+      ),\n+    );\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiAcceptRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideAccept, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ////context.push(const RunRideView());\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+\n+  void apiDeclineRide() {\n+    Globs.showHUD();\n+    ServiceCall.post({\n+      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n+      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n+    }, SVKey.svDriverRideDecline, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        context.pop();\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        mdShowAlert(Globs.appName,\n+            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1726045024021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,431 +1,5 @@\n import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-\n-class TipRequestView extends StatefulWidget {\n-  final Map bObj;\n-  const TipRequestView({super.key, required this.bObj});\n-\n-  @override\n-  State<TipRequestView> createState() => _TipRequestViewState();\n-}\n-\n-class _TipRequestViewState extends State<TipRequestView> {\n-  bool isOpen = true;\n-\n-  late GoogleMapController mapController;\n-  final Set<Marker> _markers = {};\n-  final Set<Polyline> _polylines = {};\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-    WidgetsBinding.instance.addPostFrameCallback((_) {\n-      addMarker();\n-    });\n-  }\n-\n-  @override\n-  void dispose() {\n-    super.dispose();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-    addMarker();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(\n-                double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0,\n-                double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0,\n-              ),\n-              zoom: 8,\n-            ),\n-            markers: _markers,\n-            polylines: _polylines,\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.center,\n-                      children: [\n-                        Text(\n-                          \"${widget.bObj[\"est_duration\"] ?? \"\"} min\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 25,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 8,\n-                    ),\n-                    Row(\n-                      children: [\n-                        Expanded(\n-                          child: Text(\n-                            \"\\$${widget.bObj[\"amt\"] ?? \"\"}\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Text(\n-                            \"${widget.bObj[\"est_total_distance\"] ?? \"\"} KM\",\n-                            textAlign: TextAlign.center,\n-                            style: TextStyle(\n-                              color: TColor.secondaryText,\n-                              fontSize: 18,\n-                            ),\n-                          ),\n-                        ),\n-                        Expanded(\n-                          child: Padding(\n-                            padding: const EdgeInsets.symmetric(\n-                                horizontal: 25, vertical: 8),\n-                            child: Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/rate_tip.png\",\n-                                  width: 15,\n-                                  height: 15,\n-                                ),\n-                                const SizedBox(\n-                                  width: 4,\n-                                ),\n-                                Text(\n-                                  \"5\",\n-                                  style: TextStyle(\n-                                    color: TColor.secondaryText,\n-                                    fontSize: 18,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                          ),\n-                        ),\n-                      ],\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(\n-                                color: TColor.secondary,\n-                                borderRadius: BorderRadius.circular(10)),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"pickup_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    Padding(\n-                      padding: const EdgeInsets.symmetric(\n-                          horizontal: 20, vertical: 10),\n-                      child: Row(\n-                        children: [\n-                          Container(\n-                            width: 10,\n-                            height: 10,\n-                            decoration: BoxDecoration(color: TColor.primary),\n-                          ),\n-                          const SizedBox(\n-                            width: 15,\n-                          ),\n-                          Expanded(\n-                            child: Text(\n-                              \"${widget.bObj[\"drop_address\"] ?? \"\"}\",\n-                              style: TextStyle(\n-                                color: TColor.primaryText,\n-                                fontSize: 15,\n-                              ),\n-                            ),\n-                          ),\n-                        ],\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 15,\n-                    ),\n-                    InkWell(\n-                      onTap: () {\n-                        apiAcceptRide();\n-                      },\n-                      child: Container(\n-                        width: double.maxFinite,\n-                        margin: const EdgeInsets.symmetric(horizontal: 20),\n-                        padding: const EdgeInsets.all(6),\n-                        decoration: BoxDecoration(\n-                          color: TColor.primary,\n-                          borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: Stack(\n-                          alignment: Alignment.centerRight,\n-                          children: [\n-                            Row(\n-                              mainAxisAlignment: MainAxisAlignment.center,\n-                              children: [\n-                                Text(\n-                                  \"TAP TO ACCEPT\",\n-                                  style: TextStyle(\n-                                    color: TColor.primaryTextW,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w700,\n-                                  ),\n-                                ),\n-                              ],\n-                            ),\n-                            Container(\n-                              height: 40,\n-                              width: 40,\n-                              decoration: BoxDecoration(\n-                                color: Colors.black12,\n-                                borderRadius: BorderRadius.circular(20),\n-                              ),\n-                              alignment: Alignment.center,\n-                              child: Text(\n-                                \"15\",\n-                                style: TextStyle(\n-                                  color: TColor.primaryTextW,\n-                                  fontSize: 14,\n-                                  fontWeight: FontWeight.w700,\n-                                ),\n-                              ),\n-                            ),\n-                          ],\n-                        ),\n-                      ),\n-                    ),\n-                    const SizedBox(\n-                      height: 25,\n-                    ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.center,\n-                    children: [\n-                      InkWell(\n-                        onTap: () {\n-                          apiDeclineRide();\n-                        },\n-                        child: Container(\n-                            padding: const EdgeInsets.symmetric(\n-                                vertical: 15, horizontal: 25),\n-                            decoration: BoxDecoration(\n-                                color: Colors.white,\n-                                borderRadius: BorderRadius.circular(30),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black26,\n-                                    blurRadius: 10,\n-                                  ),\n-                                ]),\n-                            child: Row(\n-                              mainAxisSize: MainAxisSize.min,\n-                              crossAxisAlignment: CrossAxisAlignment.center,\n-                              children: [\n-                                Image.asset(\n-                                  \"assets/img/close.png\",\n-                                  width: 25,\n-                                  height: 25,\n-                                ),\n-                                Text(\n-                                  \"No Thanks\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText, fontSize: 16),\n-                                ),\n-                              ],\n-                            )),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  void addMarker() async {\n-    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    var pickupMarker = Marker(\n-      markerId: MarkerId(\"pickup\"),\n-      position: LatLng(pickupLat, pickupLng),\n-      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n-    );\n-\n-    var dropMarker = Marker(\n-      markerId: MarkerId(\"dropoff\"),\n-      position: LatLng(dropLat, dropLng),\n-      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n-    );\n-\n-    setState(() {\n-      _markers.add(pickupMarker);\n-      _markers.add(dropMarker);\n-    });\n-\n-    loadMapRoad();\n-  }\n-\n-  void loadMapRoad() async {\n-    var pickupLat = double.tryParse(widget.bObj[\"pickup_lat\"].toString()) ?? 0.0;\n-    var pickupLng = double.tryParse(widget.bObj[\"pickup_long\"].toString()) ?? 0.0;\n-    var dropLat = double.tryParse(widget.bObj[\"drop_lat\"].toString()) ?? 0.0;\n-    var dropLng = double.tryParse(widget.bObj[\"drop_long\"].toString()) ?? 0.0;\n-\n-    var pickupPoint = LatLng(pickupLat, pickupLng);\n-    var dropPoint = LatLng(dropLat, dropLng);\n-\n-    var polyline = Polyline(\n-      polylineId: PolylineId(\"road\"),\n-      color: Colors.blueAccent,\n-      width: 3,\n-      points: [pickupPoint, dropPoint],\n-    );\n-\n-    setState(() {\n-      _polylines.add(polyline);\n-    });\n-\n-    mapController.animateCamera(\n-      CameraUpdate.newLatLngBounds(\n-        LatLngBounds(\n-          southwest: LatLng(\n-            pickupLat < dropLat ? pickupLat : dropLat,\n-            pickupLng < dropLng ? pickupLng : dropLng,\n-          ),\n-          northeast: LatLng(\n-            pickupLat > dropLat ? pickupLat : dropLat,\n-            pickupLng > dropLng ? pickupLng : dropLng,\n-          ),\n-        ),\n-        50,\n-      ),\n-    );\n-  }\n-\n-  //TODO: ApiCalling\n-  void apiAcceptRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideAccept, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ////context.push(const RunRideView());\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-\n-  void apiDeclineRide() {\n-    Globs.showHUD();\n-    ServiceCall.post({\n-      \"booking_id\": widget.bObj[\"booking_id\"].toString(),\n-      \"request_token\": widget.bObj[\"request_token\"] ?? \"\"\n-    }, SVKey.svDriverRideDecline, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        context.pop();\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        mdShowAlert(Globs.appName,\n-            responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error as String? ?? MSG.fail, () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n"
                }
            ],
            "date": 1719737585861,
            "name": "Commit-0",
            "content": "\n\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/rendering.dart';\nimport 'package:flutter/widgets.dart';\nimport 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/view/home/run_ride_view.dart';\n\n\n\nclass TipRequestView extends StatefulWidget {\n  const TipRequestView({super.key});\n\n\n  @override\n  State<TipRequestView> createState() => _TipRequestViewState();\n\n}\nclass _TipRequestViewState extends State<TipRequestView> with OSMMixinObserver{\n  bool isOpen = true;\n\n  late MapController controller;\n\n  @override\nvoid initState () {\n  super.initState();\n  controller = MapController(\n                             initPosition: GeoPoint(\n        latitude: 28.0398257,\n        longitude: 82.4838780,\n      ),\n                            \n            );\n\n            controller.addObserver(this);\n}\n            @override\n  void dispose() {\n    // TODO: implement dispose\n    super.dispose();\n    controller.dispose();\n  }\n\n  @override\nWidget build(BuildContext context) {\n\n  return Scaffold(\n    body: Stack(\n      children: [\n\n      \n    \n\n      OSMFlutter( \n        controller: controller,\n        osmOption: OSMOption(\n          enableRotationByGesture: true,\n             \n            zoomOption: const ZoomOption(\n                  initZoom: 8,\n                  minZoomLevel: 3,\n                  maxZoomLevel: 19,\n                  stepZoom: 1.0,\n            ),\n              staticPoints: [],\n            roadConfiguration:const RoadOption(\n                    roadColor: Colors.blueAccent,\n            ),\n           userLocationMarker: UserLocationMaker (\n                personMarker: const MarkerIcon(\n                    icon: Icon(\n                        Icons.location_history_rounded,\n                        color: Colors.red,\n                        size: 48,\n                    ),\n                ),\n                directionArrowMarker: const MarkerIcon(\n                    icon: Icon(\n                        Icons.double_arrow,\n                        size: 48,\n                    ),\n                ),\n            ),\n\n            showDefaultInfoWindow: false\n        ),\n        onMapIsReady: (isReady) {\n          if(isReady) {\n            print(\"map is ready\");\n          }\n        },\n        onLocationChanged: (myLocation) {\n           print(\"user location :$myLocation\");\n        },  \n\n        onGeoPointClicked: (myLocation) {\n           print(\"GeoPointClicked location :$myLocation\");\n        },  \n    ),\n\n    Column(\n\n      mainAxisAlignment: MainAxisAlignment.end,\n      children: [\n\n       \n\n        Container(\n          padding: const EdgeInsets.symmetric(vertical: 15),\n\n           decoration: const BoxDecoration(\n                  color: Colors.white,\n                  borderRadius: BorderRadius.only(\n                  topLeft: Radius.circular(10),\n                  topRight: Radius.circular(10), ),\n                  boxShadow:  [\n                  BoxShadow(\n                    color: Colors.black12,\n                    blurRadius: 10,\n                    offset: Offset (0,-5),\n                     ),\n                 ]\n                 \n                  ),\n          child: Column(\n            children: [\n              Row(\n                mainAxisAlignment: MainAxisAlignment.center,\n                children: [\n                \n               \n\n                Text(\n                      \"25 min\", \n                      style: TextStyle(\n                        color: TColor.primaryText,\n                        fontSize: 25,\n                        fontWeight: FontWeight.w800,\n                      ),\n                    ),\n\n               \n                ],\n              ),\n\n             const SizedBox(\n              height: 8,\n             ),\n            Row(\n             \n              children: [\n\n                 Expanded(\n                   child: Text(\n                        \"\\$12.50\", \n                        textAlign: TextAlign.center,\n                        style: TextStyle(\n                          color: TColor.secondaryText,\n                          fontSize: 18,\n                          \n                        ),\n                      ),\n                 ),\n                    Expanded(\n                      child: Text(\n                        \"4.5 KM\", \n                        textAlign: TextAlign.center,\n                        style: TextStyle(\n                          color: TColor.secondaryText,\n                          fontSize: 18,\n                          \n                        ),\n                      ),\n                    ),\n                     Expanded(\n                       child: Padding(\n                         padding: const EdgeInsets.symmetric(horizontal: 25, \n                         vertical: 8),\n                       \n                         child: Row(\n                         mainAxisAlignment: MainAxisAlignment.center,\n                           children: [\n                            Image.asset\n                            (\"assets/img/rate_tip.png\", \n                            width: 15, \n                            height: 15, \n                            ),\n                         \n                            const SizedBox(width: 4,),\n                            \n                             Text(\n                              \"3.5\", \n                              style: TextStyle(\n                                color: TColor.secondaryText,\n                                fontSize: 18,\n                                \n                              ),\n                              ),\n                           ],\n                         ),\n                       ),\n                     ),\n              ],\n            ),\n\n            const SizedBox(\n              height: 15,\n            ),\n\n                     Padding(\n                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n                       child:\n                        Row(\n                        children: [\n                       Container(\n                        width: 10,\n                        height: 10,\n                        decoration: BoxDecoration(\n                          color: TColor.secondary,\n                        borderRadius: BorderRadius.circular(10)\n                        ),\n                       ),\n\n                       const SizedBox(\n                        width: 15,),\n\n                        Text(\n                               \"23 Dang Nepal , Ring Road\", \n                              style: TextStyle(\n                                color: TColor.primaryText,\n                                fontSize: 15,\n                                \n                              ),\n                              ),\n                          \n                        ],\n                       \n                     ),\n              \n            ),\n\n\n             Padding(\n                       padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 10),\n                       child:\n                        Row(\n                        children: [\n                       Container(\n                        width: 10,\n                        height: 10,\n                        decoration: BoxDecoration(\n                          color: TColor.primary,\n                      \n                        ),\n                       ),\n\n                       const SizedBox(\n                        width: 15,),\n\n                        Text(\n                              \"Moon Light Drug Distributers, Ghorahi Nepal\",\n                              style: TextStyle(\n                                color: TColor.primaryText,\n                                fontSize: 15,\n                                \n                              ),\n                              ),\n                          \n                        ],\n                       \n                     ),\n              \n            ),\n\n             const SizedBox(\n              height: 15,\n            ),\n\n             InkWell(\n              onTap: () {\n             context.push( const RunRideView() );\n              },\n               child: Container(\n                          width: double.maxFinite,\n                          margin: const EdgeInsets.symmetric(horizontal: 20),\n                          padding: const EdgeInsets.all(6),\n                          decoration: BoxDecoration(\n                            color: TColor.primary,\n                          borderRadius: BorderRadius.circular(30),\n                          ),\n                          child: Stack(\n                            alignment: Alignment.centerRight,\n                            children: [\n                            Row(\n                              mainAxisAlignment: MainAxisAlignment.center,\n                              children: [\n                          Text(\n                                \"TAP TO ACCEPT\", \n                                style: TextStyle(\n                                  color: TColor.primaryTextW,\n                                  fontSize: 17,\n                                  fontWeight: FontWeight.w700,\n                                  \n                                ),\n                                ),\n                              ],\n                            ),\n               \n                            Container(\n                          height: 40,\n                          width: 40,\n                          decoration: BoxDecoration(\n                            color: Colors.black12,\n                          borderRadius: BorderRadius.circular(20),\n                          ),\n                          alignment: Alignment.center,\n                          child:\n               \n                          Text(\n                                \"15\", \n                                style: TextStyle(\n                                  color: TColor.primaryTextW,\n                                  fontSize: 14,\n                                  fontWeight: FontWeight.w700,),\n                                  \n                                ),\n                                ),\n                          ],),\n                         ),\n             ),\n\n\n             const SizedBox(\n              height: 25,\n            ),\n            \n            ],\n          ),\n        )\n      ],\n    ),\n    \n    SafeArea(\n      child: Column(\n      mainAxisAlignment: MainAxisAlignment.start,\n      children: [\n        Padding(\n          padding: const EdgeInsets.all(15),\n          child: Row(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n             \n          \n                InkWell(\n                  onTap: () {\n                   context.pop();\n                  },\n                  child: Container(\n                              padding: const EdgeInsets.symmetric(\n                                vertical: 15, horizontal: 25),\n                            \n                               decoration: BoxDecoration(\n                      color: Colors.white,\n                      borderRadius: BorderRadius.circular(30),\n                      \n                      boxShadow: const [\n                      BoxShadow(\n                        color: Colors.black26,\n                        blurRadius: 10,\n                        \n                         ),\n                              \n                              ]),\n                              child:Row(\n                                mainAxisSize: MainAxisSize.min,\n                                crossAxisAlignment: CrossAxisAlignment.center,\n                                children: [\n                       Image.asset(\n                        \"assets/img/close.png\", \n                        width: 25, \n                        height: 25,\n                        ),\n                 \n                         Text(\n                          \"No Thanks\", \n                          style: TextStyle(\n                            color: TColor.primaryText,\n                            fontSize: 16,\n                            \n                          ),\n                        ),\n                                ],\n                  )),\n                ),\n                \n              \n              \n            ],\n          ),\n        )\n      ],\n    ),\n    )\n\n    ],\n  ),\n  );\n}\n\nvoid addMarker() async {\n  await controller.setMarkerOfStaticPoint(\n    id: \"pickup\", \n    markerIcon: MarkerIcon(\n    iconWidget: Image.asset(\n      \"assets/img/pickup_pin.png\", \n      width: 80, \n      height: 80,\n      ),\n  ),);\n\n   await controller.setMarkerOfStaticPoint(\n    id: \"dropoff\", \n    markerIcon: MarkerIcon(\n    iconWidget: Image.asset(\n      \"assets/img/drop_pin.png\", \n      width: 80, \n      height: 80,\n      ),\n  ),);\n\n                            \n  await controller.setStaticPosition( \n    [GeoPoint(latitude: 28.0398257, longitude: 82.4838780)], \n    \"pickup\");\n\n    await controller.setStaticPosition( \n    [GeoPoint(latitude: 28.0403014, longitude: 82.4838194)], \n    \"dropoff\");\n\nloadMapRoad();\n}\nvoid loadMapRoad() async {\nawait controller.drawRoad( \n  GeoPoint(latitude: 28.0398257, longitude: 82.4838780), \n  GeoPoint(latitude: 28.0403014, longitude: 82.4838194), \n  roadType: RoadType.car,\n  roadOption: \n  const RoadOption(roadColor: Colors.blueAccent, roadBorderWidth: 3)\n  );\n}\n\n  @override\n  Future<void> mapIsReady(bool isReady) async{\n    if(isReady) {\n      addMarker();\n    }\n    \n  }\n}"
        }
    ]
}