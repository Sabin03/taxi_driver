{
    "sourceFile": "lib/view/home/home_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 127,
            "patches": [
                {
                    "date": 1719662255064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719663974102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,10 @@\n                     ),\n                   ),\n                 );\n               },\n-              child: const Icon(Icons.add),\n+             \n+             \n             ),\n           ),\n         ],\n       ),\n"
                },
                {
                    "date": 1719664017085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,10 +93,9 @@\n                     ),\n                   ),\n                 );\n               },\n-             \n-             \n+              child: const Icon(Icons.add),\n             ),\n           ),\n         ],\n       ),\n"
                },
                {
                    "date": 1719665042191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,8 +95,9 @@\n                 );\n               },\n               child: const Icon(Icons.add),\n             ),\n+            \n           ),\n         ],\n       ),\n     );\n"
                },
                {
                    "date": 1719665133799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,18 +84,13 @@\n                   GeoPoint(\n                     latitude: 47.4358055,\n                     longitude: 8.4737324,\n                   ),\n-                  markerIcon: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n+                 \n+                  \n                 );\n               },\n-              child: const Icon(Icons.add),\n+              \n             ),\n             \n           ),\n         ],\n"
                },
                {
                    "date": 1719665190588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            Positioned(\n+            bottom: 16,\n+            right: 16,\n+            child: FloatingActionButton(\n+              onPressed: () {\n+                _controller.addMarker(\n+                  GeoPoint(\n+                    latitude: 47.4358055,\n+                    longitude: 8.4737324,\n+                  ),\n+                 \n+                  \n+                );\n+              },\n+              \n+            ),\n+            \n+          ),\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719665251605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            Positioned(\n+            bottom: 16,\n+            right: 16,\n+            child: FloatingActionButton(\n+              onPressed: () {\n+                _controller.addMarker(\n+                  GeoPoint(\n+                    latitude: 47.4358055,\n+                    longitude: 8.4737324,\n+                  ),\n+                  markerIcon: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.person_pin_circle,\n+                      color: Colors.blue,\n+                      size: 56,\n+                    ),\n+                  ),\n+                );\n+              },\n+              child: const Icon(Icons.add),\n+            ),\n+            \n+          ),\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719665260823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,206 +93,13 @@\n                     ),\n                   ),\n                 );\n               },\n-              child: const Icon(Icons.add),\n-            ),\n-            \n-          ),\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            Positioned(\n-            bottom: 16,\n-            right: 16,\n-            child: FloatingActionButton(\n-              onPressed: () {\n-                _controller.addMarker(\n-                  GeoPoint(\n-                    latitude: 47.4358055,\n-                    longitude: 8.4737324,\n-                  ),\n-                 \n-                  \n-                );\n-              },\n               \n             ),\n             \n           ),\n         ],\n       ),\n     );\n   }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            Positioned(\n-            bottom: 16,\n-            right: 16,\n-            child: FloatingActionButton(\n-              onPressed: () {\n-                _controller.addMarker(\n-                  GeoPoint(\n-                    latitude: 47.4358055,\n-                    longitude: 8.4737324,\n-                  ),\n-                 \n-                  \n-                );\n-              },\n-              \n-            ),\n-            \n-          ),\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719665399882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,31 +74,9 @@\n             ),\n             roadConfiguration: const RoadOption(\n                     roadColor: Colors.yellowAccent,), ),\n             ),\n-            Positioned(\n-            bottom: 16,\n-            right: 16,\n-            child: FloatingActionButton(\n-              onPressed: () {\n-                _controller.addMarker(\n-                  GeoPoint(\n-                    latitude: 47.4358055,\n-                    longitude: 8.4737324,\n-                  ),\n-                  markerIcon: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.person_pin_circle,\n-                      color: Colors.blue,\n-                      size: 56,\n-                    ),\n-                  ),\n-                );\n-              },\n-              \n-            ),\n             \n-          ),\n         ],\n       ),\n     );\n   }\n"
                },
                {
                    "date": 1719668887006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+                      Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+        ],\n+        ),\n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719669436933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,15 +155,10 @@\n                     offset: Offset(0, 5),\n                   ),\n                 ]\n               ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n+         \n             ),\n-            ),\n         ),\n         ],\n       ),\n     ),\n@@ -206,88 +201,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719669462695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -155,10 +155,15 @@\n                     offset: Offset(0, 5),\n                   ),\n                 ]\n               ),\n-         \n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n             ),\n+            ),\n         ),\n         ],\n       ),\n     ),\n"
                },
                {
                    "date": 1719669772221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,210 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+                      Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+        ],\n+        ),\n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719670160808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,227 +187,31 @@\n               ]\n             ),\n     child: Column(\n       children: [\n-        Row(children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n          IconButton(\n           onPressed: () {}, \n           icon: Image.asset(\n             \"assets/img/open_btn.png\", \n             width: 15, \n             height: 15,\n             ),),\n-        ],\n-        ),\n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-                      Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n+            Text(\n+                \"You're offline\",\n                 style: TextStyle(\n-                  color: Colors.white,\n+                  color: TColor.primaryText,\n                   fontSize: 22,\n                   fontWeight: FontWeight.w800,\n                 ),\n               ),\n-            )\n-          ],\n-          ),\n+               const SizedBox(\n+          width: 15,\n+          height: 15,\n         ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n         ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 20),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-        ],\n         ),\n       ],\n     ),\n   )\n"
                },
                {
                    "date": 1719670181634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,9 +201,9 @@\n             Text(\n                 \"You're offline\",\n                 style: TextStyle(\n                   color: TColor.primaryText,\n-                  fontSize: 22,\n+                  fontSize: 18,\n                   fontWeight: FontWeight.w800,\n                 ),\n               ),\n                const SizedBox(\n"
                },
                {
                    "date": 1719670237754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -206,10 +206,10 @@\n                   fontWeight: FontWeight.w800,\n                 ),\n               ),\n                const SizedBox(\n-          width: 15,\n-          height: 15,\n+          width: 50,\n+          height: 50,\n         ),\n         ],\n         ),\n       ],\n"
                },
                {
                    "date": 1719670404397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                 ]\n               ),\n             ),\n       \n-                      Container(\n+           Container(\n               width: 60,\n               height: 60,\n               decoration: BoxDecoration(\n                 border: Border.all(color: Colors.white, width: 1.5),\n@@ -172,9 +172,9 @@\n   height: 15,\n ),\n   \n   Container(\n-    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n     decoration: const BoxDecoration(\n               color: Colors.white,\n               borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n               topRight: Radius.circular(10) ),\n"
                },
                {
                    "date": 1719670411127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n   height: 15,\n ),\n   \n   Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n+    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),\n     decoration: const BoxDecoration(\n               color: Colors.white,\n               borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n               topRight: Radius.circular(10) ),\n"
                },
                {
                    "date": 1719670433184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,9 +172,9 @@\n   height: 15,\n ),\n   \n   Container(\n-    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 15),\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n     decoration: const BoxDecoration(\n               color: Colors.white,\n               borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n               topRight: Radius.circular(10) ),\n"
                },
                {
                    "date": 1719671021904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,240 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+      \n+     const Divider(),\n+\n+     Row(\n+      crossAxisAlignment: CrossAxisAlignment.center,\n+      children: [\n+        Expanded(child: Column(\n+          children: [\n+           Image.asset(\n+            \"assets/img/acceptance.png\", \n+            width: 20, \n+            height: 20,),\n+          ],\n+        ),),\n+      ],\n+     )\n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719671363189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,237 +223,33 @@\n            Image.asset(\n             \"assets/img/acceptance.png\", \n             width: 20, \n             height: 20,),\n-          ],\n-        ),),\n-      ],\n-     )\n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n \n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n+            const SizedBox(\n+              height: 8,),\n \n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n+             Text(\n+                \"95.0%\",\n                 style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n                   fontWeight: FontWeight.w800,\n                 ),\n               ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n \n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n+               Text(\n+                \"Acceptance\",\n                 style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n+                  color: TColor.secondaryText,\n+                  fontSize: 16,\n                 ),\n               ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n+          ],\n+        ),),\n       ],\n+     )\n+      ],\n     ),\n   )\n   ],\n )\n"
                },
                {
                    "date": 1719671593524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,40 +214,43 @@\n         ),\n       \n      const Divider(),\n \n-     Row(\n-      crossAxisAlignment: CrossAxisAlignment.center,\n-      children: [\n-        Expanded(child: Column(\n-          children: [\n-           Image.asset(\n-            \"assets/img/acceptance.png\", \n-            width: 20, \n-            height: 20,),\n-\n-            const SizedBox(\n-              height: 8,),\n-\n-             Text(\n-                \"95.0%\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-\n+     SizedBox(\n+      height: 120,\n+       child: Row(\n+        crossAxisAlignment: CrossAxisAlignment.center,\n+        children: [\n+          Expanded(child: Column(\n+            children: [\n+             Image.asset(\n+              \"assets/img/acceptance.png\", \n+              width: 20, \n+              height: 20,),\n+       \n+              const SizedBox(\n+                height: 8,),\n+       \n                Text(\n-                \"Acceptance\",\n-                style: TextStyle(\n-                  color: TColor.secondaryText,\n-                  fontSize: 16,\n+                  \"95.0%\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 18,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n                 ),\n-              ),\n-          ],\n-        ),),\n-      ],\n+       \n+                 Text(\n+                  \"Acceptance\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 16,\n+                  ),\n+                ),\n+            ],\n+          ),),\n+        ],\n+       ),\n      )\n       ],\n     ),\n   )\n"
                },
                {
                    "date": 1719672658371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,247 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+      \n+     const Divider(),\n+\n+     SizedBox(\n+      height: 120,\n+       child: Row(\n+        crossAxisAlignment: CrossAxisAlignment.center,\n+        children: [\n+        IconTitleSubtitleButton(\n+          title: \"95.0%\",\n+          subtitle: \"Acceptance\",\n+          icon: \"assets/img/acceptance.png\",\n+          onPressed: () {},),\n+\n+           IconTitleSubtitleButton(\n+          title: \"4.75\",\n+          subtitle: \"Rating\",\n+          icon: \"assets/img/rate.png\",\n+          onPressed: () {},),\n+        ],\n+       ),\n+     )\n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719672802608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,253 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+      \n+     const Divider(),\n+\n+     SizedBox(\n+      height: 120,\n+       child: Row(\n+       \n+        children: [\n+        IconTitleSubtitleButton(\n+          title: \"95.0%\",\n+          subtitle: \"Acceptance\",\n+          icon: \"assets/img/acceptance.png\",\n+          onPressed: () {},),\n+\n+           IconTitleSubtitleButton(\n+          title: \"4.75\",\n+          subtitle: \"Rating\",\n+          icon: \"assets/img/rate.png\",\n+          onPressed: () {},),\n+\n+           IconTitleSubtitleButton(\n+          title: \"2.0%\",\n+          subtitle: \"Cancelleation\",\n+          icon: \"assets/img/cancelleation.png\",\n+          onPressed: () {},),\n+        ],\n+       ),\n+     )\n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719673186747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,275 +218,35 @@\n \n      SizedBox(\n       height: 120,\n        child: Row(\n-       \n         children: [\n-        IconTitleSubtitleButton(\n+          Expanded(\n+          child: IconTitleSubtitleButton(\n           title: \"95.0%\",\n           subtitle: \"Acceptance\",\n           icon: \"assets/img/acceptance.png\",\n           onPressed: () {},),\n+          ),\n \n+          Expanded(\n+          child:\n            IconTitleSubtitleButton(\n           title: \"4.75\",\n           subtitle: \"Rating\",\n           icon: \"assets/img/rate.png\",\n           onPressed: () {},),\n-\n+          ),\n+          \n+          Expanded(\n+          child:\n            IconTitleSubtitleButton(\n           title: \"2.0%\",\n           subtitle: \"Cancelleation\",\n           icon: \"assets/img/cancelleation.png\",\n           onPressed: () {},),\n-        ],\n-       ),\n-     )\n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n           ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n         ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-      \n-     const Divider(),\n-\n-     SizedBox(\n-      height: 120,\n-       child: Row(\n-        crossAxisAlignment: CrossAxisAlignment.center,\n-        children: [\n-        IconTitleSubtitleButton(\n-          title: \"95.0%\",\n-          subtitle: \"Acceptance\",\n-          icon: \"assets/img/acceptance.png\",\n-          onPressed: () {},),\n-\n-           IconTitleSubtitleButton(\n-          title: \"4.75\",\n-          subtitle: \"Rating\",\n-          icon: \"assets/img/rate.png\",\n-          onPressed: () {},),\n-        ],\n        ),\n      )\n       ],\n     ),\n@@ -496,268 +256,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-      \n-     const Divider(),\n-\n-     SizedBox(\n-      height: 120,\n-       child: Row(\n-        crossAxisAlignment: CrossAxisAlignment.center,\n-        children: [\n-          Expanded(child: Column(\n-            children: [\n-             Image.asset(\n-              \"assets/img/acceptance.png\", \n-              width: 20, \n-              height: 20,),\n-       \n-              const SizedBox(\n-                height: 8,),\n-       \n-               Text(\n-                  \"95.0%\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 18,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-       \n-                 Text(\n-                  \"Acceptance\",\n-                  style: TextStyle(\n-                    color: TColor.secondaryText,\n-                    fontSize: 16,\n-                  ),\n-                ),\n-            ],\n-          ),),\n-        ],\n-       ),\n-     )\n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719673236074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,9 @@\n \n      SizedBox(\n       height: 120,\n        child: Row(\n+        crossAxisAlignment: CrossAxisAlignment.center,\n         children: [\n           Expanded(\n           child: IconTitleSubtitleButton(\n           title: \"95.0%\",\n@@ -235,9 +236,9 @@\n           subtitle: \"Rating\",\n           icon: \"assets/img/rate.png\",\n           onPressed: () {},),\n           ),\n-          \n+\n           Expanded(\n           child:\n            IconTitleSubtitleButton(\n           title: \"2.0%\",\n"
                },
                {
                    "date": 1719673346657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,41 +215,42 @@\n         ),\n       \n      const Divider(),\n \n-     SizedBox(\n-      height: 120,\n-       child: Row(\n-        crossAxisAlignment: CrossAxisAlignment.center,\n-        children: [\n-          Expanded(\n-          child: IconTitleSubtitleButton(\n-          title: \"95.0%\",\n-          subtitle: \"Acceptance\",\n-          icon: \"assets/img/acceptance.png\",\n-          onPressed: () {},),\n-          ),\n-\n-          Expanded(\n-          child:\n-           IconTitleSubtitleButton(\n-          title: \"4.75\",\n-          subtitle: \"Rating\",\n-          icon: \"assets/img/rate.png\",\n-          onPressed: () {},),\n-          ),\n-\n-          Expanded(\n-          child:\n-           IconTitleSubtitleButton(\n-          title: \"2.0%\",\n-          subtitle: \"Cancelleation\",\n-          icon: \"assets/img/cancelleation.png\",\n-          onPressed: () {},),\n-          ),\n-        ],\n-       ),\n-     )\n+    Padding(\n+      padding: const EdgeInsets.symmetric(vertical: 15),\n+      child: Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    ),\n+     \n       ],\n     ),\n   )\n   ],\n"
                },
                {
                    "date": 1719673450055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,264 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+      \n+     const Divider(),\n+\n+    Padding(\n+      padding: const EdgeInsets.symmetric(vertical: 15),\n+      child: Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+           const Divider(),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             const Divider(),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    ),\n+     \n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719673773283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -215,11 +215,9 @@\n         ),\n       \n      const Divider(),\n \n-    Padding(\n-      padding: const EdgeInsets.symmetric(vertical: 15),\n-      child: Row(\n+        Row(\n           crossAxisAlignment: CrossAxisAlignment.center,\n           children: [\n             Expanded(\n             child: IconTitleSubtitleButton(\n@@ -228,9 +226,15 @@\n             icon: \"assets/img/acceptance.png\",\n             onPressed: () {},),\n             ),\n       \n-           const Divider(),\n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n             Expanded(\n             child:\n              IconTitleSubtitleButton(\n             title: \"4.75\",\n@@ -249,9 +253,9 @@\n             onPressed: () {},),\n             ),\n           ],\n          ),\n-    ),\n+    \n      \n       ],\n     ),\n   )\n@@ -260,267 +264,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-      \n-     const Divider(),\n-\n-    Padding(\n-      padding: const EdgeInsets.symmetric(vertical: 15),\n-      child: Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    ),\n-     \n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719673934563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,272 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {}, \n+          icon: Image.asset(\n+            \"assets/img/open_btn.png\", \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+      \n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             const Divider(),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719673972310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -246,261 +246,9 @@\n             icon: \"assets/img/rate.png\",\n             onPressed: () {},),\n             ),\n              \n-             const Divider(),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-      \n-     const Divider(),\n-\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n+             Container(\n             height: 100,\n             width: 0.5,\n             decoration: BoxDecoration(\n               color: TColor.placeholder.withOpacity(0.5),\n@@ -508,18 +256,8 @@\n           ),\n             Expanded(\n             child:\n              IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             const Divider(),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n             title: \"2.0%\",\n             subtitle: \"Cancelleation\",\n             icon: \"assets/img/cancelleation.png\",\n             onPressed: () {},),\n"
                },
                {
                    "date": 1719674703861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import 'dart:ffi';\n+\n import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n@@ -10,8 +12,10 @@\n State<HomeView> createState () => _HomeViewState();\n }\n class _HomeViewState extends State<HomeView> {\n \n+  bool isOpen = true;\n+\n  late MapController _controller;\n                             \n      @override\n   void initState() {\n@@ -194,9 +198,9 @@\n           children: [\n          IconButton(\n           onPressed: () {}, \n           icon: Image.asset(\n-            \"assets/img/open_btn.png\", \n+          isOpen ? \"assets/img/open_btn.png\" : \"assets/img/close_btn.png\" , \n             width: 15, \n             height: 15,\n             ),),\n             Text(\n@@ -212,15 +216,17 @@\n           height: 50,\n         ),\n         ],\n         ),\n-      \n+\n+\n+      if(isOpen)\n        Container(\n             height: 0.5,\n             width: double.maxFinite,\n               color: TColor.placeholder.withOpacity(0.5),\n           ), \n-\n+        if(isOpen)\n         Row(\n           crossAxisAlignment: CrossAxisAlignment.center,\n           children: [\n             Expanded(\n"
                },
                {
                    "date": 1719674866761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,289 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719676365393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,347 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 15),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, -5),\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 14,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.secondaryText,\n+                    fontSize: 14,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                const SizedBox(\n+                  width: 60,),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719676392827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,9 +293,9 @@\n               children: [\n                 SizedBox(width: 60,),\n               \n               Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 15),\n+                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n                 decoration:  BoxDecoration(\n                 color: Colors.white,\n                 borderRadius: BorderRadius.circular(30),\n                 boxShadow: const [\n@@ -343,578 +343,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {}, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719676415124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,9 @@\n                 Text(\n                   \"219.76\",\n                   style: TextStyle(\n                     color: TColor.secondaryText,\n-                    fontSize: 14,\n+                    fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n             \n"
                },
                {
                    "date": 1719676441938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n             \n                 Text(\n                   \"219.76\",\n                   style: TextStyle(\n-                    color: TColor.secondaryText,\n+                    color: TColor.primaryText,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676463908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.secondaryText,\n+                    color: TColor.secondary,\n                     fontSize: 14,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676483733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n                     color: TColor.secondary,\n-                    fontSize: 14,\n+                    fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n                    \n"
                },
                {
                    "date": 1719676547911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.secondary,\n+                    color: TColor.primary,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676559001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.primary,\n+                    color: TColor.primaryText,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676571516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.primaryText,\n+                    color: TColor.primaryTextW,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676578063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.primaryTextW,\n+                    color: TColor.primary,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676651763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,347 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, -5),\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 const Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: Color.fromARGB(255, 24, 135, 28),\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                const SizedBox(\n+                  width: 60,),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719676664732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,347 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, -5),\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 const Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: Color.fromARGB(255, 19, 16, 193),\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                const SizedBox(\n+                  width: 60,),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719676676272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,702 +310,8 @@\n                 mainAxisSize: MainAxisSize.min,\n                 crossAxisAlignment: CrossAxisAlignment.start,\n                 children: [\n                  \n-                 const Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: Color.fromARGB(255, 19, 16, 193),\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                const SizedBox(\n-                  width: 60,),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, -5),\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 const Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: Color.fromARGB(255, 24, 135, 28),\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                const SizedBox(\n-                  width: 60,),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, -5),\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n                     color: TColor.primary,\n"
                },
                {
                    "date": 1719676700995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n                  \n                  Text(\n                   \"\\$\",\n                   style: TextStyle(\n-                    color: TColor.primary,\n+                    color: TColor.secondary,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n                   ),\n                 ),\n"
                },
                {
                    "date": 1719676737890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -293,9 +293,9 @@\n               children: [\n                 SizedBox(width: 60,),\n               \n               Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15, horizontal: 25),\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n                 decoration:  BoxDecoration(\n                 color: Colors.white,\n                 borderRadius: BorderRadius.circular(30),\n                 boxShadow: const [\n"
                },
                {
                    "date": 1719676791744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,11 +299,10 @@\n                 color: Colors.white,\n                 borderRadius: BorderRadius.circular(30),\n                 boxShadow: const [\n                   BoxShadow(\n-                    color: Colors.black12,\n+                    color: Colors.black26,\n                     blurRadius: 10,\n-                    offset: Offset(0, -5),\n                   ),\n                 ]\n               ),\n               child: Row(\n"
                },
                {
                    "date": 1719677758226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,372 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        boxShadow: const [\n+                          BoxShadow(\n+                        color: Colors.black26,\n+                        blurRadius: 10,\n+                        ),\n+                        ]),\n+                        child: ClipRRect (borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      )\n+\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719677845509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -343,16 +343,13 @@\n                         padding: const EdgeInsets.all(2),\n                         decoration: BoxDecoration (\n                           color: Colors.white,\n                         borderRadius: BorderRadius.circular(30),\n-                        boxShadow: const [\n-                          BoxShadow(\n-                        color: Colors.black26,\n-                        blurRadius: 10,\n                         ),\n-                        ]),\n-                        child: ClipRRect (borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\"assets/img/u1.png\",\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n                         width: 40,\n                         height: 40,\n                         ),),\n                       )\n@@ -368,351 +365,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                const SizedBox(\n-                  width: 60,),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678215170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,384 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 15),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678234908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -355,9 +355,9 @@\n                         ),),\n                       ),\n \n                       Container(\n-                        padding: const EdgeInsets.all(2),\n+                        padding: const EdgeInsets.all(8),\n                         decoration: BoxDecoration (\n                           color: Colors.red,\n                         borderRadius: BorderRadius.circular(30),\n                         ),\n"
                },
                {
                    "date": 1719678251597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,384 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 15),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.all(4),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678322515,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,385 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 15),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.all(4),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        constraints: const BoxConstraints(minWidth: 20),\n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678353691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,8 +361,9 @@\n                           color: Colors.red,\n                         borderRadius: BorderRadius.circular(30),\n                         ),\n                         constraints: const BoxConstraints(minWidth: 20),\n+                        alignment: Alignment.center,\n                 child:  Text(\n                   \"3\",\n                   style: TextStyle(\n                     color: Colors.white,\n@@ -381,1142 +382,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 15),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.all(4),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 15),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.all(8),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      )\n-\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678415456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,386 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 47.4358055,\n+        longitude: 8.4737324,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      \n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.secondary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 15),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.all(4),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        constraints: const BoxConstraints(minWidth: 15),\n+                       \n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678458206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -355,9 +355,9 @@\n                         ),),\n                       ),\n \n                       Container(\n-                        padding: const EdgeInsets.all(4),\n+                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n                         decoration: BoxDecoration (\n                           color: Colors.red,\n                         borderRadius: BorderRadius.circular(30),\n                         ),\n@@ -382,391 +382,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 15),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.all(4),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        constraints: const BoxConstraints(minWidth: 20),\n-                        alignment: Alignment.center,\n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719678483012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,9 +339,9 @@\n                     alignment: Alignment.bottomLeft,\n                     children: [\n \n                       Container(\n-                        margin: const EdgeInsets.only(left: 15),\n+                        margin: const EdgeInsets.only(left: 10),\n                         padding: const EdgeInsets.all(2),\n                         decoration: BoxDecoration (\n                           color: Colors.white,\n                         borderRadius: BorderRadius.circular(30),\n"
                },
                {
                    "date": 1719737047463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,387 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 28.0398257,\n+        longitude: 82.4838780,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      context.push( const TipRequestView() );\n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.primary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"219.76\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 10),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        constraints: const BoxConstraints(minWidth: 15),\n+                       \n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719842440262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,391 +383,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 47.4358055,\n-        longitude: 8.4737324,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      \n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.secondary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 10),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        constraints: const BoxConstraints(minWidth: 15),\n-                       \n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720011905854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,387 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+State<HomeView> createState () => _HomeViewState();\n+}\n+class _HomeViewState extends State<HomeView> {\n+\n+  bool isOpen = true;\n+\n+ late MapController _controller;\n+                            \n+     @override\n+  void initState() {\n+    super.initState();\n+    _controller = MapController(\n+      initPosition: GeoPoint(\n+        latitude: 28.0398257,\n+        longitude: 82.4838780,\n+      ),\n+    );\n+  }\n+@override\n+  void dispose() {\n+    _controller.dispose();\n+    super.dispose();\n+  }\n+\n+MarkerIcon userLocationMarker({\n+    required Icon personMarker,\n+    required Icon directionArrowMarker,\n+  }) {\n+    return MarkerIcon(\n+      icon: personMarker,\n+    );\n+  }\n+\n+@override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+            controller: _controller,\n+            osmOption: OSMOption(\n+              userTrackingOption: const UserTrackingOption(\n+                enableTracking: true,\n+                unFollowUser:false, \n+\n+\n+\n+            ),\n+            zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+            ),\n+            userLocationMarker: UserLocationMaker (\n+                personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.location_history_rounded,\n+                        color: Colors.red,\n+                        size: 48,\n+                    ),\n+                ),\n+                directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                        Icons.double_arrow,\n+                        size: 48,\n+                    ),\n+                ),\n+            ),\n+            roadConfiguration: const RoadOption(\n+                    roadColor: Colors.yellowAccent,), ),\n+            ),\n+            \n+            Column(\n+  mainAxisAlignment: MainAxisAlignment.end,\n+  children: [\n+    Padding(\n+      padding: const EdgeInsets.symmetric(horizontal: 20),\n+      child: Row(\n+        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+        crossAxisAlignment: CrossAxisAlignment.end,\n+        children: [\n+      \n+        const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(35),\n+          onTap: () {\n+      context.push( const TipRequestView() );\n+          },\n+          child: Stack(\n+            alignment: Alignment.center,\n+          children: [\n+            Container(\n+              width: 70,\n+              height: 70,\n+              decoration: BoxDecoration(\n+                color: TColor.primary,\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+            ),\n+      \n+           Container(\n+              width: 60,\n+              height: 60,\n+              decoration: BoxDecoration(\n+                border: Border.all(color: Colors.white, width: 1.5),\n+                borderRadius: BorderRadius.circular(35),\n+               \n+                \n+              ),\n+              alignment: Alignment.center,\n+              child: const Text(\n+                \"GO\",\n+                style: TextStyle(\n+                  color: Colors.white,\n+                  fontSize: 22,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+            )\n+          ],\n+          ),\n+        ),\n+      \n+        InkWell(\n+            borderRadius: BorderRadius.circular(20), \n+           onTap: () {},\n+           child: \n+           Container(\n+              width: 50,\n+              height: 50,\n+              decoration: BoxDecoration(\n+                borderRadius: BorderRadius.circular(35),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black12,\n+                    blurRadius: 10,\n+                    offset: Offset(0, 5),\n+                  ),\n+                ]\n+              ),\n+              child: \n+           Image.asset(\n+            \"assets/img/current_location.png\", \n+            width: 50, \n+            height: 50,\n+            ),\n+            ),\n+        ),\n+        ],\n+      ),\n+    ),\n+\n+const SizedBox(\n+  height: 15,\n+),\n+  \n+  Container(\n+    padding: const EdgeInsets.symmetric(vertical: 15),\n+    decoration: const BoxDecoration(\n+              color: Colors.white,\n+              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n+              topRight: Radius.circular(10) ),\n+              boxShadow:  [\n+                BoxShadow(\n+                  color: Colors.black12,\n+                  blurRadius: 10,\n+                  offset: Offset(0, -5),\n+                ),\n+              ]\n+            ),\n+    child: Column(\n+      children: [\n+        Row(\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+          children: [\n+         IconButton(\n+          onPressed: () {\n+            setState(() {\n+              isOpen = !isOpen;\n+            });\n+          }, \n+          icon: Image.asset(\n+          isOpen ? \"assets/img/open_btn.png\" \n+                 : \"assets/img/close_btn.png\" , \n+            width: 15, \n+            height: 15,\n+            ),),\n+            Text(\n+                \"You're offline\",\n+                style: TextStyle(\n+                  color: TColor.primaryText,\n+                  fontSize: 18,\n+                  fontWeight: FontWeight.w800,\n+                ),\n+              ),\n+               const SizedBox(\n+          width: 50,\n+          height: 50,\n+        ),\n+        ],\n+        ),\n+\n+\n+      if(isOpen)\n+       Container(\n+            height: 0.5,\n+            width: double.maxFinite,\n+              color: TColor.placeholder.withOpacity(0.5),\n+          ), \n+        if(isOpen)\n+        Row(\n+          crossAxisAlignment: CrossAxisAlignment.center,\n+          children: [\n+            Expanded(\n+            child: IconTitleSubtitleButton(\n+            title: \"95.0%\",\n+            subtitle: \"Acceptance\",\n+            icon: \"assets/img/acceptance.png\",\n+            onPressed: () {},),\n+            ),\n+      \n+          Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"4.75\",\n+            subtitle: \"Rating\",\n+            icon: \"assets/img/rate.png\",\n+            onPressed: () {},),\n+            ),\n+             \n+             Container(\n+            height: 100,\n+            width: 0.5,\n+            decoration: BoxDecoration(\n+              color: TColor.placeholder.withOpacity(0.5),\n+            ),\n+          ),\n+            Expanded(\n+            child:\n+             IconTitleSubtitleButton(\n+            title: \"2.0%\",\n+            subtitle: \"Cancelleation\",\n+            icon: \"assets/img/cancelleation.png\",\n+            onPressed: () {},),\n+            ),\n+          ],\n+         ),\n+    \n+     \n+      ],\n+    ),\n+  )\n+  ],\n+),\n+      \n+      SafeArea(child: Column(\n+        mainAxisAlignment: MainAxisAlignment.start,\n+        children: [\n+          Padding(\n+            padding: const EdgeInsets.all(15),\n+            child: Row(\n+              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+              children: [\n+                SizedBox(width: 60,),\n+              \n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n+                decoration:  BoxDecoration(\n+                color: Colors.white,\n+                borderRadius: BorderRadius.circular(30),\n+                boxShadow: const [\n+                  BoxShadow(\n+                    color: Colors.black26,\n+                    blurRadius: 10,\n+                  ),\n+                ]\n+              ),\n+              child: Row(\n+                mainAxisSize: MainAxisSize.min,\n+                crossAxisAlignment: CrossAxisAlignment.start,\n+                children: [\n+                 \n+                 Text(\n+                  \"\\$\",\n+                  style: TextStyle(\n+                    color: TColor.primary,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+                   \n+                   const SizedBox(\n+                    width: 8,),\n+            \n+                Text(\n+                  \"\\$154.57\",\n+                  style: TextStyle(\n+                    color: TColor.primaryText,\n+                    fontSize: 25,\n+                    fontWeight: FontWeight.w800,\n+                  ),\n+                ),\n+            \n+              ],),),\n+                SizedBox(\n+                  width: 60,\n+                  child: Stack(\n+                    alignment: Alignment.bottomLeft,\n+                    children: [\n+\n+                      Container(\n+                        margin: const EdgeInsets.only(left: 10),\n+                        padding: const EdgeInsets.all(2),\n+                        decoration: BoxDecoration (\n+                          color: Colors.white,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        child: ClipRRect (\n+                          borderRadius: BorderRadius.circular(20),\n+                        child: Image.asset(\n+                          \"assets/img/u1.png\",\n+                        width: 40,\n+                        height: 40,\n+                        ),),\n+                      ),\n+\n+                      Container(\n+                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n+                        decoration: BoxDecoration (\n+                          color: Colors.red,\n+                        borderRadius: BorderRadius.circular(30),\n+                        ),\n+                        constraints: const BoxConstraints(minWidth: 15),\n+                       \n+                child:  Text(\n+                  \"3\",\n+                  style: TextStyle(\n+                    color: Colors.white,\n+                    fontSize: 10,\n+                  ),\n+                  ),\n+                ),\n+                    ],\n+                  ),\n+                  ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),)\n+        ],\n+      ),\n+    );\n+  }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720011914670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n                    const SizedBox(\n                     width: 8,),\n             \n                 Text(\n-                  \"\\$154.57\",\n+                  \"154.57\",\n                   style: TextStyle(\n                     color: TColor.primaryText,\n                     fontSize: 25,\n                     fontWeight: FontWeight.w800,\n@@ -383,392 +383,5 @@\n         ],\n       ),\n     );\n   }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 28.0398257,\n-        longitude: 82.4838780,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      context.push( const TipRequestView() );\n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.primary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 8,),\n-            \n-                Text(\n-                  \"219.76\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      Container(\n-                        margin: const EdgeInsets.only(left: 10),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        constraints: const BoxConstraints(minWidth: 15),\n-                       \n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1720337969511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n \n class HomeView extends StatefulWidget {\n   const HomeView({super.key});\n \n@@ -321,9 +322,9 @@\n                   ),\n                 ),\n                    \n                    const SizedBox(\n-                    width: 8,),\n+                    width: 2,),\n             \n                 Text(\n                   \"154.57\",\n                   style: TextStyle(\n@@ -339,22 +340,27 @@\n                   child: Stack(\n                     alignment: Alignment.bottomLeft,\n                     children: [\n \n-                      Container(\n-                        margin: const EdgeInsets.only(left: 10),\n-                        padding: const EdgeInsets.all(2),\n-                        decoration: BoxDecoration (\n-                          color: Colors.white,\n-                        borderRadius: BorderRadius.circular(30),\n+                      InkWell(\n+                        onTap: () {\n+                          context.push( const MenuView() );\n+                        },\n+                        child: Container(\n+                          margin: const EdgeInsets.only(left: 10),\n+                          padding: const EdgeInsets.all(2),\n+                          decoration: BoxDecoration (\n+                            color: Colors.white,\n+                          borderRadius: BorderRadius.circular(30),\n+                          ),\n+                          child: ClipRRect (\n+                            borderRadius: BorderRadius.circular(20),\n+                          child: Image.asset(\n+                            \"assets/img/u1.png\",\n+                          width: 40,\n+                          height: 40,\n+                          ),),\n                         ),\n-                        child: ClipRRect (\n-                          borderRadius: BorderRadius.circular(20),\n-                        child: Image.asset(\n-                          \"assets/img/u1.png\",\n-                        width: 40,\n-                        height: 40,\n-                        ),),\n                       ),\n \n                       Container(\n                         padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n"
                },
                {
                    "date": 1720337981444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,9 +322,9 @@\n                   ),\n                 ),\n                    \n                    const SizedBox(\n-                    width: 2,),\n+                    width: 3,),\n             \n                 Text(\n                   \"154.57\",\n                   style: TextStyle(\n"
                },
                {
                    "date": 1720337993783,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,9 +322,9 @@\n                   ),\n                 ),\n                    \n                    const SizedBox(\n-                    width: 3,),\n+                    width: 4,),\n             \n                 Text(\n                   \"154.57\",\n                   style: TextStyle(\n"
                },
                {
                    "date": 1722744952276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1722774396838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1722862437076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,451 +0,0 @@\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722862467099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,844 +0,0 @@\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-State<HomeView> createState () => _HomeViewState();\n-}\n-class _HomeViewState extends State<HomeView> {\n-\n-  bool isOpen = true;\n-\n- late MapController _controller;\n-                            \n-     @override\n-  void initState() {\n-    super.initState();\n-    _controller = MapController(\n-      initPosition: GeoPoint(\n-        latitude: 28.0398257,\n-        longitude: 82.4838780,\n-      ),\n-    );\n-  }\n-@override\n-  void dispose() {\n-    _controller.dispose();\n-    super.dispose();\n-  }\n-\n-MarkerIcon userLocationMarker({\n-    required Icon personMarker,\n-    required Icon directionArrowMarker,\n-  }) {\n-    return MarkerIcon(\n-      icon: personMarker,\n-    );\n-  }\n-\n-@override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-            controller: _controller,\n-            osmOption: OSMOption(\n-              userTrackingOption: const UserTrackingOption(\n-                enableTracking: true,\n-                unFollowUser:false, \n-\n-\n-\n-            ),\n-            zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-            ),\n-            userLocationMarker: UserLocationMaker (\n-                personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.location_history_rounded,\n-                        color: Colors.red,\n-                        size: 48,\n-                    ),\n-                ),\n-                directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                        Icons.double_arrow,\n-                        size: 48,\n-                    ),\n-                ),\n-            ),\n-            roadConfiguration: const RoadOption(\n-                    roadColor: Colors.yellowAccent,), ),\n-            ),\n-            \n-            Column(\n-  mainAxisAlignment: MainAxisAlignment.end,\n-  children: [\n-    Padding(\n-      padding: const EdgeInsets.symmetric(horizontal: 20),\n-      child: Row(\n-        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-        crossAxisAlignment: CrossAxisAlignment.end,\n-        children: [\n-      \n-        const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(35),\n-          onTap: () {\n-      context.push( const TipRequestView() );\n-          },\n-          child: Stack(\n-            alignment: Alignment.center,\n-          children: [\n-            Container(\n-              width: 70,\n-              height: 70,\n-              decoration: BoxDecoration(\n-                color: TColor.primary,\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-            ),\n-      \n-           Container(\n-              width: 60,\n-              height: 60,\n-              decoration: BoxDecoration(\n-                border: Border.all(color: Colors.white, width: 1.5),\n-                borderRadius: BorderRadius.circular(35),\n-               \n-                \n-              ),\n-              alignment: Alignment.center,\n-              child: const Text(\n-                \"GO\",\n-                style: TextStyle(\n-                  color: Colors.white,\n-                  fontSize: 22,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-            )\n-          ],\n-          ),\n-        ),\n-      \n-        InkWell(\n-            borderRadius: BorderRadius.circular(20), \n-           onTap: () {},\n-           child: \n-           Container(\n-              width: 50,\n-              height: 50,\n-              decoration: BoxDecoration(\n-                borderRadius: BorderRadius.circular(35),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black12,\n-                    blurRadius: 10,\n-                    offset: Offset(0, 5),\n-                  ),\n-                ]\n-              ),\n-              child: \n-           Image.asset(\n-            \"assets/img/current_location.png\", \n-            width: 50, \n-            height: 50,\n-            ),\n-            ),\n-        ),\n-        ],\n-      ),\n-    ),\n-\n-const SizedBox(\n-  height: 15,\n-),\n-  \n-  Container(\n-    padding: const EdgeInsets.symmetric(vertical: 15),\n-    decoration: const BoxDecoration(\n-              color: Colors.white,\n-              borderRadius: BorderRadius.only(topLeft: Radius.circular(10),\n-              topRight: Radius.circular(10) ),\n-              boxShadow:  [\n-                BoxShadow(\n-                  color: Colors.black12,\n-                  blurRadius: 10,\n-                  offset: Offset(0, -5),\n-                ),\n-              ]\n-            ),\n-    child: Column(\n-      children: [\n-        Row(\n-          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-          children: [\n-         IconButton(\n-          onPressed: () {\n-            setState(() {\n-              isOpen = !isOpen;\n-            });\n-          }, \n-          icon: Image.asset(\n-          isOpen ? \"assets/img/open_btn.png\" \n-                 : \"assets/img/close_btn.png\" , \n-            width: 15, \n-            height: 15,\n-            ),),\n-            Text(\n-                \"You're offline\",\n-                style: TextStyle(\n-                  color: TColor.primaryText,\n-                  fontSize: 18,\n-                  fontWeight: FontWeight.w800,\n-                ),\n-              ),\n-               const SizedBox(\n-          width: 50,\n-          height: 50,\n-        ),\n-        ],\n-        ),\n-\n-\n-      if(isOpen)\n-       Container(\n-            height: 0.5,\n-            width: double.maxFinite,\n-              color: TColor.placeholder.withOpacity(0.5),\n-          ), \n-        if(isOpen)\n-        Row(\n-          crossAxisAlignment: CrossAxisAlignment.center,\n-          children: [\n-            Expanded(\n-            child: IconTitleSubtitleButton(\n-            title: \"95.0%\",\n-            subtitle: \"Acceptance\",\n-            icon: \"assets/img/acceptance.png\",\n-            onPressed: () {},),\n-            ),\n-      \n-          Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"4.75\",\n-            subtitle: \"Rating\",\n-            icon: \"assets/img/rate.png\",\n-            onPressed: () {},),\n-            ),\n-             \n-             Container(\n-            height: 100,\n-            width: 0.5,\n-            decoration: BoxDecoration(\n-              color: TColor.placeholder.withOpacity(0.5),\n-            ),\n-          ),\n-            Expanded(\n-            child:\n-             IconTitleSubtitleButton(\n-            title: \"2.0%\",\n-            subtitle: \"Cancelleation\",\n-            icon: \"assets/img/cancelleation.png\",\n-            onPressed: () {},),\n-            ),\n-          ],\n-         ),\n-    \n-     \n-      ],\n-    ),\n-  )\n-  ],\n-),\n-      \n-      SafeArea(child: Column(\n-        mainAxisAlignment: MainAxisAlignment.start,\n-        children: [\n-          Padding(\n-            padding: const EdgeInsets.all(15),\n-            child: Row(\n-              mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-              children: [\n-                SizedBox(width: 60,),\n-              \n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 8, horizontal: 25),\n-                decoration:  BoxDecoration(\n-                color: Colors.white,\n-                borderRadius: BorderRadius.circular(30),\n-                boxShadow: const [\n-                  BoxShadow(\n-                    color: Colors.black26,\n-                    blurRadius: 10,\n-                  ),\n-                ]\n-              ),\n-              child: Row(\n-                mainAxisSize: MainAxisSize.min,\n-                crossAxisAlignment: CrossAxisAlignment.start,\n-                children: [\n-                 \n-                 Text(\n-                  \"\\$\",\n-                  style: TextStyle(\n-                    color: TColor.primary,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-                   \n-                   const SizedBox(\n-                    width: 4,),\n-            \n-                Text(\n-                  \"154.57\",\n-                  style: TextStyle(\n-                    color: TColor.primaryText,\n-                    fontSize: 25,\n-                    fontWeight: FontWeight.w800,\n-                  ),\n-                ),\n-            \n-              ],),),\n-                SizedBox(\n-                  width: 60,\n-                  child: Stack(\n-                    alignment: Alignment.bottomLeft,\n-                    children: [\n-\n-                      InkWell(\n-                        onTap: () {\n-                          context.push( const MenuView() );\n-                        },\n-                        child: Container(\n-                          margin: const EdgeInsets.only(left: 10),\n-                          padding: const EdgeInsets.all(2),\n-                          decoration: BoxDecoration (\n-                            color: Colors.white,\n-                          borderRadius: BorderRadius.circular(30),\n-                          ),\n-                          child: ClipRRect (\n-                            borderRadius: BorderRadius.circular(20),\n-                          child: Image.asset(\n-                            \"assets/img/u1.png\",\n-                          width: 40,\n-                          height: 40,\n-                          ),),\n-                        ),\n-                      ),\n-\n-                      Container(\n-                        padding: const EdgeInsets.symmetric(horizontal: 8, vertical: 1),\n-                        decoration: BoxDecoration (\n-                          color: Colors.red,\n-                        borderRadius: BorderRadius.circular(30),\n-                        ),\n-                        constraints: const BoxConstraints(minWidth: 15),\n-                       \n-                child:  Text(\n-                  \"3\",\n-                  style: TextStyle(\n-                    color: Colors.white,\n-                    fontSize: 10,\n-                  ),\n-                  ),\n-                ),\n-                    ],\n-                  ),\n-                  ),\n-              ],\n-            ),\n-          )\n-        ],\n-      ),)\n-        ],\n-      ),\n-    );\n-  }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1722863289395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,451 @@\n+import 'dart:ffi';\n \n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1724056983219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,457 @@\n-import 'dart:ffi';\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n \n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n import 'package:flutter/material.dart';\n import 'package:flutter/widgets.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n@@ -447,5 +898,5 @@\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-}\n+}*/\n"
                },
                {
                    "date": 1724145630288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import 'package:flutter/material.dart';\n+/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -444,9 +444,9 @@\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-}\n+}*/\n \n \n \n /*import 'dart:ffi';\n"
                },
                {
                    "date": 1724145710011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,902 @@\n+/*import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724322268503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -444,9 +444,9 @@\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-}*/\n+}\n \n \n \n /*import 'dart:ffi';\n"
                },
                {
                    "date": 1724403743966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,902 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724591462945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,902 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724672618864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724822190595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    //apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data)  {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+             context.push( TipRequestView(bObj: bArr[0]) );\n+            //apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724822990087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       LocationHelper.shared().startInit();\n     \n       // Received Message In Socket On Event\n       SocketManager.shared.socket?.on(\"new_ride_request\", (data)  {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n+        print(\"ne w_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n           \n"
                },
                {
                    "date": 1724827061661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n       LocationHelper.shared().startInit();\n     \n       // Received Message In Socket On Event\n       SocketManager.shared.socket?.on(\"new_ride_request\", (data)  {\n-        print(\"ne w_ride_request socket get :${data.toString()} \");\n+        print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n           \n"
                },
                {
                    "date": 1724829515640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,24 +32,24 @@\n   void initState() {\n     // TODO: implement initState\n     super.initState();\n \n-    //apiHome();\n+apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n       LocationHelper.shared().startInit();\n     \n       // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data)  {\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n         print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n           \n           if(mounted && bArr.isNotEmpty){\n-             context.push( TipRequestView(bObj: bArr[0]) );\n-            //apiHome();\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n           }\n         }\n       });\n       \n"
                },
                {
                    "date": 1724837343032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                        context.push(const TipRequestView(bObj: {},));\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724837449796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,462 +128,8 @@\n \n                           isDriverOnline = !isDriverOnline;\n                           \n                           apiGoOnline();\n-                        context.push(const TipRequestView(bObj: {},));\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n                        // context.push(const TipRequestView());\n                       },\n                       child: Stack(\n                         alignment: Alignment.center,\n@@ -774,457 +320,8 @@\n                             children: [\n                               Text(\n                                 \"\\$\",\n                                 style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n                                     color: TColor.primary,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n                               ),\n@@ -1803,4515 +900,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-/*import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n"
                },
                {
                    "date": 1724837492332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                 userLocationMarker: UserLocationMaker(\n                   personMarker: const MarkerIcon(\n                     icon: Icon(\n                       Icons.location_history_rounded,\n-                      color: Colors.red,\n+                      color: Color.fromARGB(255, 231, 21, 6),\n                       size: 48,\n                     ),\n                   ),\n                   directionArrowMarker: const MarkerIcon(\n"
                },
                {
                    "date": 1724837514072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724854186317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                        context.push(const TipRequestView(bObj: {},));\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1724854225973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,462 +128,8 @@\n \n                           isDriverOnline = !isDriverOnline;\n                           \n                           apiGoOnline();\n-                        context.push(const TipRequestView(bObj: {},));\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n                        // context.push(const TipRequestView());\n                       },\n                       child: Stack(\n                         alignment: Alignment.center,\n@@ -774,457 +320,8 @@\n                             children: [\n                               Text(\n                                 \"\\$\",\n                                 style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n                                     color: TColor.primary,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n                               ),\n@@ -1803,907 +900,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Color.fromARGB(255, 231, 21, 6),\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n"
                },
                {
                    "date": 1724955159932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,36 @@\n   void initState() {\n     // TODO: implement initState\n     super.initState();\n \n-apiHome();\n+\n+\n+  apiHome();\n+  isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+  if (ServiceCall.userType == 2) {\n+    LocationHelper.shared().startInit();\n+\n+    // Received Message In Socket On Event\n+    SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+      print(\"new_ride_request socket get :${data.toString()} \");\n+      if (data[KKey.status] == \"1\") {\n+        var bArr = data[KKey.payload] as List? ?? [];\n+\n+        if (mounted && bArr.isNotEmpty) {\n+          try {\n+            await context.push(TipRequestView(bObj: bArr[0]));\n+            apiHome();\n+          } catch (e) {\n+            print(\"Error during navigation: $e\");\n+          }\n+        }\n+      }\n+    });\n+  }\n+}\n+\n+/*apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n       LocationHelper.shared().startInit();\n@@ -53,9 +80,9 @@\n         }\n       });\n       \n     }\n-  }\n+  }*/\n \n   @override\n   void dispose() {\n     // TODO: implement dispose\n"
                },
                {
                    "date": 1724955848628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,36 +32,9 @@\n   void initState() {\n     // TODO: implement initState\n     super.initState();\n \n-\n-\n-  apiHome();\n-  isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-  if (ServiceCall.userType == 2) {\n-    LocationHelper.shared().startInit();\n-\n-    // Received Message In Socket On Event\n-    SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-      print(\"new_ride_request socket get :${data.toString()} \");\n-      if (data[KKey.status] == \"1\") {\n-        var bArr = data[KKey.payload] as List? ?? [];\n-\n-        if (mounted && bArr.isNotEmpty) {\n-          try {\n-            await context.push(TipRequestView(bObj: bArr[0]));\n-            apiHome();\n-          } catch (e) {\n-            print(\"Error during navigation: $e\");\n-          }\n-        }\n-      }\n-    });\n-  }\n-}\n-\n-/*apiHome();\n+apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n       LocationHelper.shared().startInit();\n@@ -80,9 +53,9 @@\n         }\n       });\n       \n     }\n-  }*/\n+  }\n \n   @override\n   void dispose() {\n     // TODO: implement dispose\n"
                },
                {
                    "date": 1725090158826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,903 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"2\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'dart:ffi';\n+\n+import 'package:flutter/material.dart';\n+import 'package:flutter/widgets.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1725090219301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,462 +41,8 @@\n     \n       // Received Message In Socket On Event\n       SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n         print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"2\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n           \n@@ -774,457 +320,8 @@\n                             children: [\n                               Text(\n                                 \"\\$\",\n                                 style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n                                     color: TColor.primary,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n                               ),\n"
                },
                {
                    "date": 1725274850474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+        //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n   );\n \n   @override\n   void initState() {\n"
                },
                {
                    "date": 1725277184812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-        //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n   );\n \n   @override\n   void initState() {\n"
                },
                {
                    "date": 1725301002007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,10 +23,10 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-        initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+        //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n   );\n \n   @override\n   void initState() {\n"
                },
                {
                    "date": 1725469510734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,449 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725474605418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,449 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725474659989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,449 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725475024987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -446,1805 +446,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-        //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'dart:ffi';\n-\n-import 'package:flutter/material.dart';\n-import 'package:flutter/widgets.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}*/\n"
                },
                {
                    "date": 1725526240273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n     //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n \n   @override\n"
                },
                {
                    "date": 1725680760018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,426 @@\n import 'package:flutter/material.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+  bool isDriverOnline = false;\n+  late GoogleMapController mapController;\n+\n+  final LatLng _initialPosition = const LatLng(27.700769, 85.300140);\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+\n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          if (mounted && bArr.isNotEmpty) {\n+            await context.push(TipRequestView(bObj: bArr[0]));\n+            apiHome();\n+          }\n+        }\n+      });\n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    super.dispose();\n+    mapController.dispose();\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: _initialPosition,\n+              zoom: 8,\n+            ),\n+            myLocationEnabled: true,\n+            myLocationButtonEnabled: true,\n+            markers: {\n+              Marker(\n+                markerId: MarkerId('currentLocation'),\n+                position: _initialPosition,\n+                icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n+              ),\n+            },\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+                        setState(() {\n+                          isDriverOnline = !isDriverOnline;\n+                        });\n+                        apiGoOnline();\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border: Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child: Text(\n+                              isDriverOnline ? \"OFF\" : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancellation\",\n+                                icon: \"assets/img/cancellation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -447,4 +868,5 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n+*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725682157996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,426 +1,5 @@\n import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-  bool isDriverOnline = false;\n-  late GoogleMapController mapController;\n-\n-  final LatLng _initialPosition = const LatLng(27.700769, 85.300140);\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-\n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          if (mounted && bArr.isNotEmpty) {\n-            await context.push(TipRequestView(bObj: bArr[0]));\n-            apiHome();\n-          }\n-        }\n-      });\n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    super.dispose();\n-    mapController.dispose();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: _initialPosition,\n-              zoom: 8,\n-            ),\n-            myLocationEnabled: true,\n-            myLocationButtonEnabled: true,\n-            markers: {\n-              Marker(\n-                markerId: MarkerId('currentLocation'),\n-                position: _initialPosition,\n-                icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n-              ),\n-            },\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-                        setState(() {\n-                          isDriverOnline = !isDriverOnline;\n-                        });\n-                        apiGoOnline();\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border: Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child: Text(\n-                              isDriverOnline ? \"OFF\" : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancellation\",\n-                                icon: \"assets/img/cancellation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -868,5 +447,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725692460196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/location_helper.dart';\n@@ -19,9 +20,433 @@\n }\n \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n+  bool isDriverOnline = false;\n+  late GoogleMapController mapController;\n+  Set<Marker> _markers = {};\n \n+  @override\n+  void initState() {\n+    super.initState();\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+\n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          if (mounted && bArr.isNotEmpty) {\n+            await context.push(TipRequestView(bObj: bArr[0]));\n+            apiHome();\n+          }\n+        }\n+      });\n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    super.dispose();\n+    mapController.dispose();\n+  }\n+\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+  }\n+\n+  void _initializeMarkers() {\n+    // Add your marker initialization logic here\n+    // Example:\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('current_location'),\n+        position: LatLng(27.700769, 85.300140),\n+        infoWindow: InfoWindow(title: 'Current Location'),\n+        icon: BitmapDescriptor.defaultMarker,\n+      ),\n+    );\n+    setState(() {});\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(27.700769, 85.300140),\n+              zoom: 15,\n+            ),\n+            markers: _markers,\n+            myLocationEnabled: true,\n+            myLocationButtonEnabled: false,\n+          ),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+                        isDriverOnline = !isDriverOnline;\n+                        apiGoOnline();\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border: Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child: Text(\n+                              isDriverOnline ? \"OFF\" : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+        isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post({}, SVKey.svHome, isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+\n+        if (rObj.keys.isNotEmpty) {\n+          context.push(RunRideView(rObj: rObj));\n+        }\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+\n+/*import 'package:flutter/material.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n+\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+\n+this is my old code i want to change osmflutter map to google map can you provide simmilar code for me \n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n     initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n@@ -447,4 +872,5 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n+*/\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725698291948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/location_helper.dart';\n@@ -20,75 +19,97 @@\n }\n \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n+\n   bool isDriverOnline = false;\n-  late GoogleMapController mapController;\n-  Set<Marker> _markers = {};\n \n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n   @override\n   void initState() {\n+    // TODO: implement initState\n     super.initState();\n+\n     apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n       LocationHelper.shared().startInit();\n-\n+    \n       // Received Message In Socket On Event\n       SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n         print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n-          if (mounted && bArr.isNotEmpty) {\n-            await context.push(TipRequestView(bObj: bArr[0]));\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n             apiHome();\n           }\n         }\n       });\n+      \n     }\n   }\n \n   @override\n   void dispose() {\n+    // TODO: implement dispose\n     super.dispose();\n-    mapController.dispose();\n+    controller.dispose();\n   }\n \n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  void _initializeMarkers() {\n-    // Add your marker initialization logic here\n-    // Example:\n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('current_location'),\n-        position: LatLng(27.700769, 85.300140),\n-        infoWindow: InfoWindow(title: 'Current Location'),\n-        icon: BitmapDescriptor.defaultMarker,\n-      ),\n-    );\n-    setState(() {});\n-  }\n-\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       body: Stack(\n         children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(27.700769, 85.300140),\n-              zoom: 15,\n-            ),\n-            markers: _markers,\n-            myLocationEnabled: true,\n-            myLocationButtonEnabled: false,\n-          ),\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n           Column(\n             mainAxisAlignment: MainAxisAlignment.end,\n             children: [\n               Padding(\n@@ -103,10 +124,14 @@\n                     ),\n                     InkWell(\n                       borderRadius: BorderRadius.circular(35),\n                       onTap: () {\n-                        isDriverOnline = !isDriverOnline;\n-                        apiGoOnline();\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n                       },\n                       child: Stack(\n                         alignment: Alignment.center,\n                         children: [\n@@ -127,14 +152,15 @@\n                           Container(\n                             width: 60,\n                             height: 60,\n                             decoration: BoxDecoration(\n-                              border: Border.all(color: Colors.white, width: 1.5),\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n                               borderRadius: BorderRadius.circular(35),\n                             ),\n                             alignment: Alignment.center,\n-                            child: Text(\n-                              isDriverOnline ? \"OFF\" : \"GO\",\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n                               style: const TextStyle(\n                                   color: Colors.white,\n                                   fontSize: 22,\n                                   fontWeight: FontWeight.w800),\n@@ -379,15 +405,16 @@\n       if (responseObj[KKey.status] == \"1\") {\n         Globs.udBoolSet(isDriverOnline, \"is_online\");\n \n         ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n \n         if (mounted) {\n           setState(() {});\n         }\n       } else {\n-        isDriverOnline = !isDriverOnline;\n+         isDriverOnline = !isDriverOnline;\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n     }, failure: (error) async {\n@@ -397,17 +424,21 @@\n   }\n \n   void apiHome() {\n     Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svHome, isTokenApi: true, withSuccess: (responseObj) async {\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n       Globs.hideHUD();\n \n       if (responseObj[KKey.status] == \"1\") {\n-        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n \n-        if (rObj.keys.isNotEmpty) {\n-          context.push(RunRideView(rObj: rObj));\n-        }\n       } else {\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n@@ -418,9 +449,8 @@\n   }\n }\n \n \n-\n /*import 'package:flutter/material.dart';\n import 'package:google_maps_flutter/google_maps_flutter.dart';\n \n import 'package:taxi_driver/common/color_extension.dart';\n@@ -440,101 +470,77 @@\n   @override\n   State<HomeView> createState() => _HomeViewState();\n }\n \n-\n-this is my old code i want to change osmflutter map to google map can you provide simmilar code for me \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n-\n   bool isDriverOnline = false;\n+  late GoogleMapController mapController;\n+  Set<Marker> _markers = {};\n \n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n   @override\n   void initState() {\n-    // TODO: implement initState\n     super.initState();\n-\n     apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n       LocationHelper.shared().startInit();\n-    \n+\n       // Received Message In Socket On Event\n       SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n         print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n+          if (mounted && bArr.isNotEmpty) {\n+            await context.push(TipRequestView(bObj: bArr[0]));\n             apiHome();\n           }\n         }\n       });\n-      \n     }\n   }\n \n   @override\n   void dispose() {\n-    // TODO: implement dispose\n     super.dispose();\n-    controller.dispose();\n+    mapController.dispose();\n   }\n \n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n+  }\n+\n+  void _initializeMarkers() {\n+    // Add your marker initialization logic here\n+    // Example:\n+    _markers.add(\n+      Marker(\n+        markerId: MarkerId('current_location'),\n+        position: LatLng(27.700769, 85.300140),\n+        infoWindow: InfoWindow(title: 'Current Location'),\n+        icon: BitmapDescriptor.defaultMarker,\n+      ),\n+    );\n+    setState(() {});\n+  }\n+\n   @override\n   Widget build(BuildContext context) {\n     return Scaffold(\n       body: Stack(\n         children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: LatLng(27.700769, 85.300140),\n+              zoom: 15,\n+            ),\n+            markers: _markers,\n+            myLocationEnabled: true,\n+            myLocationButtonEnabled: false,\n+          ),\n           Column(\n             mainAxisAlignment: MainAxisAlignment.end,\n             children: [\n               Padding(\n@@ -549,14 +555,10 @@\n                     ),\n                     InkWell(\n                       borderRadius: BorderRadius.circular(35),\n                       onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n+                        isDriverOnline = !isDriverOnline;\n+                        apiGoOnline();\n                       },\n                       child: Stack(\n                         alignment: Alignment.center,\n                         children: [\n@@ -577,15 +579,14 @@\n                           Container(\n                             width: 60,\n                             height: 60,\n                             decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n+                              border: Border.all(color: Colors.white, width: 1.5),\n                               borderRadius: BorderRadius.circular(35),\n                             ),\n                             alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                            child: Text(\n+                              isDriverOnline ? \"OFF\" : \"GO\",\n                               style: const TextStyle(\n                                   color: Colors.white,\n                                   fontSize: 22,\n                                   fontWeight: FontWeight.w800),\n@@ -830,16 +831,15 @@\n       if (responseObj[KKey.status] == \"1\") {\n         Globs.udBoolSet(isDriverOnline, \"is_online\");\n \n         ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n \n         if (mounted) {\n           setState(() {});\n         }\n       } else {\n-         isDriverOnline = !isDriverOnline;\n+        isDriverOnline = !isDriverOnline;\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n     }, failure: (error) async {\n@@ -849,21 +849,17 @@\n   }\n \n   void apiHome() {\n     Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n+    ServiceCall.post({}, SVKey.svHome, isTokenApi: true, withSuccess: (responseObj) async {\n       Globs.hideHUD();\n \n       if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n+        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n \n+        if (rObj.keys.isNotEmpty) {\n+          context.push(RunRideView(rObj: rObj));\n+        }\n       } else {\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n@@ -872,5 +868,6 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-*/\n\\ No newline at end of file\n+*/\n+\n"
                },
                {
                    "date": 1725699069202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import 'package:flutter/material.dart';\n+/*import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -446,12 +446,12 @@\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-}\n+}*/\n \n \n-/*import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n import 'package:google_maps_flutter/google_maps_flutter.dart';\n \n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n@@ -868,6 +868,6 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-*/\n \n+\n"
                },
                {
                    "date": 1725778038524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -856,9 +856,9 @@\n       if (responseObj[KKey.status] == \"1\") {\n         var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n \n         if (rObj.keys.isNotEmpty) {\n-          context.push(RunRideView(rObj: rObj));\n+         // context.push(RunRideView(rObj: rObj));\n         }\n       } else {\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n"
                },
                {
                    "date": 1725779486887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -856,9 +856,9 @@\n       if (responseObj[KKey.status] == \"1\") {\n         var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n \n         if (rObj.keys.isNotEmpty) {\n-         // context.push(RunRideView(rObj: rObj));\n+          context.push(RunRideView(rObj: rObj));\n         }\n       } else {\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n"
                },
                {
                    "date": 1725785051052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/*import 'package:flutter/material.dart';\n+import 'package:flutter/material.dart';\n import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n@@ -446,428 +446,5 @@\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-}*/\n-\n-\n-import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n }\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-  bool isDriverOnline = false;\n-  late GoogleMapController mapController;\n-  Set<Marker> _markers = {};\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-\n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          if (mounted && bArr.isNotEmpty) {\n-            await context.push(TipRequestView(bObj: bArr[0]));\n-            apiHome();\n-          }\n-        }\n-      });\n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    super.dispose();\n-    mapController.dispose();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  void _initializeMarkers() {\n-    // Add your marker initialization logic here\n-    // Example:\n-    _markers.add(\n-      Marker(\n-        markerId: MarkerId('current_location'),\n-        position: LatLng(27.700769, 85.300140),\n-        infoWindow: InfoWindow(title: 'Current Location'),\n-        icon: BitmapDescriptor.defaultMarker,\n-      ),\n-    );\n-    setState(() {});\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: LatLng(27.700769, 85.300140),\n-              zoom: 15,\n-            ),\n-            markers: _markers,\n-            myLocationEnabled: true,\n-            myLocationButtonEnabled: false,\n-          ),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-                        isDriverOnline = !isDriverOnline;\n-                        apiGoOnline();\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border: Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child: Text(\n-                              isDriverOnline ? \"OFF\" : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svHome, isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-\n-        if (rObj.keys.isNotEmpty) {\n-          context.push(RunRideView(rObj: rObj));\n-        }\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n"
                },
                {
                    "date": 1725785717386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300),\n     //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n     //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n \n"
                },
                {
                    "date": 1725785739709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300),\n+    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n     //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n     //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n \n"
                },
                {
                    "date": 1725806185569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,448 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725806625750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,11 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n \n   @override\n   void initState() {\n"
                },
                {
                    "date": 1725861755883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,450 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725861974386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 33.652832, longitude: 139.839478),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725863113677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 33.652832, longitude: 139.839478),\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n     //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n    // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n     //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n@@ -448,1354 +448,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-    initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-    //initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n"
                },
                {
                    "date": 1725863255518,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725955489360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.7247, longitude: 139.7067),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725956223359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,520 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+}\n+\n+class _SummaryViewState extends State<SummaryView>\n+    with SingleTickerProviderStateMixin {\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+  Map todayObj = {};\n+  Map weekObj = {};\n+\n+  List todayTripsArr = [];\n+\n+  List weeklyTripsArr = [];\n+  List weeklyChartArr = [];\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+    apiList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n+    var todayCashTotal =\n+        double.tryParse(todayObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var todayOnlineTotal =\n+        double.tryParse(todayObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    var weekTotal = double.tryParse(weekObj[\"total_amt\"].toString()) ?? 0.0;\n+    var weekCashTotal = double.tryParse(weekObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var weekOnlineTotal =\n+        double.tryParse(weekObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      body: Column(\n+        children: [\n+          const SizedBox(\n+            height: 8,\n+          ),\n+          TabBar(\n+            controller: controller,\n+            indicatorColor: TColor.primary,\n+            indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+            labelColor: TColor.primary,\n+            unselectedLabelColor: TColor.placeholder,\n+            labelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            unselectedLabelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            tabs: const [\n+              Tab(\n+                text: \"TODAY\",\n+              ),\n+              Tab(\n+                text: \"WEEKLY\",\n+              ),\n+            ],\n+          ),\n+          Container(\n+            width: double.maxFinite,\n+            height: 0.5,\n+            color: TColor.lightGray,\n+          ),\n+          Expanded(\n+            child: TabBarView(\n+              controller: controller,\n+              children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 40,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                todayTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 30,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (todayObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                alignment: Alignment.centerLeft,\n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                physics: const NeverScrollableScrollPhysics(),\n+                                shrinkWrap: true,\n+                                padding: const EdgeInsets.symmetric(\n+                                    horizontal: 20, vertical: 10),\n+                                itemBuilder: (context, index) {\n+                                  var sObj = todayTripsArr[index] as Map? ?? {};\n+\n+                                  return TodaySummaryRow(\n+                                    sObj: sObj,\n+                                  );\n+                                },\n+                                separatorBuilder: (context, index) =>\n+                                    const Divider(\n+                                  indent: 40,\n+                                ),\n+                                itemCount: todayTripsArr.length,\n+                              ),\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 30,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                weekTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          const SizedBox(\n+                            height: 15,\n+                          ),\n+                          SizedBox(\n+                            height: context.width * 0.5,\n+                            child: BarChart(\n+                              BarChartData(\n+                                barTouchData: BarTouchData(\n+                                  touchTooltipData: BarTouchTooltipData(\n+\n+                                    tooltipHorizontalAlignment:\n+                                        FLHorizontalAlignment.right,\n+                                    tooltipMargin: 10,\n+                                    getTooltipItem:\n+                                        (group, groupIndex, rod, rodIndex) {\n+                                      var obj =\n+                                          weeklyChartArr[group.x] as Map? ?? {};\n+\n+                                      var weekDay = obj[\"date\"]\n+                                          .toString()\n+                                          .stringFormatToOtherFormat(\n+                                              newFormat: \"EEEE\");\n+\n+                                      return BarTooltipItem(\n+                                        '$weekDay\\n\\$${ ( double.tryParse( obj[\"total_amt\"].toString()) ?? 0.0 ).toStringAsFixed(2) }',\n+                                        const TextStyle(\n+                                            color: Colors.white,\n+                                            fontWeight: FontWeight.w500,\n+                                            fontSize: 16),\n+                                      );\n+                                    },\n+                                  ),\n+                                  touchCallback: (event, barTouchResponse) {\n+                                    setState(() {\n+                                      if (!event.isInterestedForInteractions ||\n+                                          barTouchResponse == null ||\n+                                          barTouchResponse.spot == null) {\n+                                        touchedIndex = -1;\n+                                        return;\n+                                      }\n+\n+                                      touchedIndex = barTouchResponse\n+                                          .spot!.touchedBarGroupIndex;\n+                                    });\n+                                  },\n+                                ),\n+                                titlesData: FlTitlesData(\n+                                  show: true,\n+                                  rightTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  topTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  bottomTitles: AxisTitles(\n+                                    sideTitles: SideTitles(\n+                                        showTitles: true,\n+                                        getTitlesWidget: getTitles,\n+                                        reservedSize: 38),\n+                                  ),\n+                                  leftTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                ),\n+                                borderData: FlBorderData(\n+                                  show: false,\n+                                ),\n+                                barGroups: showingGroups(),\n+                                gridData: const FlGridData(show: false),\n+                              ),\n+                            ),\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 15,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (weekObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                alignment: Alignment.centerLeft,\n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                  physics: const NeverScrollableScrollPhysics(),\n+                                  shrinkWrap: true,\n+                                  padding: const EdgeInsets.symmetric(\n+                                      horizontal: 20, vertical: 10),\n+                                  itemBuilder: (context, index) {\n+                                    var sObj =\n+                                        weeklyChartArr[index] as Map? ?? {};\n+\n+                                    return WeeklySummaryRow(\n+                                      sObj: sObj,\n+                                    );\n+                                  },\n+                                  separatorBuilder: (context, index) =>\n+                                      const Divider(\n+                                        indent: 40,\n+                                      ),\n+                                  itemCount: weeklyChartArr.length)\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  Widget getTitles(double value, TitleMeta meta) {\n+    var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+    var obj = weeklyChartArr[value.toInt()] as Map? ?? {};\n+\n+    return SideTitleWidget(\n+        space: 16,\n+        axisSide: meta.axisSide,\n+        child: Text(\n+          obj[\"date\"].toString().stringFormatToOtherFormat(newFormat: \"EEE\"),\n+          style: style,\n+        ));\n+  }\n+\n+  List<BarChartGroupData> showingGroups() => weeklyChartArr.map((e) {\n+        var i = weeklyChartArr.indexOf(e);\n+        return makeGroupData(i,\n+            double.tryParse(e[\"total_amt\"].toString()) ?? 0.0, TColor.primary,\n+            isTouched: i == touchedIndex);\n+      }).toList();\n+\n+  BarChartGroupData makeGroupData(int x, double y, Color barColor,\n+      {bool isTouched = false,\n+      double width = 40,\n+      List<int> showTooltips = const []}) {\n+    return BarChartGroupData(x: x, barRods: [\n+      BarChartRodData(\n+          toY: isTouched ? y + 1 : y,\n+          color: barColor,\n+          width: width,\n+          borderRadius: const BorderRadius.only(\n+            topLeft: Radius.circular(5),\n+            topRight: Radius.circular(5),\n+          ),\n+          borderSide: isTouched\n+              ? const BorderSide(color: Colors.green)\n+              : const BorderSide(color: Colors.green, width: 0),\n+          backDrawRodData: BackgroundBarChartRodData(show: false))\n+    ]);\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiList() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+      {},\n+      SVKey.svDriverSummary,\n+      isTokenApi: true,\n+      withSuccess: (responseObj) async {\n+        Globs.hideHUD();\n+\n+        if (responseObj[KKey.status] == \"1\") {\n+          var payloadObj = responseObj[KKey.payload] as Map? ?? {};\n+          todayObj = payloadObj[\"today\"] as Map? ?? {};\n+          weekObj = payloadObj[\"week\"] as Map? ?? {};\n+\n+          todayTripsArr = todayObj[\"list\"] as List? ?? [];\n+          weeklyTripsArr = weekObj[\"list\"] as List? ?? [];\n+          weeklyChartArr = (weekObj[\"chart\"] as List? ?? []).reversed.toList();\n+\n+          if (mounted) {\n+            setState(() {});\n+          }\n+        } else {\n+          mdShowAlert(\n+              \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+        }\n+      },\n+      failure: (err) async {\n+        Globs.hideHUD();\n+        debugPrint(err.toString());\n+      },\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1725956230339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,520 +1,451 @@\n import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n \n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n \n   @override\n-  State<SummaryView> createState() => _SummaryViewState();\n+  State<HomeView> createState() => _HomeViewState();\n }\n \n-class _SummaryViewState extends State<SummaryView>\n-    with SingleTickerProviderStateMixin {\n-  TabController? controller;\n-  int touchedIndex = -1;\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n \n-  Map todayObj = {};\n-  Map weekObj = {};\n+  bool isDriverOnline = false;\n \n-  List todayTripsArr = [];\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n \n-  List weeklyTripsArr = [];\n-  List weeklyChartArr = [];\n-\n   @override\n   void initState() {\n+    // TODO: implement initState\n     super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-    apiList();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n   }\n \n   @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n   Widget build(BuildContext context) {\n-    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n-    var todayCashTotal =\n-        double.tryParse(todayObj[\"cash_amt\"].toString()) ?? 0.0;\n-    var todayOnlineTotal =\n-        double.tryParse(todayObj[\"online_amt\"].toString()) ?? 0.0;\n-\n-    var weekTotal = double.tryParse(weekObj[\"total_amt\"].toString()) ?? 0.0;\n-    var weekCashTotal = double.tryParse(weekObj[\"cash_amt\"].toString()) ?? 0.0;\n-    var weekOnlineTotal =\n-        double.tryParse(weekObj[\"online_amt\"].toString()) ?? 0.0;\n-\n     return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      body: Column(\n+      body: Stack(\n         children: [\n-          const SizedBox(\n-            height: 8,\n-          ),\n-          TabBar(\n-            controller: controller,\n-            indicatorColor: TColor.primary,\n-            indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-            labelColor: TColor.primary,\n-            unselectedLabelColor: TColor.placeholder,\n-            labelStyle:\n-                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n-            unselectedLabelStyle:\n-                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n-            tabs: const [\n-              Tab(\n-                text: \"TODAY\",\n-              ),\n-              Tab(\n-                text: \"WEEKLY\",\n-              ),\n-            ],\n-          ),\n-          Container(\n-            width: double.maxFinite,\n-            height: 0.5,\n-            color: TColor.lightGray,\n-          ),\n-          Expanded(\n-            child: TabBarView(\n+          OSMFlutter(\n               controller: controller,\n-              children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n                         children: [\n                           Container(\n-                            width: double.maxFinite,\n-                            height: 12,\n-                            color: TColor.lightWhite,\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n                           ),\n-                          const SizedBox(\n-                            height: 40,\n-                          ),\n-                          Text(\n-                            DateTime.now()\n-                                .stringFormat(format: \"EEE, dd MMM yy\"),\n-                            style: TextStyle(\n-                                color: TColor.secondaryText, fontSize: 16),\n-                          ),\n-                          const SizedBox(\n-                            height: 8,\n-                          ),\n-                          Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.primary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              Text(\n-                                todayTotal.toStringAsFixed(2),\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          ),\n-                          Column(\n-                            children: [\n-                              const SizedBox(\n-                                height: 30,\n-                              ),\n-                              Container(\n-                                width: double.maxFinite,\n-                                height: 0.5,\n-                                color: TColor.lightGray,\n-                              ),\n-                              Row(\n-                                children: [\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          (todayObj[\"tips_count\"] as int? ?? 0)\n-                                              .toString(),\n-                                      subtitle: \"Trips\",\n-                                    ),\n-                                  ),\n-                                  Container(\n-                                    height: 80,\n-                                    width: 0.5,\n-                                    color: TColor.lightGray,\n-                                  ),\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          \"\\$${todayOnlineTotal.toStringAsFixed(2)}\",\n-                                      subtitle: \"Online Trip\",\n-                                    ),\n-                                  ),\n-                                  Container(\n-                                    height: 80,\n-                                    width: 0.5,\n-                                    color: TColor.lightGray,\n-                                  ),\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          \"\\$${todayCashTotal.toStringAsFixed(2)}\",\n-                                      subtitle: \"Cash Trip\",\n-                                    ),\n-                                  )\n-                                ],\n-                              ),\n-                              Container(\n-                                width: double.maxFinite,\n-                                height: 60,\n-                                color: TColor.lightWhite,\n-                                padding:\n-                                    const EdgeInsets.symmetric(horizontal: 20),\n-                                alignment: Alignment.centerLeft,\n-                                child: Text(\n-                                  \"TRIPS\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText,\n-                                      fontSize: 15,\n-                                      fontWeight: FontWeight.w800),\n-                                ),\n-                              ),\n-                              ListView.separated(\n-                                physics: const NeverScrollableScrollPhysics(),\n-                                shrinkWrap: true,\n-                                padding: const EdgeInsets.symmetric(\n-                                    horizontal: 20, vertical: 10),\n-                                itemBuilder: (context, index) {\n-                                  var sObj = todayTripsArr[index] as Map? ?? {};\n-\n-                                  return TodaySummaryRow(\n-                                    sObj: sObj,\n-                                  );\n-                                },\n-                                separatorBuilder: (context, index) =>\n-                                    const Divider(\n-                                  indent: 40,\n-                                ),\n-                                itemCount: todayTripsArr.length,\n-                              ),\n-                            ],\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n                           )\n                         ],\n                       ),\n                     ),\n-                  ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n                 ),\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n                         children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n                           Container(\n-                            width: double.maxFinite,\n-                            height: 12,\n-                            color: TColor.lightWhite,\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n                           ),\n-                          const SizedBox(\n-                            height: 30,\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n                           ),\n-                          Text(\n-                            DateTime.now()\n-                                .stringFormat(format: \"EEE, dd MMM yy\"),\n-                            style: TextStyle(\n-                                color: TColor.secondaryText, fontSize: 16),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n                           ),\n-                          const SizedBox(\n-                            height: 8,\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n                           ),\n-                          Row(\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n                             mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n                             children: [\n                               Text(\n                                 \"\\$\",\n                                 style: TextStyle(\n-                                    color: TColor.primary,\n+                                    color: TColor.secondary,\n                                     fontSize: 14,\n                                     fontWeight: FontWeight.w800),\n                               ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n                               Text(\n-                                weekTotal.toStringAsFixed(2),\n+                                \"157.75\",\n                                 style: TextStyle(\n                                     color: TColor.primaryText,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n                               ),\n                             ],\n-                          ),\n-                          const SizedBox(\n-                            height: 15,\n-                          ),\n-                          SizedBox(\n-                            height: context.width * 0.5,\n-                            child: BarChart(\n-                              BarChartData(\n-                                barTouchData: BarTouchData(\n-                                  touchTooltipData: BarTouchTooltipData(\n-\n-                                    tooltipHorizontalAlignment:\n-                                        FLHorizontalAlignment.right,\n-                                    tooltipMargin: 10,\n-                                    getTooltipItem:\n-                                        (group, groupIndex, rod, rodIndex) {\n-                                      var obj =\n-                                          weeklyChartArr[group.x] as Map? ?? {};\n-\n-                                      var weekDay = obj[\"date\"]\n-                                          .toString()\n-                                          .stringFormatToOtherFormat(\n-                                              newFormat: \"EEEE\");\n-\n-                                      return BarTooltipItem(\n-                                        '$weekDay\\n\\$${ ( double.tryParse( obj[\"total_amt\"].toString()) ?? 0.0 ).toStringAsFixed(2) }',\n-                                        const TextStyle(\n-                                            color: Colors.white,\n-                                            fontWeight: FontWeight.w500,\n-                                            fontSize: 16),\n-                                      );\n-                                    },\n-                                  ),\n-                                  touchCallback: (event, barTouchResponse) {\n-                                    setState(() {\n-                                      if (!event.isInterestedForInteractions ||\n-                                          barTouchResponse == null ||\n-                                          barTouchResponse.spot == null) {\n-                                        touchedIndex = -1;\n-                                        return;\n-                                      }\n-\n-                                      touchedIndex = barTouchResponse\n-                                          .spot!.touchedBarGroupIndex;\n-                                    });\n-                                  },\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n                                 ),\n-                                titlesData: FlTitlesData(\n-                                  show: true,\n-                                  rightTitles: const AxisTitles(\n-                                    sideTitles: SideTitles(showTitles: false),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n                                   ),\n-                                  topTitles: const AxisTitles(\n-                                    sideTitles: SideTitles(showTitles: false),\n-                                  ),\n-                                  bottomTitles: AxisTitles(\n-                                    sideTitles: SideTitles(\n-                                        showTitles: true,\n-                                        getTitlesWidget: getTitles,\n-                                        reservedSize: 38),\n-                                  ),\n-                                  leftTitles: const AxisTitles(\n-                                    sideTitles: SideTitles(showTitles: false),\n-                                  ),\n                                 ),\n-                                borderData: FlBorderData(\n-                                  show: false,\n-                                ),\n-                                barGroups: showingGroups(),\n-                                gridData: const FlGridData(show: false),\n                               ),\n                             ),\n-                          ),\n-                          Column(\n-                            children: [\n-                              const SizedBox(\n-                                height: 15,\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n                               ),\n-                              Container(\n-                                width: double.maxFinite,\n-                                height: 0.5,\n-                                color: TColor.lightGray,\n-                              ),\n-                              Row(\n-                                children: [\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          (weekObj[\"tips_count\"] as int? ?? 0)\n-                                              .toString(),\n-                                      subtitle: \"Trips\",\n-                                    ),\n-                                  ),\n-                                  Container(\n-                                    height: 80,\n-                                    width: 0.5,\n-                                    color: TColor.lightGray,\n-                                  ),\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          \"\\$${weekOnlineTotal.toStringAsFixed(2)}\",\n-                                      subtitle: \"Online Trip\",\n-                                    ),\n-                                  ),\n-                                  Container(\n-                                    height: 80,\n-                                    width: 0.5,\n-                                    color: TColor.lightGray,\n-                                  ),\n-                                  Expanded(\n-                                    child: TitleSubtitleCell(\n-                                      title:\n-                                          \"\\$${weekCashTotal.toStringAsFixed(2)}\",\n-                                      subtitle: \"Cash Trip\",\n-                                    ),\n-                                  )\n-                                ],\n-                              ),\n-                              Container(\n-                                width: double.maxFinite,\n-                                height: 60,\n-                                color: TColor.lightWhite,\n-                                padding:\n-                                    const EdgeInsets.symmetric(horizontal: 20),\n-                                alignment: Alignment.centerLeft,\n-                                child: Text(\n-                                  \"TRIPS\",\n-                                  style: TextStyle(\n-                                      color: TColor.primaryText,\n-                                      fontSize: 15,\n-                                      fontWeight: FontWeight.w800),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n                                 ),\n                               ),\n-                              ListView.separated(\n-                                  physics: const NeverScrollableScrollPhysics(),\n-                                  shrinkWrap: true,\n-                                  padding: const EdgeInsets.symmetric(\n-                                      horizontal: 20, vertical: 10),\n-                                  itemBuilder: (context, index) {\n-                                    var sObj =\n-                                        weeklyChartArr[index] as Map? ?? {};\n-\n-                                    return WeeklySummaryRow(\n-                                      sObj: sObj,\n-                                    );\n-                                  },\n-                                  separatorBuilder: (context, index) =>\n-                                      const Divider(\n-                                        indent: 40,\n-                                      ),\n-                                  itemCount: weeklyChartArr.length)\n-                            ],\n-                          )\n-                        ],\n+                            )\n+                          ],\n+                        ),\n                       ),\n-                    ),\n+                    ],\n                   ),\n-                ),\n+                )\n               ],\n             ),\n           )\n         ],\n       ),\n     );\n   }\n \n-  Widget getTitles(double value, TitleMeta meta) {\n-    var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n \n-    var obj = weeklyChartArr[value.toInt()] as Map? ?? {};\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n \n-    return SideTitleWidget(\n-        space: 16,\n-        axisSide: meta.axisSide,\n-        child: Text(\n-          obj[\"date\"].toString().stringFormatToOtherFormat(newFormat: \"EEE\"),\n-          style: style,\n-        ));\n-  }\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n \n-  List<BarChartGroupData> showingGroups() => weeklyChartArr.map((e) {\n-        var i = weeklyChartArr.indexOf(e);\n-        return makeGroupData(i,\n-            double.tryParse(e[\"total_amt\"].toString()) ?? 0.0, TColor.primary,\n-            isTouched: i == touchedIndex);\n-      }).toList();\n-\n-  BarChartGroupData makeGroupData(int x, double y, Color barColor,\n-      {bool isTouched = false,\n-      double width = 40,\n-      List<int> showTooltips = const []}) {\n-    return BarChartGroupData(x: x, barRods: [\n-      BarChartRodData(\n-          toY: isTouched ? y + 1 : y,\n-          color: barColor,\n-          width: width,\n-          borderRadius: const BorderRadius.only(\n-            topLeft: Radius.circular(5),\n-            topRight: Radius.circular(5),\n-          ),\n-          borderSide: isTouched\n-              ? const BorderSide(color: Colors.green)\n-              : const BorderSide(color: Colors.green, width: 0),\n-          backDrawRodData: BackgroundBarChartRodData(show: false))\n-    ]);\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n   }\n \n-  //TODO: ApiCalling\n-  void apiList() {\n+  void apiHome() {\n     Globs.showHUD();\n     ServiceCall.post(\n-      {},\n-      SVKey.svDriverSummary,\n-      isTokenApi: true,\n-      withSuccess: (responseObj) async {\n-        Globs.hideHUD();\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n \n-        if (responseObj[KKey.status] == \"1\") {\n-          var payloadObj = responseObj[KKey.payload] as Map? ?? {};\n-          todayObj = payloadObj[\"today\"] as Map? ?? {};\n-          weekObj = payloadObj[\"week\"] as Map? ?? {};\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n \n-          todayTripsArr = todayObj[\"list\"] as List? ?? [];\n-          weeklyTripsArr = weekObj[\"list\"] as List? ?? [];\n-          weeklyChartArr = (weekObj[\"chart\"] as List? ?? []).reversed.toList();\n-\n-          if (mounted) {\n-            setState(() {});\n-          }\n-        } else {\n-          mdShowAlert(\n-              \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-        }\n-      },\n-      failure: (err) async {\n-        Globs.hideHUD();\n-        debugPrint(err.toString());\n-      },\n-    );\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n   }\n }\n"
                },
                {
                    "date": 1725957587606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725958019203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,17 +19,19 @@\n }\n \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n-\n+  Map todayObj = {};\n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n     initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n     //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n    // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n     //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n   );\n+  \n+  get payloadObj => null;\n \n   @override\n   void initState() {\n     // TODO: implement initState\n@@ -66,8 +68,9 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n     return Scaffold(\n       body: Stack(\n         children: [\n           OSMFlutter(\n@@ -330,9 +333,9 @@\n                               const SizedBox(\n                                 width: 8,\n                               ),\n                               Text(\n-                                \"157.75\",\n+                                todayTotal.toStringAsFixed(2),\n                                 style: TextStyle(\n                                     color: TColor.primaryText,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n@@ -432,9 +435,9 @@\n       Globs.hideHUD();\n \n       if (responseObj[KKey.status] == \"1\") {\n           var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n+          todayObj = payloadObj[\"today\"] as Map? ?? {};\n           if(rObj.keys.isNotEmpty) {\n             context.push(RunRideView(rObj: rObj));\n           }\n           \n"
                },
                {
                    "date": 1725958038877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -451,1808 +451,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.7247, longitude: 139.7067),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n"
                },
                {
                    "date": 1725958103742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,453 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+  Map todayObj = {};\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                todayTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          var payloadObj;\n+          todayObj = payloadObj[\"today\"] as Map? ?? {};\n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1725958189901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,450 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+  Map todayObj = {};\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                todayTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+  Globs.showHUD();\n+  ServiceCall.post(\n+      {}, SVKey.svHome,\n+      isTokenApi: true, withSuccess: (responseObj) async {\n+    Globs.hideHUD();\n+\n+    if (responseObj[KKey.status] == \"1\") {\n+        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+        todayObj = rObj[\"today\"] as Map? ?? {}; // Corrected line\n+        if(rObj.keys.isNotEmpty) {\n+          context.push(RunRideView(rObj: rObj));\n+        }\n+    } else {\n+      mdShowAlert(\n+          \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+    }\n+  }, failure: (error) async {\n+    Globs.hideHUD();\n+    mdShowAlert(Globs.appName, error.toString(), () {});\n+  });\n+}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1725958307765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n }\n \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n-  Map todayObj = {};\n+\n   bool isDriverOnline = false;\n \n   MapController controller = MapController(\n     initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n@@ -66,9 +66,8 @@\n   }\n \n   @override\n   Widget build(BuildContext context) {\n-    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n     return Scaffold(\n       body: Stack(\n         children: [\n           OSMFlutter(\n@@ -331,9 +330,9 @@\n                               const SizedBox(\n                                 width: 8,\n                               ),\n                               Text(\n-                                todayTotal.toStringAsFixed(2),\n+                                \"157.75\",\n                                 style: TextStyle(\n                                     color: TColor.primaryText,\n                                     fontSize: 25,\n                                     fontWeight: FontWeight.w800),\n@@ -425,26 +424,28 @@\n     });\n   }\n \n   void apiHome() {\n-  Globs.showHUD();\n-  ServiceCall.post(\n-      {}, SVKey.svHome,\n-      isTokenApi: true, withSuccess: (responseObj) async {\n-    Globs.hideHUD();\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n \n-    if (responseObj[KKey.status] == \"1\") {\n-        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-        todayObj = rObj[\"today\"] as Map? ?? {}; // Corrected line\n-        if(rObj.keys.isNotEmpty) {\n-          context.push(RunRideView(rObj: rObj));\n-        }\n-    } else {\n-      mdShowAlert(\n-          \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-    }\n-  }, failure: (error) async {\n\\ No newline at end of file\n-    Globs.hideHUD();\n-    mdShowAlert(Globs.appName, error.toString(), () {});\n-  });\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n }\n-}\n"
                },
                {
                    "date": 1726036959884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:google_maps_flutter/google_maps_flutter.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/location_helper.dart';\n@@ -19,23 +19,16 @@\n }\n \n class _HomeViewState extends State<HomeView> {\n   bool isOpen = true;\n-\n   bool isDriverOnline = false;\n \n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n+  late GoogleMapController mapController;\n+  final LatLng initialPosition = const LatLng(35.685272, 139.709442);\n \n   @override\n   void initState() {\n-    // TODO: implement initState\n     super.initState();\n-\n     apiHome();\n     isDriverOnline = Globs.udValueBool(\"is_online\");\n \n     if (ServiceCall.userType == 2) {\n@@ -46,803 +39,44 @@\n         print(\"new_ride_request socket get :${data.toString()} \");\n         if (data[KKey.status] == \"1\") {\n           var bArr = data[KKey.payload] as List? ?? [];\n \n-          \n           if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            await context.push(TipRequestView(bObj: bArr[0]));\n             apiHome();\n           }\n         }\n       });\n-      \n     }\n   }\n \n   @override\n   void dispose() {\n-    // TODO: implement dispose\n     super.dispose();\n-    controller.dispose();\n+    mapController.dispose();\n   }\n \n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                \"157.75\",\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n+  void _onMapCreated(GoogleMapController controller) {\n+    mapController = controller;\n   }\n \n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-         isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          \n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n   @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-  Map todayObj = {};\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n-        }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n   Widget build(BuildContext context) {\n-    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n     return Scaffold(\n       body: Stack(\n         children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n+          GoogleMap(\n+            onMapCreated: _onMapCreated,\n+            initialCameraPosition: CameraPosition(\n+              target: initialPosition,\n+              zoom: 8,\n+            ),\n+            myLocationEnabled: true,\n+            zoomControlsEnabled: true,\n+            myLocationButtonEnabled: false,\n           ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                todayTotal.toStringAsFixed(2),\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n+          // Your UI elements (buttons, menus, etc.) go here, similar to your original code.\n+          // ...\n         ],\n       ),\n     );\n   }\n@@ -858,16 +92,15 @@\n       if (responseObj[KKey.status] == \"1\") {\n         Globs.udBoolSet(isDriverOnline, \"is_online\");\n \n         ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n \n         if (mounted) {\n           setState(() {});\n         }\n       } else {\n-         isDriverOnline = !isDriverOnline;\n+        isDriverOnline = !isDriverOnline;\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n     }, failure: (error) async {\n@@ -877,482 +110,23 @@\n   }\n \n   void apiHome() {\n     Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n+    ServiceCall.post({}, SVKey.svHome,\n         isTokenApi: true, withSuccess: (responseObj) async {\n       Globs.hideHUD();\n \n       if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          var payloadObj;\n-          todayObj = payloadObj[\"today\"] as Map? ?? {};\n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n-import 'package:flutter/material.dart';\n-import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-  Map todayObj = {};\n-  bool isDriverOnline = false;\n-\n-  MapController controller = MapController(\n-    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n-    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n-   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n-    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n-  );\n-  \n-  get payloadObj => null;\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          \n-          if(mounted && bArr.isNotEmpty){\n-           await  context.push( TipRequestView(bObj: bArr[0]) );\n-            apiHome();\n-          }\n+        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+        if (rObj.keys.isNotEmpty) {\n+          context.push(RunRideView(rObj: rObj));\n         }\n-      });\n-      \n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    // TODO: implement dispose\n-    super.dispose();\n-    controller.dispose();\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          OSMFlutter(\n-              controller: controller,\n-              osmOption: OSMOption(\n-                userTrackingOption: const UserTrackingOption(\n-                  enableTracking: true,\n-                  unFollowUser: false,\n-                ),\n-                zoomOption: const ZoomOption(\n-                  initZoom: 8,\n-                  minZoomLevel: 3,\n-                  maxZoomLevel: 19,\n-                  stepZoom: 1.0,\n-                ),\n-                userLocationMarker: UserLocationMaker(\n-                  personMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.location_history_rounded,\n-                      color: Colors.red,\n-                      size: 48,\n-                    ),\n-                  ),\n-                  directionArrowMarker: const MarkerIcon(\n-                    icon: Icon(\n-                      Icons.double_arrow,\n-                      size: 48,\n-                    ),\n-                  ),\n-                ),\n-                roadConfiguration: const RoadOption(\n-                  roadColor: Colors.yellowAccent,\n-                ),\n-                markerOption: MarkerOption(\n-                    defaultMarker: const MarkerIcon(\n-                  icon: Icon(\n-                    Icons.person_pin_circle,\n-                    color: Colors.blue,\n-                    size: 56,\n-                  ),\n-                )),\n-              )),\n-          Column(\n-            mainAxisAlignment: MainAxisAlignment.end,\n-            children: [\n-              Padding(\n-                padding: const EdgeInsets.symmetric(horizontal: 20),\n-                child: Row(\n-                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                  crossAxisAlignment: CrossAxisAlignment.end,\n-                  children: [\n-                    const SizedBox(\n-                      width: 50,\n-                      height: 50,\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(35),\n-                      onTap: () {\n-\n-\n-                          isDriverOnline = !isDriverOnline;\n-                          \n-                          apiGoOnline();\n-                       // context.push(const TipRequestView());\n-                      },\n-                      child: Stack(\n-                        alignment: Alignment.center,\n-                        children: [\n-                          Container(\n-                            width: 70,\n-                            height: 70,\n-                            decoration: BoxDecoration(\n-                                color: isDriverOnline ? TColor.red : TColor.primary,\n-                                borderRadius: BorderRadius.circular(35),\n-                                boxShadow: const [\n-                                  BoxShadow(\n-                                    color: Colors.black12,\n-                                    blurRadius: 10,\n-                                    offset: Offset(0, 5),\n-                                  ),\n-                                ]),\n-                          ),\n-                          Container(\n-                            width: 60,\n-                            height: 60,\n-                            decoration: BoxDecoration(\n-                              border:\n-                                  Border.all(color: Colors.white, width: 1.5),\n-                              borderRadius: BorderRadius.circular(35),\n-                            ),\n-                            alignment: Alignment.center,\n-                            child:  Text(\n-                              isDriverOnline ? \"OFF\"  : \"GO\",\n-                              style: const TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 22,\n-                                  fontWeight: FontWeight.w800),\n-                            ),\n-                          )\n-                        ],\n-                      ),\n-                    ),\n-                    InkWell(\n-                      borderRadius: BorderRadius.circular(20),\n-                      onTap: () {},\n-                      child: Container(\n-                        width: 50,\n-                        height: 50,\n-                        decoration: BoxDecoration(\n-                            borderRadius: BorderRadius.circular(35),\n-                            boxShadow: const [\n-                              BoxShadow(\n-                                color: Colors.black12,\n-                                blurRadius: 10,\n-                                offset: Offset(0, 5),\n-                              ),\n-                            ]),\n-                        child: Image.asset(\n-                          \"assets/img/current_location.png\",\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ),\n-                    ),\n-                  ],\n-                ),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              Container(\n-                padding: const EdgeInsets.symmetric(vertical: 15),\n-                decoration: const BoxDecoration(\n-                    color: Colors.white,\n-                    borderRadius: BorderRadius.only(\n-                        topLeft: Radius.circular(10),\n-                        topRight: Radius.circular(10)),\n-                    boxShadow: [\n-                      BoxShadow(\n-                        color: Colors.black12,\n-                        blurRadius: 10,\n-                        offset: Offset(0, -5),\n-                      ),\n-                    ]),\n-                child: Column(\n-                  children: [\n-                    Row(\n-                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                      children: [\n-                        IconButton(\n-                          onPressed: () {\n-                            setState(() {\n-                              isOpen = !isOpen;\n-                            });\n-                          },\n-                          icon: Image.asset(\n-                            isOpen\n-                                ? \"assets/img/open_btn.png\"\n-                                : \"assets/img/close_btn.png\",\n-                            width: 15,\n-                            height: 15,\n-                          ),\n-                        ),\n-                        Text(\n-                          isDriverOnline ? \"You're online\" : \"You're offline\",\n-                          style: TextStyle(\n-                              color: TColor.primaryText,\n-                              fontSize: 18,\n-                              fontWeight: FontWeight.w800),\n-                        ),\n-                        const SizedBox(\n-                          width: 50,\n-                          height: 50,\n-                        ),\n-                      ],\n-                    ),\n-                    if (isOpen)\n-                      Container(\n-                        height: 0.5,\n-                        width: double.maxFinite,\n-                        color: TColor.placeholder.withOpacity(0.5),\n-                      ),\n-                    if (isOpen)\n-                      Row(\n-                        crossAxisAlignment: CrossAxisAlignment.center,\n-                        children: [\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"95.0%\",\n-                                subtitle: \"Acceptance\",\n-                                icon: \"assets/img/acceptance.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"4.75\",\n-                                subtitle: \"Rating\",\n-                                icon: \"assets/img/rate.png\",\n-                                onPressed: () {}),\n-                          ),\n-                          Container(\n-                            height: 100,\n-                            width: 0.5,\n-                            color: TColor.placeholder.withOpacity(0.5),\n-                          ),\n-                          Expanded(\n-                            child: IconTitleSubtitleButton(\n-                                title: \"2.0%\",\n-                                subtitle: \"Cancelleation\",\n-                                icon: \"assets/img/cancelleation.png\",\n-                                onPressed: () {}),\n-                          ),\n-                        ],\n-                      ),\n-                  ],\n-                ),\n-              )\n-            ],\n-          ),\n-          SafeArea(\n-            child: Column(\n-              mainAxisAlignment: MainAxisAlignment.start,\n-              children: [\n-                Padding(\n-                  padding: const EdgeInsets.all(15),\n-                  child: Row(\n-                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n-                    children: [\n-                      const SizedBox(\n-                        width: 60,\n-                      ),\n-                      Container(\n-                          padding: const EdgeInsets.symmetric(\n-                              vertical: 8, horizontal: 25),\n-                          decoration: BoxDecoration(\n-                              color: Colors.white,\n-                              borderRadius: BorderRadius.circular(30),\n-                              boxShadow: const [\n-                                BoxShadow(\n-                                  color: Colors.black26,\n-                                  blurRadius: 10,\n-                                ),\n-                              ]),\n-                          child: Row(\n-                            mainAxisSize: MainAxisSize.min,\n-                            crossAxisAlignment: CrossAxisAlignment.start,\n-                            children: [\n-                              Text(\n-                                \"\\$\",\n-                                style: TextStyle(\n-                                    color: TColor.secondary,\n-                                    fontSize: 14,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                              const SizedBox(\n-                                width: 8,\n-                              ),\n-                              Text(\n-                                todayTotal.toStringAsFixed(2),\n-                                style: TextStyle(\n-                                    color: TColor.primaryText,\n-                                    fontSize: 25,\n-                                    fontWeight: FontWeight.w800),\n-                              ),\n-                            ],\n-                          )),\n-                      SizedBox(\n-                        width: 60,\n-                        child: Stack(\n-                          alignment: Alignment.bottomLeft,\n-                          children: [\n-                            InkWell(\n-                              onTap: () {\n-                                context.push(const MenuView());\n-                              },\n-                              child: Container(\n-                                margin: const EdgeInsets.only(left: 10),\n-                                padding: const EdgeInsets.all(2),\n-                                decoration: BoxDecoration(\n-                                  color: Colors.white,\n-                                  borderRadius: BorderRadius.circular(30),\n-                                ),\n-                                child: ClipRRect(\n-                                  borderRadius: BorderRadius.circular(20),\n-                                  child: Image.asset(\n-                                    \"assets/img/u1.png\",\n-                                    width: 40,\n-                                    height: 40,\n-                                  ),\n-                                ),\n-                              ),\n-                            ),\n-                            Container(\n-                              padding: const EdgeInsets.symmetric(\n-                                  horizontal: 8, vertical: 1),\n-                              decoration: BoxDecoration(\n-                                color: Colors.red,\n-                                borderRadius: BorderRadius.circular(30),\n-                              ),\n-                              constraints: const BoxConstraints(minWidth: 15),\n-                              child: const Text(\n-                                \"3\",\n-                                style: TextStyle(\n-                                  color: Colors.white,\n-                                  fontSize: 10,\n-                                ),\n-                              ),\n-                            )\n-                          ],\n-                        ),\n-                      ),\n-                    ],\n-                  ),\n-                )\n-              ],\n-            ),\n-          )\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content:\n-                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n       } else {\n-         isDriverOnline = !isDriverOnline;\n         mdShowAlert(\n             \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n       }\n     }, failure: (error) async {\n       Globs.hideHUD();\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-          todayObj = payloadObj[\"today\"] as Map? ?? {};\n-          if(rObj.keys.isNotEmpty) {\n-            context.push(RunRideView(rObj: rObj));\n-          }\n-          \n-\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1726045054162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,451 @@\n+import 'package:flutter/material.dart';\n+import 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/location_helper.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common/socket_manager.dart';\n+import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n+import 'package:taxi_driver/view/home/run_ride_view.dart';\n+import 'package:taxi_driver/view/home/tip_request_view.dart';\n+import 'package:taxi_driver/view/menu/menu_view.dart';\n+\n+class HomeView extends StatefulWidget {\n+  const HomeView({super.key});\n+\n+  @override\n+  State<HomeView> createState() => _HomeViewState();\n+}\n+\n+class _HomeViewState extends State<HomeView> {\n+  bool isOpen = true;\n+\n+  bool isDriverOnline = false;\n+\n+  MapController controller = MapController(\n+    initPosition: GeoPoint(latitude: 35.685272, longitude: 139.709442),\n+    //initPosition: GeoPoint(latitude: 27.700769, longitude: 85.300140),\n+   // initPosition: GeoPoint(latitude: 33.583332, longitude: 130.399994),\n+    //initPosition: GeoPoint(latitude: 47.4358055, longitude: 8.4737324),\n+  );\n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+\n+    apiHome();\n+    isDriverOnline = Globs.udValueBool(\"is_online\");\n+\n+    if (ServiceCall.userType == 2) {\n+      LocationHelper.shared().startInit();\n+    \n+      // Received Message In Socket On Event\n+      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n+        print(\"new_ride_request socket get :${data.toString()} \");\n+        if (data[KKey.status] == \"1\") {\n+          var bArr = data[KKey.payload] as List? ?? [];\n+\n+          \n+          if(mounted && bArr.isNotEmpty){\n+           await  context.push( TipRequestView(bObj: bArr[0]) );\n+            apiHome();\n+          }\n+        }\n+      });\n+      \n+    }\n+  }\n+\n+  @override\n+  void dispose() {\n+    // TODO: implement dispose\n+    super.dispose();\n+    controller.dispose();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      body: Stack(\n+        children: [\n+          OSMFlutter(\n+              controller: controller,\n+              osmOption: OSMOption(\n+                userTrackingOption: const UserTrackingOption(\n+                  enableTracking: true,\n+                  unFollowUser: false,\n+                ),\n+                zoomOption: const ZoomOption(\n+                  initZoom: 8,\n+                  minZoomLevel: 3,\n+                  maxZoomLevel: 19,\n+                  stepZoom: 1.0,\n+                ),\n+                userLocationMarker: UserLocationMaker(\n+                  personMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.location_history_rounded,\n+                      color: Colors.red,\n+                      size: 48,\n+                    ),\n+                  ),\n+                  directionArrowMarker: const MarkerIcon(\n+                    icon: Icon(\n+                      Icons.double_arrow,\n+                      size: 48,\n+                    ),\n+                  ),\n+                ),\n+                roadConfiguration: const RoadOption(\n+                  roadColor: Colors.yellowAccent,\n+                ),\n+                markerOption: MarkerOption(\n+                    defaultMarker: const MarkerIcon(\n+                  icon: Icon(\n+                    Icons.person_pin_circle,\n+                    color: Colors.blue,\n+                    size: 56,\n+                  ),\n+                )),\n+              )),\n+          Column(\n+            mainAxisAlignment: MainAxisAlignment.end,\n+            children: [\n+              Padding(\n+                padding: const EdgeInsets.symmetric(horizontal: 20),\n+                child: Row(\n+                  mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                  crossAxisAlignment: CrossAxisAlignment.end,\n+                  children: [\n+                    const SizedBox(\n+                      width: 50,\n+                      height: 50,\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(35),\n+                      onTap: () {\n+\n+\n+                          isDriverOnline = !isDriverOnline;\n+                          \n+                          apiGoOnline();\n+                       // context.push(const TipRequestView());\n+                      },\n+                      child: Stack(\n+                        alignment: Alignment.center,\n+                        children: [\n+                          Container(\n+                            width: 70,\n+                            height: 70,\n+                            decoration: BoxDecoration(\n+                                color: isDriverOnline ? TColor.red : TColor.primary,\n+                                borderRadius: BorderRadius.circular(35),\n+                                boxShadow: const [\n+                                  BoxShadow(\n+                                    color: Colors.black12,\n+                                    blurRadius: 10,\n+                                    offset: Offset(0, 5),\n+                                  ),\n+                                ]),\n+                          ),\n+                          Container(\n+                            width: 60,\n+                            height: 60,\n+                            decoration: BoxDecoration(\n+                              border:\n+                                  Border.all(color: Colors.white, width: 1.5),\n+                              borderRadius: BorderRadius.circular(35),\n+                            ),\n+                            alignment: Alignment.center,\n+                            child:  Text(\n+                              isDriverOnline ? \"OFF\"  : \"GO\",\n+                              style: const TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 22,\n+                                  fontWeight: FontWeight.w800),\n+                            ),\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                    InkWell(\n+                      borderRadius: BorderRadius.circular(20),\n+                      onTap: () {},\n+                      child: Container(\n+                        width: 50,\n+                        height: 50,\n+                        decoration: BoxDecoration(\n+                            borderRadius: BorderRadius.circular(35),\n+                            boxShadow: const [\n+                              BoxShadow(\n+                                color: Colors.black12,\n+                                blurRadius: 10,\n+                                offset: Offset(0, 5),\n+                              ),\n+                            ]),\n+                        child: Image.asset(\n+                          \"assets/img/current_location.png\",\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ),\n+                    ),\n+                  ],\n+                ),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              Container(\n+                padding: const EdgeInsets.symmetric(vertical: 15),\n+                decoration: const BoxDecoration(\n+                    color: Colors.white,\n+                    borderRadius: BorderRadius.only(\n+                        topLeft: Radius.circular(10),\n+                        topRight: Radius.circular(10)),\n+                    boxShadow: [\n+                      BoxShadow(\n+                        color: Colors.black12,\n+                        blurRadius: 10,\n+                        offset: Offset(0, -5),\n+                      ),\n+                    ]),\n+                child: Column(\n+                  children: [\n+                    Row(\n+                      mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                      children: [\n+                        IconButton(\n+                          onPressed: () {\n+                            setState(() {\n+                              isOpen = !isOpen;\n+                            });\n+                          },\n+                          icon: Image.asset(\n+                            isOpen\n+                                ? \"assets/img/open_btn.png\"\n+                                : \"assets/img/close_btn.png\",\n+                            width: 15,\n+                            height: 15,\n+                          ),\n+                        ),\n+                        Text(\n+                          isDriverOnline ? \"You're online\" : \"You're offline\",\n+                          style: TextStyle(\n+                              color: TColor.primaryText,\n+                              fontSize: 18,\n+                              fontWeight: FontWeight.w800),\n+                        ),\n+                        const SizedBox(\n+                          width: 50,\n+                          height: 50,\n+                        ),\n+                      ],\n+                    ),\n+                    if (isOpen)\n+                      Container(\n+                        height: 0.5,\n+                        width: double.maxFinite,\n+                        color: TColor.placeholder.withOpacity(0.5),\n+                      ),\n+                    if (isOpen)\n+                      Row(\n+                        crossAxisAlignment: CrossAxisAlignment.center,\n+                        children: [\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"95.0%\",\n+                                subtitle: \"Acceptance\",\n+                                icon: \"assets/img/acceptance.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"4.75\",\n+                                subtitle: \"Rating\",\n+                                icon: \"assets/img/rate.png\",\n+                                onPressed: () {}),\n+                          ),\n+                          Container(\n+                            height: 100,\n+                            width: 0.5,\n+                            color: TColor.placeholder.withOpacity(0.5),\n+                          ),\n+                          Expanded(\n+                            child: IconTitleSubtitleButton(\n+                                title: \"2.0%\",\n+                                subtitle: \"Cancelleation\",\n+                                icon: \"assets/img/cancelleation.png\",\n+                                onPressed: () {}),\n+                          ),\n+                        ],\n+                      ),\n+                  ],\n+                ),\n+              )\n+            ],\n+          ),\n+          SafeArea(\n+            child: Column(\n+              mainAxisAlignment: MainAxisAlignment.start,\n+              children: [\n+                Padding(\n+                  padding: const EdgeInsets.all(15),\n+                  child: Row(\n+                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\n+                    children: [\n+                      const SizedBox(\n+                        width: 60,\n+                      ),\n+                      Container(\n+                          padding: const EdgeInsets.symmetric(\n+                              vertical: 8, horizontal: 25),\n+                          decoration: BoxDecoration(\n+                              color: Colors.white,\n+                              borderRadius: BorderRadius.circular(30),\n+                              boxShadow: const [\n+                                BoxShadow(\n+                                  color: Colors.black26,\n+                                  blurRadius: 10,\n+                                ),\n+                              ]),\n+                          child: Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            crossAxisAlignment: CrossAxisAlignment.start,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.secondary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              const SizedBox(\n+                                width: 8,\n+                              ),\n+                              Text(\n+                                \"157.75\",\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          )),\n+                      SizedBox(\n+                        width: 60,\n+                        child: Stack(\n+                          alignment: Alignment.bottomLeft,\n+                          children: [\n+                            InkWell(\n+                              onTap: () {\n+                                context.push(const MenuView());\n+                              },\n+                              child: Container(\n+                                margin: const EdgeInsets.only(left: 10),\n+                                padding: const EdgeInsets.all(2),\n+                                decoration: BoxDecoration(\n+                                  color: Colors.white,\n+                                  borderRadius: BorderRadius.circular(30),\n+                                ),\n+                                child: ClipRRect(\n+                                  borderRadius: BorderRadius.circular(20),\n+                                  child: Image.asset(\n+                                    \"assets/img/u1.png\",\n+                                    width: 40,\n+                                    height: 40,\n+                                  ),\n+                                ),\n+                              ),\n+                            ),\n+                            Container(\n+                              padding: const EdgeInsets.symmetric(\n+                                  horizontal: 8, vertical: 1),\n+                              decoration: BoxDecoration(\n+                                color: Colors.red,\n+                                borderRadius: BorderRadius.circular(30),\n+                              ),\n+                              constraints: const BoxConstraints(minWidth: 15),\n+                              child: const Text(\n+                                \"3\",\n+                                style: TextStyle(\n+                                  color: Colors.white,\n+                                  fontSize: 10,\n+                                ),\n+                              ),\n+                            )\n+                          ],\n+                        ),\n+                      ),\n+                    ],\n+                  ),\n+                )\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  //MARK: ApiCalling\n+  void apiGoOnline() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        Globs.udBoolSet(isDriverOnline, \"is_online\");\n+\n+        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n+            content:\n+                Text(responseObj[KKey.message] as String? ?? MSG.success)));\n+\n+        if (mounted) {\n+          setState(() {});\n+        }\n+      } else {\n+         isDriverOnline = !isDriverOnline;\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+\n+  void apiHome() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+        {}, SVKey.svHome,\n+        isTokenApi: true, withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+          var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n+          \n+          if(rObj.keys.isNotEmpty) {\n+            context.push(RunRideView(rObj: rObj));\n+          }\n+          \n+\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (error) async {\n+      Globs.hideHUD();\n+      mdShowAlert(Globs.appName, error.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1726045156262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -448,136 +448,4 @@\n       mdShowAlert(Globs.appName, error.toString(), () {});\n     });\n   }\n }\n-import 'package:flutter/material.dart';\n-import 'package:google_maps_flutter/google_maps_flutter.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/location_helper.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common/socket_manager.dart';\n-import 'package:taxi_driver/common_widget/Icon_title_subtitle_button.dart';\n-import 'package:taxi_driver/view/home/run_ride_view.dart';\n-import 'package:taxi_driver/view/home/tip_request_view.dart';\n-import 'package:taxi_driver/view/menu/menu_view.dart';\n-\n-class HomeView extends StatefulWidget {\n-  const HomeView({super.key});\n-\n-  @override\n-  State<HomeView> createState() => _HomeViewState();\n-}\n-\n-class _HomeViewState extends State<HomeView> {\n-  bool isOpen = true;\n-  bool isDriverOnline = false;\n-\n-  late GoogleMapController mapController;\n-  final LatLng initialPosition = const LatLng(35.685272, 139.709442);\n-\n-  @override\n-  void initState() {\n-    super.initState();\n-    apiHome();\n-    isDriverOnline = Globs.udValueBool(\"is_online\");\n-\n-    if (ServiceCall.userType == 2) {\n-      LocationHelper.shared().startInit();\n-    \n-      // Received Message In Socket On Event\n-      SocketManager.shared.socket?.on(\"new_ride_request\", (data) async {\n-        print(\"new_ride_request socket get :${data.toString()} \");\n-        if (data[KKey.status] == \"1\") {\n-          var bArr = data[KKey.payload] as List? ?? [];\n-\n-          if(mounted && bArr.isNotEmpty){\n-            await context.push(TipRequestView(bObj: bArr[0]));\n-            apiHome();\n-          }\n-        }\n-      });\n-    }\n-  }\n-\n-  @override\n-  void dispose() {\n-    super.dispose();\n-    mapController.dispose();\n-  }\n-\n-  void _onMapCreated(GoogleMapController controller) {\n-    mapController = controller;\n-  }\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      body: Stack(\n-        children: [\n-          GoogleMap(\n-            onMapCreated: _onMapCreated,\n-            initialCameraPosition: CameraPosition(\n-              target: initialPosition,\n-              zoom: 8,\n-            ),\n-            myLocationEnabled: true,\n-            zoomControlsEnabled: true,\n-            myLocationButtonEnabled: false,\n-          ),\n-          // Your UI elements (buttons, menus, etc.) go here, similar to your original code.\n-          // ...\n-        ],\n-      ),\n-    );\n-  }\n-\n-  //MARK: ApiCalling\n-  void apiGoOnline() {\n-    Globs.showHUD();\n-    ServiceCall.post(\n-        {\"is_online\": isDriverOnline ? \"1\" : \"0\"}, SVKey.svDriverGoOnline,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        Globs.udBoolSet(isDriverOnline, \"is_online\");\n-\n-        ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n-            content: Text(responseObj[KKey.message] as String? ?? MSG.success)));\n-\n-        if (mounted) {\n-          setState(() {});\n-        }\n-      } else {\n-        isDriverOnline = !isDriverOnline;\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-\n-  void apiHome() {\n-    Globs.showHUD();\n-    ServiceCall.post({}, SVKey.svHome,\n-        isTokenApi: true, withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        var rObj = (responseObj[KKey.payload] as Map? ?? {})[\"running\"] as Map? ?? {};\n-        if (rObj.keys.isNotEmpty) {\n-          context.push(RunRideView(rObj: rObj));\n-        }\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (error) async {\n-      Globs.hideHUD();\n-      mdShowAlert(Globs.appName, error.toString(), () {});\n-    });\n-  }\n-}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1719662255064,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:flutter_osm_plugin/flutter_osm_plugin.dart';\n\nclass HomeView extends StatefulWidget {\n  const HomeView({super.key});\n\n  @override\nState<HomeView> createState () => _HomeViewState();\n}\nclass _HomeViewState extends State<HomeView> {\n\n late MapController _controller;\n                            \n     @override\n  void initState() {\n    super.initState();\n    _controller = MapController(\n      initPosition: GeoPoint(\n        latitude: 47.4358055,\n        longitude: 8.4737324,\n      ),\n    );\n  }\n@override\n  void dispose() {\n    _controller.dispose();\n    super.dispose();\n  }\n\nMarkerIcon userLocationMarker({\n    required Icon personMarker,\n    required Icon directionArrowMarker,\n  }) {\n    return MarkerIcon(\n      icon: personMarker,\n    );\n  }\n\n@override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      body: Stack(\n        children: [\n          OSMFlutter(\n            controller: _controller,\n            osmOption: OSMOption(\n              userTrackingOption: const UserTrackingOption(\n                enableTracking: true,\n                unFollowUser:false, \n\n\n\n            ),\n            zoomOption: const ZoomOption(\n                  initZoom: 8,\n                  minZoomLevel: 3,\n                  maxZoomLevel: 19,\n                  stepZoom: 1.0,\n            ),\n            userLocationMarker: UserLocationMaker (\n                personMarker: const MarkerIcon(\n                    icon: Icon(\n                        Icons.location_history_rounded,\n                        color: Colors.red,\n                        size: 48,\n                    ),\n                ),\n                directionArrowMarker: const MarkerIcon(\n                    icon: Icon(\n                        Icons.double_arrow,\n                        size: 48,\n                    ),\n                ),\n            ),\n            roadConfiguration: const RoadOption(\n                    roadColor: Colors.yellowAccent,), ),\n            ),\n            Positioned(\n            bottom: 16,\n            right: 16,\n            child: FloatingActionButton(\n              onPressed: () {\n                _controller.addMarker(\n                  GeoPoint(\n                    latitude: 47.4358055,\n                    longitude: 8.4737324,\n                  ),\n                  markerIcon: const MarkerIcon(\n                    icon: Icon(\n                      Icons.person_pin_circle,\n                      color: Colors.blue,\n                      size: 56,\n                    ),\n                  ),\n                );\n              },\n              child: const Icon(Icons.add),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}"
        }
    ]
}