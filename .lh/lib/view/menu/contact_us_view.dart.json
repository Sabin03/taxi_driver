{
    "sourceFile": "lib/view/menu/contact_us_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1722774243446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1722774456808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class ContactUsView extends StatefulWidget {\n+  const ContactUsView({super.key});\n+\n+  @override\n+  State<ContactUsView> createState() => _ContactUsViewState();\n+}\n+\n+class _ContactUsViewState extends State<ContactUsView> {\n+  TextEditingController txtName = TextEditingController();\n+  TextEditingController txtEmail = TextEditingController();\n+  TextEditingController txtSubject = TextEditingController();\n+  TextEditingController txtMessage = TextEditingController();\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Contact Us\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      backgroundColor: Colors.white,\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 25),\n+          child: Column(\n+            children: [\n+              LineTextField(\n+                title: \"Name\",\n+                hintText: \"Enter Name\",\n+                controller: txtName,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Email\",\n+                hintText: \"Enter Email Address\",\n+                keyboardType: TextInputType.emailAddress,\n+                controller: txtEmail,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Subject\",\n+                hintText: \"Enter Subject\",\n+                controller: txtSubject,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Message\",\n+                hintText: \"Enter Message\",\n+                //minLines: 5,\n+                //maxLines: 10,\n+                controller: txtMessage,\n+              ),\n+              const SizedBox(\n+                height: 35,\n+              ),\n+              RoundButton(\n+                  title: \"Submit\",\n+                  onPressed: () {\n+                    actionSubmit();\n+                  })\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+  //TODO: Action\n+\n+  void actionSubmit() {\n+    if (txtName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter number\", () {});\n+      return;\n+    }\n+\n+    if (!txtEmail.text.isEmail) {\n+      mdShowAlert(\"Error\", \"Please enter valid email address\", () {});\n+      return;\n+    }\n+\n+    if (txtSubject.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter subject\", () {});\n+      return;\n+    }\n+\n+    if (txtMessage.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter message\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    apiContactSubmit({\n+      \"name\": txtName.text,\n+      \"email\": txtEmail.text,\n+      \"subject\": txtSubject.text,\n+      \"message\": txtMessage.text\n+    });\n+  }\n+\n+  //TODO: ApiCalling\n+\n+  void apiContactSubmit(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svContactUs,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\n+            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n+            () {\n+          context.pop();\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err.toString(), () {});\n+    });\n+  }\n+}\n"
                },
                {
                    "date": 1724060112476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,8 +78,166 @@\n               ),\n               LineTextField(\n                 title: \"Message\",\n                 hintText: \"Enter Message\",\n+                minLines: 5,\n+                maxLines: 10,\n+                controller: txtMessage,\n+              ),\n+              const SizedBox(\n+                height: 35,\n+              ),\n+              RoundButton(\n+                  title: \"Submit\",\n+                  onPressed: () {\n+                    actionSubmit();\n+                  })\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+  //TODO: Action\n+\n+  void actionSubmit() {\n+    if (txtName.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter number\", () {});\n+      return;\n+    }\n+\n+    if (!txtEmail.text.isEmail) {\n+      mdShowAlert(\"Error\", \"Please enter valid email address\", () {});\n+      return;\n+    }\n+\n+    if (txtSubject.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter subject\", () {});\n+      return;\n+    }\n+\n+    if (txtMessage.text.isEmpty) {\n+      mdShowAlert(\"Error\", \"Please enter message\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    apiContactSubmit({\n+      \"name\": txtName.text,\n+      \"email\": txtEmail.text,\n+      \"subject\": txtSubject.text,\n+      \"message\": txtMessage.text\n+    });\n+  }\n+\n+  //TODO: ApiCalling\n+\n+  void apiContactSubmit(Map<String, String> parameter) {\n+    Globs.showHUD();\n+    ServiceCall.post(parameter, SVKey.svContactUs,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\n+            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n+            () {\n+          context.pop();\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"Error\", err.toString(), () {});\n+    });\n+  }\n+}\n+\n+\n+/*import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class ContactUsView extends StatefulWidget {\n+  const ContactUsView({super.key});\n+\n+  @override\n+  State<ContactUsView> createState() => _ContactUsViewState();\n+}\n+\n+class _ContactUsViewState extends State<ContactUsView> {\n+  TextEditingController txtName = TextEditingController();\n+  TextEditingController txtEmail = TextEditingController();\n+  TextEditingController txtSubject = TextEditingController();\n+  TextEditingController txtMessage = TextEditingController();\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Contact Us\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      backgroundColor: Colors.white,\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 25),\n+          child: Column(\n+            children: [\n+              LineTextField(\n+                title: \"Name\",\n+                hintText: \"Enter Name\",\n+                controller: txtName,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Email\",\n+                hintText: \"Enter Email Address\",\n+                keyboardType: TextInputType.emailAddress,\n+                controller: txtEmail,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Subject\",\n+                hintText: \"Enter Subject\",\n+                controller: txtSubject,\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Message\",\n+                hintText: \"Enter Message\",\n                 //minLines: 5,\n                 //maxLines: 10,\n                 controller: txtMessage,\n               ),\n@@ -152,5 +310,5 @@\n       Globs.hideHUD();\n       mdShowAlert(\"Error\", err.toString(), () {});\n     });\n   }\n-}\n+}*/\n"
                },
                {
                    "date": 1725472638529,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,318 +153,4 @@\n       mdShowAlert(\"Error\", err.toString(), () {});\n     });\n   }\n }\n-\n-\n-/*import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class ContactUsView extends StatefulWidget {\n-  const ContactUsView({super.key});\n-\n-  @override\n-  State<ContactUsView> createState() => _ContactUsViewState();\n-}\n-\n-class _ContactUsViewState extends State<ContactUsView> {\n-  TextEditingController txtName = TextEditingController();\n-  TextEditingController txtEmail = TextEditingController();\n-  TextEditingController txtSubject = TextEditingController();\n-  TextEditingController txtMessage = TextEditingController();\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Contact Us\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      backgroundColor: Colors.white,\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 25),\n-          child: Column(\n-            children: [\n-              LineTextField(\n-                title: \"Name\",\n-                hintText: \"Enter Name\",\n-                controller: txtName,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Email\",\n-                hintText: \"Enter Email Address\",\n-                keyboardType: TextInputType.emailAddress,\n-                controller: txtEmail,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Subject\",\n-                hintText: \"Enter Subject\",\n-                controller: txtSubject,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Message\",\n-                hintText: \"Enter Message\",\n-                //minLines: 5,\n-                //maxLines: 10,\n-                controller: txtMessage,\n-              ),\n-              const SizedBox(\n-                height: 35,\n-              ),\n-              RoundButton(\n-                  title: \"Submit\",\n-                  onPressed: () {\n-                    actionSubmit();\n-                  })\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-  //TODO: Action\n-\n-  void actionSubmit() {\n-    if (txtName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter number\", () {});\n-      return;\n-    }\n-\n-    if (!txtEmail.text.isEmail) {\n-      mdShowAlert(\"Error\", \"Please enter valid email address\", () {});\n-      return;\n-    }\n-\n-    if (txtSubject.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter subject\", () {});\n-      return;\n-    }\n-\n-    if (txtMessage.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter message\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    apiContactSubmit({\n-      \"name\": txtName.text,\n-      \"email\": txtEmail.text,\n-      \"subject\": txtSubject.text,\n-      \"message\": txtMessage.text\n-    });\n-  }\n-\n-  //TODO: ApiCalling\n-\n-  void apiContactSubmit(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svContactUs,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        mdShowAlert(\n-            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n-            () {\n-          context.pop();\n-        });\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err.toString(), () {});\n-    });\n-  }\n-}*/\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class ContactUsView extends StatefulWidget {\n-  const ContactUsView({super.key});\n-\n-  @override\n-  State<ContactUsView> createState() => _ContactUsViewState();\n-}\n-\n-class _ContactUsViewState extends State<ContactUsView> {\n-  TextEditingController txtName = TextEditingController();\n-  TextEditingController txtEmail = TextEditingController();\n-  TextEditingController txtSubject = TextEditingController();\n-  TextEditingController txtMessage = TextEditingController();\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Contact Us\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      backgroundColor: Colors.white,\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 25),\n-          child: Column(\n-            children: [\n-              LineTextField(\n-                title: \"Name\",\n-                hintText: \"Enter Name\",\n-                controller: txtName,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Email\",\n-                hintText: \"Enter Email Address\",\n-                keyboardType: TextInputType.emailAddress,\n-                controller: txtEmail,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Subject\",\n-                hintText: \"Enter Subject\",\n-                controller: txtSubject,\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Message\",\n-                hintText: \"Enter Message\",\n-                //minLines: 5,\n-                //maxLines: 10,\n-                controller: txtMessage,\n-              ),\n-              const SizedBox(\n-                height: 35,\n-              ),\n-              RoundButton(\n-                  title: \"Submit\",\n-                  onPressed: () {\n-                    actionSubmit();\n-                  })\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-  //TODO: Action\n-\n-  void actionSubmit() {\n-    if (txtName.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter number\", () {});\n-      return;\n-    }\n-\n-    if (!txtEmail.text.isEmail) {\n-      mdShowAlert(\"Error\", \"Please enter valid email address\", () {});\n-      return;\n-    }\n-\n-    if (txtSubject.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter subject\", () {});\n-      return;\n-    }\n-\n-    if (txtMessage.text.isEmpty) {\n-      mdShowAlert(\"Error\", \"Please enter message\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    apiContactSubmit({\n-      \"name\": txtName.text,\n-      \"email\": txtEmail.text,\n-      \"subject\": txtSubject.text,\n-      \"message\": txtMessage.text\n-    });\n-  }\n-\n-  //TODO: ApiCalling\n-\n-  void apiContactSubmit(Map<String, String> parameter) {\n-    Globs.showHUD();\n-    ServiceCall.post(parameter, SVKey.svContactUs,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-\n-      if (responseObj[KKey.status] == \"1\") {\n-        mdShowAlert(\n-            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n-            () {\n-          context.pop();\n-        });\n-      } else {\n-        mdShowAlert(\n-            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"Error\", err.toString(), () {});\n-    });\n-  }\n-}\n"
                }
            ],
            "date": 1722774243446,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common/common_extension.dart';\nimport 'package:taxi_driver/common/globs.dart';\nimport 'package:taxi_driver/common/service_call.dart';\nimport 'package:taxi_driver/common_widget/line_text_field.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\n\nclass ContactUsView extends StatefulWidget {\n  const ContactUsView({super.key});\n\n  @override\n  State<ContactUsView> createState() => _ContactUsViewState();\n}\n\nclass _ContactUsViewState extends State<ContactUsView> {\n  TextEditingController txtName = TextEditingController();\n  TextEditingController txtEmail = TextEditingController();\n  TextEditingController txtSubject = TextEditingController();\n  TextEditingController txtMessage = TextEditingController();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        elevation: 0.5,\n        backgroundColor: Colors.white,\n        leading: IconButton(\n          onPressed: () {\n            context.pop();\n          },\n          icon: Image.asset(\n            \"assets/img/back.png\",\n            width: 25,\n            height: 25,\n          ),\n        ),\n        centerTitle: true,\n        title: Text(\n          \"Contact Us\",\n          style: TextStyle(\n            color: TColor.primaryText,\n            fontSize: 18,\n            fontWeight: FontWeight.w800,\n          ),\n        ),\n      ),\n      backgroundColor: Colors.white,\n      body: SingleChildScrollView(\n        child: Padding(\n          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 25),\n          child: Column(\n            children: [\n              LineTextField(\n                title: \"Name\",\n                hintText: \"Enter Name\",\n                controller: txtName,\n              ),\n              const SizedBox(\n                height: 15,\n              ),\n              LineTextField(\n                title: \"Email\",\n                hintText: \"Enter Email Address\",\n                keyboardType: TextInputType.emailAddress,\n                controller: txtEmail,\n              ),\n              const SizedBox(\n                height: 15,\n              ),\n              LineTextField(\n                title: \"Subject\",\n                hintText: \"Enter Subject\",\n                controller: txtSubject,\n              ),\n              const SizedBox(\n                height: 15,\n              ),\n              LineTextField(\n                title: \"Message\",\n                hintText: \"Enter Message\",\n                //minLines: 5,\n                //maxLines: 10,\n                controller: txtMessage,\n              ),\n              const SizedBox(\n                height: 35,\n              ),\n              RoundButton(\n                  title: \"Submit\",\n                  onPressed: () {\n                    actionSubmit();\n                  })\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n  //TODO: Action\n\n  void actionSubmit() {\n    if (txtName.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter number\", () {});\n      return;\n    }\n\n    if (!txtEmail.text.isEmail) {\n      mdShowAlert(\"Error\", \"Please enter valid email address\", () {});\n      return;\n    }\n\n    if (txtSubject.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter subject\", () {});\n      return;\n    }\n\n    if (txtMessage.text.isEmpty) {\n      mdShowAlert(\"Error\", \"Please enter message\", () {});\n      return;\n    }\n\n    endEditing();\n\n    apiContactSubmit({\n      \"name\": txtName.text,\n      \"email\": txtEmail.text,\n      \"subject\": txtSubject.text,\n      \"message\": txtMessage.text\n    });\n  }\n\n  //TODO: ApiCalling\n\n  void apiContactSubmit(Map<String, String> parameter) {\n    Globs.showHUD();\n    ServiceCall.post(parameter, SVKey.svContactUs,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n\n      if (responseObj[KKey.status] == \"1\") {\n        mdShowAlert(\n            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n            () {\n          context.pop();\n        });\n      } else {\n        mdShowAlert(\n            \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n      }\n    }, failure: (err) async {\n      Globs.hideHUD();\n      mdShowAlert(\"Error\", err.toString(), () {});\n    });\n  }\n}\n"
        }
    ]
}