{
    "sourceFile": "lib/view/menu/summary_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 39,
            "patches": [
                {
                    "date": 1720164881048,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720164915408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n \n         ),\n         centerTitle: true,\n         title: Text(\n-          \"Earning\", \n+          \"Summary\", \n           style: TextStyle(\n             color: TColor.primaryText, \n             fontSize: 18, \n             fontWeight: \n"
                },
                {
                    "date": 1720165687547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:flutter/material.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common_widget/price_list_view.dart';\n import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n \n \n class SummaryView extends StatefulWidget {\n   const SummaryView({super.key});\n@@ -160,9 +161,66 @@\n                       \n                                         ],\n                                        ),\n \n-                             PriceListView(dObj: todayObj),\n+                             Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+         Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+   \n+          \n+         const SizedBox(height: 8,),\n+\n+\n+      ],\n+    ),\n                       \n                         ],\n                       ),\n                     ),\n"
                },
                {
                    "date": 1720165943705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n                       \n                                         ],\n                                        ),\n \n-                             Column(\n+    Column(\n       children: [\n         const SizedBox(\n           height: 15,\n           ),\n@@ -172,8 +172,19 @@\n           height: 0.5,\n           color: TColor.lightGray,\n         ),\n \n+        Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n         Row(\n           children: [\n           const  Expanded(\n               child: TitleSubtitleCell(\n@@ -219,8 +230,21 @@\n \n \n       ],\n     ),\n+\n+         Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+   \n+          \n+         const SizedBox(height: 8,),\n+\n+\n+      ],\n+    ),\n                       \n                         ],\n                       ),\n                     ),\n@@ -362,9 +386,9 @@\n                                        ),\n                                         ),\n                                        ),\n \n-                             PriceListView(dObj: weekObj),\n+                             \n                       \n                         ],\n                       ),\n                     ),\n"
                },
                {
                    "date": 1720165981906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,19 +172,8 @@\n           height: 0.5,\n           color: TColor.lightGray,\n         ),\n \n-        Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n         Row(\n           children: [\n           const  Expanded(\n               child: TitleSubtitleCell(\n@@ -230,21 +219,8 @@\n \n \n       ],\n     ),\n-\n-         Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-   \n-          \n-         const SizedBox(height: 8,),\n-\n-\n-      ],\n-    ),\n                       \n                         ],\n                       ),\n                     ),\n@@ -386,9 +362,66 @@\n                                        ),\n                                         ),\n                                        ),\n \n-                             \n+                              Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+         Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+   \n+          \n+         const SizedBox(height: 8,),\n+\n+\n+      ],\n+    ),\n                       \n                         ],\n                       ),\n                     ),\n"
                },
                {
                    "date": 1720166406904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -207,16 +207,23 @@\n             ),\n           ],\n         ),\n \n-         Container(\n+          Container(\n           width: double.maxFinite,\n-          height: 0.5,\n+          height: 50,\n           color: TColor.lightGray,\n-        ),\n-   \n-          \n-         const SizedBox(height: 8,),\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n \n \n       ],\n     ),\n@@ -254,9 +261,9 @@\n                             fontSize: 14,\n                             fontWeight: FontWeight.w800,   \n                               ),),\n                       \n-                               Text(\n+                          Text(\n                             \"157.75\", \n                             style:   TextStyle(\n                             color: TColor.primaryText, \n                             fontSize: 25,\n@@ -408,17 +415,26 @@\n             ),\n           ],\n         ),\n \n-         Container(\n+        \n+          Container(\n           width: double.maxFinite,\n-          height: 0.5,\n+          height: 50,\n           color: TColor.lightGray,\n-        ),\n-   \n-          \n-         const SizedBox(height: 8,),\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n \n+        \n \n       ],\n     ),\n                       \n"
                },
                {
                    "date": 1720169563372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common_widget/price_list_view.dart';\n import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n \n \n class SummaryView extends StatefulWidget {\n   const SummaryView({super.key});\n@@ -17,21 +18,62 @@\n \n   TabController? controller;\n   int touchedIndex = -1;\n \n-   Map todayObj = {\n-    \"trips\": \"15\",\n-    \"hrs\": \"8:30\",\n-    \"cash_trip\": \"\\$22.48\",\n-    \"trip_frars\": \"\\$40.25\",\n-    \"fee\": \"\\$20.00\",\n-    \"tax\": \"\\$400.50\",\n-    \"tolls\": \"\\$400.50\",\n-    \"surge\": \"\\$40.25\",\n-    \"discount\": \"\\$20.00\",\n-    \"total\": \"\\$460.75\"\n-  };\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n \n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n   Map weekObj = {\n     \"trips\": \"45\",\n     \"hrs\": \"38:30\",\n     \"cash_trip\": \"\\$99.48\",\n@@ -224,8 +266,23 @@\n                               ),\n                          ),\n \n \n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(), \n+                         itemCount: todayTripArr.length)\n+\n+\n       ],\n     ),\n                       \n                         ],\n"
                },
                {
                    "date": 1720169614672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n \n                           return TodaySummaryRow(sObj: sObj,);\n                           },\n                           separatorBuilder: (context, index) => \n-                         const Divider(), \n+                         const Divider(indent: 50,), \n                          itemCount: todayTripArr.length)\n \n \n       ],\n"
                },
                {
                    "date": 1720169633981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,9 +277,9 @@\n \n                           return TodaySummaryRow(sObj: sObj,);\n                           },\n                           separatorBuilder: (context, index) => \n-                         const Divider(indent: 50,), \n+                         const Divider(indent: 40,), \n                          itemCount: todayTripArr.length)\n \n \n       ],\n"
                },
                {
                    "date": 1720170244622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import 'package:taxi_driver/common_widget/price_list_view.dart';\n import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n \n \n class SummaryView extends StatefulWidget {\n   const SummaryView({super.key});\n@@ -251,9 +252,9 @@\n         ),\n \n           Container(\n           width: double.maxFinite,\n-          height: 50,\n+          height: 60,\n           color: TColor.lightGray,\n           padding: const EdgeInsets.symmetric(horizontal: 20),\n           alignment: Alignment.centerLeft,\n           child:  Text(\n@@ -278,9 +279,9 @@\n                           return TodaySummaryRow(sObj: sObj,);\n                           },\n                           separatorBuilder: (context, index) => \n                          const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length)\n+                         itemCount: todayTripArr.length,),\n \n \n       ],\n     ),\n@@ -475,9 +476,9 @@\n \n         \n           Container(\n           width: double.maxFinite,\n-          height: 50,\n+          height: 60,\n           color: TColor.lightGray,\n           padding: const EdgeInsets.symmetric(horizontal: 20),\n           alignment: Alignment.centerLeft,\n           child:  Text(\n@@ -489,10 +490,23 @@\n                               ),\n                               ),\n                          ),\n \n-        \n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n \n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n       ],\n     ),\n                       \n                         ],\n"
                },
                {
                    "date": 1720170296067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,648 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightGray,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+                              Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightGray,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720170393557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -431,9 +431,9 @@\n         Row(\n           children: [\n           const  Expanded(\n               child: TitleSubtitleCell(\n-                title: \"15\", \n+                title: \"45\", \n                 subtitle: \"Trips\",\n                 ),\n             ),\n         Container(\n@@ -644,664 +644,5 @@\n }\n \n \n }\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  Map weekObj = {\n-    \"trips\": \"45\",\n-    \"hrs\": \"38:30\",\n-    \"cash_trip\": \"\\$99.48\",\n-    \"trip_frars\": \"\\$40.25\",\n-    \"fee\": \"\\$20.00\",\n-    \"tax\": \"\\$400.50\",\n-    \"tolls\": \"\\$400.50\",\n-    \"surge\": \"\\$40.25\",\n-    \"discount\": \"\\$20.00\",\n-    \"total\": \"\\$460.75\"\n-  };\n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-                              Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720170436743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,9 +443,9 @@\n         ),\n \n             const Expanded(\n               child: TitleSubtitleCell(\n-                title: \"8:30\",\n+                title: \"38:30\",\n                 subtitle: \"Online hrs\",\n                 ),\n             ),\n          Container(\n@@ -455,9 +455,9 @@\n         ),\n \n             const Expanded(\n               child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n+                title: \"\\$99.48\", \n                 subtitle: \"Cash Trip\",\n                 ),\n             ),\n           ],\n"
                },
                {
                    "date": 1720170803008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,650 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightGray,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightGray,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720170924563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n                     child: Container(\n                       color: Colors.white,\n                       child: Column(\n                         children: [\n-                          const SizedBox(height: 30,),\n+                          const SizedBox(height: 40,),\n                       \n                           Text(\n                             \"Mon, 28 Sep'23 \", \n                             style:   TextStyle(\n@@ -196,9 +196,9 @@\n \n     Column(\n       children: [\n         const SizedBox(\n-          height: 15,\n+          height: 30,\n           ),\n         Container(\n           width: double.maxFinite,\n           height: 0.5,\n@@ -646,653 +646,5 @@\n }\n \n \n }\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-                              Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171038036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,650 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 40,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 30,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightGray,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171078285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,650 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 40,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 30,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171210999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,650 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 30,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171284452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,134 +160,13 @@\n                     child: Container(\n                       color: Colors.white,\n                       child: Column(\n                         children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 30,\n-          ),\n         Container(\n           width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n+          height: 15,\n+          color: TColor.lightWhite,),\n+          \n                           const SizedBox(height: 30,),\n                       \n                           Text(\n                             \"Mon, 28 Sep'23 \", \n@@ -308,532 +187,8 @@\n                             fontSize: 14,\n                             fontWeight: FontWeight.w800,   \n                               ),),\n                       \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n                                Text(\n                             \"157.75\", \n                             style:   TextStyle(\n                             color: TColor.primaryText, \n@@ -1296,1305 +651,5 @@\n }\n \n \n }\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 30,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 30,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightGray,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171349668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -164,10 +164,10 @@\n         Container(\n           width: double.maxFinite,\n           height: 15,\n           color: TColor.lightWhite,),\n-          \n-                          const SizedBox(height: 30,),\n+\n+                          const SizedBox(height: 40,),\n                       \n                           Text(\n                             \"Mon, 28 Sep'23 \", \n                             style:   TextStyle(\n@@ -200,8 +200,12 @@\n                                        ),\n \n     Column(\n       children: [\n+         Container(\n+          width: double.maxFinite,\n+          height: 15,\n+          color: TColor.lightWhite,),\n         const SizedBox(\n           height: 30,\n           ),\n         Container(\n"
                },
                {
                    "date": 1720171368425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,12 +200,9 @@\n                                        ),\n \n     Column(\n       children: [\n-         Container(\n-          width: double.maxFinite,\n-          height: 15,\n-          color: TColor.lightWhite,),\n+        \n         const SizedBox(\n           height: 30,\n           ),\n         Container(\n"
                },
                {
                    "date": 1720171421584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,8 +292,12 @@\n                     child: Container(\n                       color: Colors.white,\n                       child: Column(\n                         children: [\n+                           Container(\n+          width: double.maxFinite,\n+          height: 15,\n+          color: TColor.lightWhite,),\n                           const SizedBox(height: 30,),\n                       \n                           Text(\n                             \"Mon, 28 Sep'23 \", \n"
                },
                {
                    "date": 1720171507368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -204,14 +204,9 @@\n         \n         const SizedBox(\n           height: 30,\n           ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n+        \n         Row(\n           children: [\n           const  Expanded(\n               child: TitleSubtitleCell(\n"
                },
                {
                    "date": 1720171517455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,660 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+        Container(\n+          width: double.maxFinite,\n+          height: 15,\n+          color: TColor.lightWhite,),\n+\n+                          const SizedBox(height: 40,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        \n+        const SizedBox(\n+          height: 30,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                           Container(\n+          width: double.maxFinite,\n+          height: 15,\n+          color: TColor.lightWhite,),\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171578445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n                       child: Column(\n                         children: [\n         Container(\n           width: double.maxFinite,\n-          height: 15,\n+          height: 8,\n           color: TColor.lightWhite,),\n \n                           const SizedBox(height: 40,),\n                       \n@@ -656,660 +656,5 @@\n }\n \n \n }\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-        Container(\n-          width: double.maxFinite,\n-          height: 15,\n-          color: TColor.lightWhite,),\n-\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        \n-        const SizedBox(\n-          height: 30,\n-          ),\n-        \n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                           Container(\n-          width: double.maxFinite,\n-          height: 15,\n-          color: TColor.lightWhite,),\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171599199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n                       child: Column(\n                         children: [\n                            Container(\n           width: double.maxFinite,\n-          height: 15,\n+          height: 8,\n           color: TColor.lightWhite,),\n                           const SizedBox(height: 30,),\n                       \n                           Text(\n"
                },
                {
                    "date": 1720171621298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,9 @@\n                       child: Column(\n                         children: [\n                            Container(\n           width: double.maxFinite,\n-          height: 8,\n+          height: 12,\n           color: TColor.lightWhite,),\n                           const SizedBox(height: 30,),\n                       \n                           Text(\n"
                },
                {
                    "date": 1720171651595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n                       child: Column(\n                         children: [\n         Container(\n           width: double.maxFinite,\n-          height: 8,\n+          height: 12,\n           color: TColor.lightWhite,),\n \n                           const SizedBox(height: 40,),\n                       \n"
                },
                {
                    "date": 1720171685241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,660 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common_widget/price_list_view.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+\n+}\n+class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n+\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+   List todayTripArr = [\n+    {\n+      \"time\": \"3:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$25\"\n+    },\n+    {\n+      \"time\": \"4:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Location name only\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$35\"\n+    },\n+    {\n+      \"time\": \"5:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$30\"\n+    },\n+    {\n+      \"time\": \"6:32\",\n+      \"am_pm\": \"AM\",\n+      \"name\": \"Pembroke Dock\",\n+      \"detail\": \"Paid by card\",\n+      \"price\": \"\\$40\"\n+    },\n+   ];\n+\n+   List weeklyTripArr = [\n+    {\n+      \"time\": \"Mon, 28 Sep\",\n+      \"trips\": \"25\",\n+      \"price\": \"\\$40\"\n+    },\n+    {\n+      \"time\": \"Mon, 27 Sep\",\n+      \"trips\": \"15\",\n+      \"price\": \"\\$30\"\n+    },\n+     {\n+      \"time\": \"Mon, 26 Sep\",\n+      \"trips\": \"40\",\n+      \"price\": \"\\$120\"\n+    },\n+     {\n+      \"time\": \"Mon, 24 Sep\",\n+      \"trips\": \"30\",\n+      \"price\": \"\\$100\"\n+    },\n+   ];\n+\n+  \n+\n+  @override\n+  void initState() {\n+    // TODO: implement initState\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+  }\n+\n+\n+  @override\n+Widget build(BuildContext context) {\n+\n+  return Scaffold(\n+    appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+        onPressed: (){\n+          context.pop();\n+        }, \n+        icon: Image.asset(\n+          \"assets/img/back.png\", \n+        width: 25, \n+        height: 25,\n+        ),\n+\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\", \n+          style: TextStyle(\n+            color: TColor.primaryText, \n+            fontSize: 18, \n+            fontWeight: \n+            FontWeight.w800,\n+            ),\n+            ),\n+        ),\n+\n+        body: Column(\n+          children: [\n+            const SizedBox(\n+              height: 8,),\n+\n+              TabBar(\n+                controller: controller,\n+                indicatorColor: TColor.primary,\n+                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+                labelColor: TColor.primary,\n+                unselectedLabelColor: TColor.placeholder,\n+                labelStyle: const TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+\n+                unselectedLabelStyle: const  TextStyle(\n+                  fontSize: 15,\n+                  fontWeight: FontWeight.w800\n+                ),\n+                \n+                tabs: const [\n+\n+                Tab(\n+                  text: \"TODAY\",),\n+                Tab(\n+                  text: \"WEEKLY\",),\n+              ],\n+              ),\n+\n+              Container(\n+                width: double.maxFinite, \n+                height: 0.5, \n+                color: TColor.lightGray,\n+                ),\n+\n+              Expanded(\n+                child: TabBarView(\n+                controller: controller,\n+                children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+        Container(\n+          width: double.maxFinite,\n+          height: 12,\n+          color: TColor.lightWhite,),\n+\n+                          const SizedBox(height: 40,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                               Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+    Column(\n+      children: [\n+        \n+        const SizedBox(\n+          height: 30,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"15\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"8:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$22.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+\n+                         ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = todayTripArr[index] as Map? ?? {};\n+\n+                          return TodaySummaryRow(sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: todayTripArr.length,),\n+\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                 Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                           Container(\n+          width: double.maxFinite,\n+          height: 12,\n+          color: TColor.lightWhite,),\n+                          const SizedBox(height: 30,),\n+                      \n+                          Text(\n+                            \"Mon, 28 Sep'23 \", \n+                            style:   TextStyle(\n+                            color: TColor.secondaryText,\n+                            fontSize: 16,   \n+                                ),),\n+                      \n+                                       const SizedBox(height: 8,),\n+                      \n+                                       Row(\n+                                        mainAxisSize: MainAxisSize.min,\n+                                        children: [\n+                       Text(\n+                            \"\\$\", \n+                            style:   TextStyle(\n+                            color: TColor.primary, \n+                            fontSize: 14,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                          Text(\n+                            \"157.75\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 25,\n+                            fontWeight: FontWeight.w800,   \n+                              ),),\n+                      \n+                                        ],\n+                                       ),\n+\n+                                       const SizedBox(height: 15,),\n+\n+                                     SizedBox(\n+                                        height: context.width * 0.5,\n+                                        child: BarChart(BarChartData(\n+                                          barTouchData: BarTouchData(\n+                                            touchTooltipData: BarTouchTooltipData(\n+                                              tooltipBgColor: Colors.grey,\n+                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n+                                              tooltipMargin: 10,\n+                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n+                                                String weekDay;\n+\n+                                                switch (group.x) {\n+                                                  case 0:\n+                                                  weekDay = \"Sunday\";\n+                                                    \n+                                                    break;\n+\n+                                                    case 1:\n+                                                  weekDay = \"Monday\";\n+                                                    \n+                                                    break;\n+                                                    case 2:\n+                                                  weekDay = \"Tuesday\";\n+                                                    \n+                                                    break;\n+                                                    case 3:\n+                                                  weekDay = \"Wednesday\";\n+                                                    \n+                                                    break;\n+                                                    case 4:\n+                                                  weekDay = \"Thursday\";\n+                                                    \n+                                                    break;\n+                                                    case 5:\n+                                                  weekDay = \"Friday\";\n+                                                    \n+                                                    break;\n+                                                    case 6:\n+                                                  weekDay = \"Saturday\";\n+                                                    \n+                                                   \n+                                                    \n+                                                    break;\n+                                                  default:\n+                                                  throw Error();\n+                                                }\n+                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n+                                                  color: Colors.white,\n+                                                  fontWeight: FontWeight.w500,\n+                                                  fontSize: 16\n+                                                  ),);\n+                                              },\n+                                            ),\n+                                            touchCallback: (event, barTouchResponse) {\n+\n+                                              setState(() {\n+                                                if (!event.isInterestedForInteractions || \n+                                                barTouchResponse == null || barTouchResponse.spot\n+                                                == null) {\n+                                                  touchedIndex = -1;\n+                                                  return;\n+                                                }\n+                                                touchedIndex = barTouchResponse.spot!.\n+                                                touchedBarGroupIndex;\n+                                              });\n+                                              \n+                                            },\n+                                          ),\n+\n+                                          titlesData: FlTitlesData(\n+                                            show: true,\n+                                            rightTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                            ),\n+                                            topTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                          ),\n+                                          bottomTitles: AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n+                                               getTitles, \n+                                               reservedSize: 38),\n+                                        ),\n+                                        leftTitles: const AxisTitles(\n+                                              sideTitles: SideTitles(showTitles: false),\n+                                        ),\n+\n+                                        ),\n+\n+                                        borderData: FlBorderData(\n+                                          show: false,\n+                                        ),\n+                                          barGroups: showingGroups(),\n+                                          gridData: const FlGridData(show: false),\n+                                       ),\n+                                        ),\n+                                       ),\n+\n+    Column(\n+      children: [\n+        const SizedBox(\n+          height: 15,\n+          ),\n+        Container(\n+          width: double.maxFinite,\n+          height: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+        Row(\n+          children: [\n+          const  Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"45\", \n+                subtitle: \"Trips\",\n+                ),\n+            ),\n+        Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"38:30\",\n+                subtitle: \"Online hrs\",\n+                ),\n+            ),\n+         Container(\n+          height: 80,\n+          width: 0.5,\n+          color: TColor.lightGray,\n+        ),\n+\n+            const Expanded(\n+              child: TitleSubtitleCell(\n+                title: \"\\$99.48\", \n+                subtitle: \"Cash Trip\",\n+                ),\n+            ),\n+          ],\n+        ),\n+\n+        \n+          Container(\n+          width: double.maxFinite,\n+          height: 60,\n+          color: TColor.lightWhite,\n+          padding: const EdgeInsets.symmetric(horizontal: 20),\n+          alignment: Alignment.centerLeft,\n+          child:  Text(\n+                      \"TRIPS\", \n+                            style:   TextStyle(\n+                            color: TColor.primaryText, \n+                            fontSize: 15,\n+                            fontWeight: FontWeight.w800,   \n+                              ),\n+                              ),\n+                         ),\n+\n+              ListView.separated(\n+                          physics: const NeverScrollableScrollPhysics(),\n+                          shrinkWrap: true,\n+                          padding: const EdgeInsets.symmetric(\n+                            horizontal: 20, vertical: 10),\n+                          itemBuilder: (context, index) {\n+                            var sObj = weeklyTripArr[index] as Map? ?? {};\n+\n+                          return WeeklySummaryRow(\n+                            sObj: sObj,);\n+                          },\n+                          separatorBuilder: (context, index) => \n+                         const Divider(indent: 40,), \n+                         itemCount: weeklyTripArr.length,),\n+\n+      ],\n+    ),\n+                      \n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                \n+                ],\n+              ),),\n+          ],\n+        ),\n+  );\n+\n+}\n+\n+Widget getTitles(double value, TitleMeta meta) {\n+\n+  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+  Widget text;\n+  switch (value.toInt()) {\n+    case 0:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 1:\n+    text = Text(\n+      'M', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 2:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 3:\n+    text = Text(\n+      'W', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 4:\n+    text = Text(\n+      'T', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 5:\n+    text = Text(\n+      'F', \n+      style: style,\n+      );\n+      \n+      break;\n+      case 6:\n+    text = Text(\n+      'S', \n+      style: style,\n+      );\n+      \n+      break;\n+    default:\n+     text = Text(\n+      '', \n+      style: style,\n+      );\n+      \n+      break;\n+  }\n+\n+  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n+\n+}\n+\n+List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n+ switch (i) {\n+   case 0:\n+   return makeGroupData(0, 5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 1:\n+   return makeGroupData(1, 10.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 2:\n+   return makeGroupData(2, 5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 3:\n+   return makeGroupData(3, 7.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 4:\n+   return makeGroupData(4, 15, TColor.primary, \n+   isTouched: i == touchedIndex );\n+   case 5:\n+   return makeGroupData(5, 5.5, TColor.primary,\n+    isTouched: i == touchedIndex );\n+   case 6:\n+   return makeGroupData(6, 8.5, TColor.primary, \n+   isTouched: i == touchedIndex );\n+ \n+\n+   default:\n+   return throw Error();\n+     \n+    \n+ }\n+});\n+\n+BarChartGroupData makeGroupData(\n+  int x, double y, Color barColor, {\n+    bool isTouched = false,\n+    double width = 40,\n+    List<int> showTooltips = const []\n+  }\n+) {\n+\n+  return BarChartGroupData(x: x, barRods: [\n+\n+ BarChartRodData(\n+  toY: isTouched ? y + 1 : y,\n+   color: barColor,\n+   width: width,\n+   borderRadius: const BorderRadius.only(\n+    topLeft: Radius.circular(5), \n+    topRight: Radius.circular(5),\n+    ),\n+    borderSide: isTouched ? const BorderSide(\n+      color: Colors.green):\n+       const BorderSide(\n+        color: Colors.green, width: 0),\n+\n+        backDrawRodData: BackgroundBarChartRodData(\n+          show: false\n+        ),\n+   ),\n+  ]);\n+\n+}\n+\n+\n+}\n+    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720171716199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -656,665 +656,5 @@\n }\n \n \n }\n-    \n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n-import 'package:fl_chart/fl_chart.dart';\n-import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n-import 'package:taxi_driver/common_widget/today_summary_row.dart';\n-import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n-\n-\n-class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-        Container(\n-          width: double.maxFinite,\n-          height: 12,\n-          color: TColor.lightWhite,),\n-\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        \n-        const SizedBox(\n-          height: 30,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                           Container(\n-          width: double.maxFinite,\n-          height: 12,\n-          color: TColor.lightWhite,),\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1720601377968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n                                         height: context.width * 0.5,\n                                         child: BarChart(BarChartData(\n                                           barTouchData: BarTouchData(\n                                             touchTooltipData: BarTouchTooltipData(\n-                                              tooltipBgColor: Colors.grey,\n+                                            //  tooltipBgColor: Colors.grey,\n                                               tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n                                               tooltipMargin: 10,\n                                               getTooltipItem: (group, groupIndex, rod, rodIndex) {\n                                                 String weekDay;\n"
                },
                {
                    "date": 1720602998119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n                                         height: context.width * 0.5,\n                                         child: BarChart(BarChartData(\n                                           barTouchData: BarTouchData(\n                                             touchTooltipData: BarTouchTooltipData(\n-                                            //  tooltipBgColor: Colors.grey,\n+                                             tooltipBgColor: Colors.grey,\n                                               tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n                                               tooltipMargin: 10,\n                                               getTooltipItem: (group, groupIndex, rod, rodIndex) {\n                                                 String weekDay;\n"
                },
                {
                    "date": 1720608543026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n                                         height: context.width * 0.5,\n                                         child: BarChart(BarChartData(\n                                           barTouchData: BarTouchData(\n                                             touchTooltipData: BarTouchTooltipData(\n-                                             tooltipBgColor: Colors.grey,\n+                                             //tooltipBgColor: Colors.grey,\n                                               tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n                                               tooltipMargin: 10,\n                                               getTooltipItem: (group, groupIndex, rod, rodIndex) {\n                                                 String weekDay;\n"
                },
                {
                    "date": 1720608716038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n                                         height: context.width * 0.5,\n                                         child: BarChart(BarChartData(\n                                           barTouchData: BarTouchData(\n                                             touchTooltipData: BarTouchTooltipData(\n-                                             //tooltipBgColor: Colors.grey,\n+                                             tooltipBgColor: Colors.grey,\n                                               tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n                                               tooltipMargin: 10,\n                                               getTooltipItem: (group, groupIndex, rod, rodIndex) {\n                                                 String weekDay;\n"
                },
                {
                    "date": 1722770866680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,536 @@\n import 'package:flutter/material.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n import 'package:taxi_driver/common_widget/price_list_view.dart';\n import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n import 'package:taxi_driver/common_widget/today_summary_row.dart';\n import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n \n \n+\n class SummaryView extends StatefulWidget {\n   const SummaryView({super.key});\n \n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+}\n \n+class _SummaryViewState extends State<SummaryView>\n+    with SingleTickerProviderStateMixin {\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+  Map todayObj = {};\n+  Map weekObj = {};\n+\n+  List todayTripsArr = [];\n+\n+  List weeklyTripsArr = [];\n+  List weeklyChartArr = [];\n+\n   @override\n+  void initState() {\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+    apiList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n+    var todayCashTotal =\n+        double.tryParse(todayObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var todayOnlineTotal =\n+        double.tryParse(todayObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    var weekTotal = double.tryParse(weekObj[\"total_amt\"].toString()) ?? 0.0;\n+    var weekCashTotal = double.tryParse(weekObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var weekOnlineTotal =\n+        double.tryParse(weekObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      body: Column(\n+        children: [\n+          const SizedBox(\n+            height: 8,\n+          ),\n+          TabBar(\n+            controller: controller,\n+            indicatorColor: TColor.primary,\n+            indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+            labelColor: TColor.primary,\n+            unselectedLabelColor: TColor.placeholder,\n+            labelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            unselectedLabelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            tabs: const [\n+              Tab(\n+                text: \"TODAY\",\n+              ),\n+              Tab(\n+                text: \"WEEKLY\",\n+              ),\n+            ],\n+          ),\n+          Container(\n+            width: double.maxFinite,\n+            height: 0.5,\n+            color: TColor.lightGray,\n+          ),\n+          Expanded(\n+            child: TabBarView(\n+              controller: controller,\n+              children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 40,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                todayTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 30,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (todayObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                alignment: Alignment.centerLeft,\n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                physics: const NeverScrollableScrollPhysics(),\n+                                shrinkWrap: true,\n+                                padding: const EdgeInsets.symmetric(\n+                                    horizontal: 20, vertical: 10),\n+                                itemBuilder: (context, index) {\n+                                  var sObj = todayTripsArr[index] as Map? ?? {};\n+\n+                                  return TodaySummaryRow(\n+                                    sObj: sObj,\n+                                  );\n+                                },\n+                                separatorBuilder: (context, index) =>\n+                                    const Divider(\n+                                  indent: 40,\n+                                ),\n+                                itemCount: todayTripsArr.length,\n+                              ),\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 30,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                weekTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          const SizedBox(\n+                            height: 15,\n+                          ),\n+                          SizedBox(\n+                            height: context.width * 0.5,\n+                            child: BarChart(\n+                              BarChartData(\n+                                barTouchData: BarTouchData(\n+                                  touchTooltipData: BarTouchTooltipData(\n+\n+                                    tooltipHorizontalAlignment:\n+                                        FLHorizontalAlignment.right,\n+                                    tooltipMargin: 10,\n+                                    getTooltipItem:\n+                                        (group, groupIndex, rod, rodIndex) {\n+                                      var obj =\n+                                          weeklyChartArr[group.x] as Map? ?? {};\n+\n+                                      var weekDay = obj[\"date\"]\n+                                          .toString()\n+                                          .stringFormatToOtherFormat(\n+                                              newFormat: \"EEEE\");\n+\n+                                      return BarTooltipItem(\n+                                        '$weekDay\\n\\$${ ( double.tryParse( obj[\"total_amt\"].toString()) ?? 0.0 ).toStringAsFixed(2) }',\n+                                        const TextStyle(\n+                                            color: Colors.white,\n+                                            fontWeight: FontWeight.w500,\n+                                            fontSize: 16),\n+                                      );\n+                                    },\n+                                  ),\n+                                  touchCallback: (event, barTouchResponse) {\n+                                    setState(() {\n+                                      if (!event.isInterestedForInteractions ||\n+                                          barTouchResponse == null ||\n+                                          barTouchResponse.spot == null) {\n+                                        touchedIndex = -1;\n+                                        return;\n+                                      }\n+\n+                                      touchedIndex = barTouchResponse\n+                                          .spot!.touchedBarGroupIndex;\n+                                    });\n+                                  },\n+                                ),\n+                                titlesData: FlTitlesData(\n+                                  show: true,\n+                                  rightTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  topTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  bottomTitles: AxisTitles(\n+                                    sideTitles: SideTitles(\n+                                        showTitles: true,\n+                                        getTitlesWidget: getTitles,\n+                                        reservedSize: 38),\n+                                  ),\n+                                  leftTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                ),\n+                                borderData: FlBorderData(\n+                                  show: false,\n+                                ),\n+                                barGroups: showingGroups(),\n+                                gridData: const FlGridData(show: false),\n+                              ),\n+                            ),\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 15,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (weekObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                alignment: Alignment.centerLeft,\n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                  physics: const NeverScrollableScrollPhysics(),\n+                                  shrinkWrap: true,\n+                                  padding: const EdgeInsets.symmetric(\n+                                      horizontal: 20, vertical: 10),\n+                                  itemBuilder: (context, index) {\n+                                    var sObj =\n+                                        weeklyChartArr[index] as Map? ?? {};\n+\n+                                    return WeeklySummaryRow(\n+                                      sObj: sObj,\n+                                    );\n+                                  },\n+                                  separatorBuilder: (context, index) =>\n+                                      const Divider(\n+                                        indent: 40,\n+                                      ),\n+                                  itemCount: weeklyChartArr.length)\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  Widget getTitles(double value, TitleMeta meta) {\n+    var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+    var obj = weeklyChartArr[value.toInt()] as Map? ?? {};\n+\n+    return SideTitleWidget(\n+        space: 16,\n+        axisSide: meta.axisSide,\n+        child: Text(\n+          obj[\"date\"].toString().stringFormatToOtherFormat(newFormat: \"EEE\"),\n+          style: style,\n+        ));\n+  }\n+\n+  List<BarChartGroupData> showingGroups() => weeklyChartArr.map((e) {\n+        var i = weeklyChartArr.indexOf(e);\n+        return makeGroupData(i,\n+            double.tryParse(e[\"total_amt\"].toString()) ?? 0.0, TColor.primary,\n+            isTouched: i == touchedIndex);\n+      }).toList();\n+\n+  BarChartGroupData makeGroupData(int x, double y, Color barColor,\n+      {bool isTouched = false,\n+      double width = 40,\n+      List<int> showTooltips = const []}) {\n+    return BarChartGroupData(x: x, barRods: [\n+      BarChartRodData(\n+          toY: isTouched ? y + 1 : y,\n+          color: barColor,\n+          width: width,\n+          borderRadius: const BorderRadius.only(\n+            topLeft: Radius.circular(5),\n+            topRight: Radius.circular(5),\n+          ),\n+          borderSide: isTouched\n+              ? const BorderSide(color: Colors.green)\n+              : const BorderSide(color: Colors.green, width: 0),\n+          backDrawRodData: BackgroundBarChartRodData(show: false))\n+    ]);\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiList() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+      {},\n+      SVKey.svDriverSummary,\n+      isTokenApi: true,\n+      withSuccess: (responseObj) async {\n+        Globs.hideHUD();\n+\n+        if (responseObj[KKey.status] == \"1\") {\n+          var payloadObj = responseObj[KKey.payload] as Map? ?? {};\n+          todayObj = payloadObj[\"today\"] as Map? ?? {};\n+          weekObj = payloadObj[\"week\"] as Map? ?? {};\n+\n+          todayTripsArr = todayObj[\"list\"] as List? ?? [];\n+          weeklyTripsArr = weekObj[\"list\"] as List? ?? [];\n+          weeklyChartArr = (weekObj[\"chart\"] as List? ?? []).reversed.toList();\n+\n+          if (mounted) {\n+            setState(() {});\n+          }\n+        } else {\n+          mdShowAlert(\n+              \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+        }\n+      },\n+      failure: (err) async {\n+        Globs.hideHUD();\n+        debugPrint(err.toString());\n+      },\n+    );\n+  }\n+}\n+\n+\n+\n+\n+/*class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+\n+  @override\n   State<SummaryView> createState() => _SummaryViewState();\n \n }\n class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n@@ -655,6 +1173,6 @@\n \n }\n \n \n-}\n+}*/\n     \n\\ No newline at end of file\n"
                },
                {
                    "date": 1724754949230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import 'package:taxi_driver/common/color_extension.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/price_list_view.dart';\n import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n import 'package:taxi_driver/common_widget/today_summary_row.dart';\n import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n"
                },
                {
                    "date": 1725473792713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,8 @@\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n import 'package:taxi_driver/common_widget/today_summary_row.dart';\n import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n \n-\n-\n class SummaryView extends StatefulWidget {\n   const SummaryView({super.key});\n \n   @override\n"
                },
                {
                    "date": 1725860094772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import 'package:flutter/material.dart';\n import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common/common_extension.dart';\n import 'package:taxi_driver/common/globs.dart';\n import 'package:taxi_driver/common/service_call.dart';\n-import 'package:fl_chart/fl_chart.dart';\n import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n import 'package:taxi_driver/common_widget/today_summary_row.dart';\n import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n \n@@ -517,659 +517,4 @@\n       },\n     );\n   }\n }\n-\n-\n-\n-\n-/*class SummaryView extends StatefulWidget {\n-  const SummaryView({super.key});\n-\n-\n-  @override\n-  State<SummaryView> createState() => _SummaryViewState();\n-\n-}\n-class _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n-\n-  TabController? controller;\n-  int touchedIndex = -1;\n-\n-   List todayTripArr = [\n-    {\n-      \"time\": \"3:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$25\"\n-    },\n-    {\n-      \"time\": \"4:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Location name only\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$35\"\n-    },\n-    {\n-      \"time\": \"5:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$30\"\n-    },\n-    {\n-      \"time\": \"6:32\",\n-      \"am_pm\": \"AM\",\n-      \"name\": \"Pembroke Dock\",\n-      \"detail\": \"Paid by card\",\n-      \"price\": \"\\$40\"\n-    },\n-   ];\n-\n-   List weeklyTripArr = [\n-    {\n-      \"time\": \"Mon, 28 Sep\",\n-      \"trips\": \"25\",\n-      \"price\": \"\\$40\"\n-    },\n-    {\n-      \"time\": \"Mon, 27 Sep\",\n-      \"trips\": \"15\",\n-      \"price\": \"\\$30\"\n-    },\n-     {\n-      \"time\": \"Mon, 26 Sep\",\n-      \"trips\": \"40\",\n-      \"price\": \"\\$120\"\n-    },\n-     {\n-      \"time\": \"Mon, 24 Sep\",\n-      \"trips\": \"30\",\n-      \"price\": \"\\$100\"\n-    },\n-   ];\n-\n-  \n-\n-  @override\n-  void initState() {\n-    // TODO: implement initState\n-    super.initState();\n-    controller = TabController(length: 2, vsync: this);\n-  }\n-\n-\n-  @override\n-Widget build(BuildContext context) {\n-\n-  return Scaffold(\n-    appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-        onPressed: (){\n-          context.pop();\n-        }, \n-        icon: Image.asset(\n-          \"assets/img/back.png\", \n-        width: 25, \n-        height: 25,\n-        ),\n-\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Summary\", \n-          style: TextStyle(\n-            color: TColor.primaryText, \n-            fontSize: 18, \n-            fontWeight: \n-            FontWeight.w800,\n-            ),\n-            ),\n-        ),\n-\n-        body: Column(\n-          children: [\n-            const SizedBox(\n-              height: 8,),\n-\n-              TabBar(\n-                controller: controller,\n-                indicatorColor: TColor.primary,\n-                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n-                labelColor: TColor.primary,\n-                unselectedLabelColor: TColor.placeholder,\n-                labelStyle: const TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-\n-                unselectedLabelStyle: const  TextStyle(\n-                  fontSize: 15,\n-                  fontWeight: FontWeight.w800\n-                ),\n-                \n-                tabs: const [\n-\n-                Tab(\n-                  text: \"TODAY\",),\n-                Tab(\n-                  text: \"WEEKLY\",),\n-              ],\n-              ),\n-\n-              Container(\n-                width: double.maxFinite, \n-                height: 0.5, \n-                color: TColor.lightGray,\n-                ),\n-\n-              Expanded(\n-                child: TabBarView(\n-                controller: controller,\n-                children: [\n-                Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-        Container(\n-          width: double.maxFinite,\n-          height: 12,\n-          color: TColor.lightWhite,),\n-\n-                          const SizedBox(height: 40,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                               Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-    Column(\n-      children: [\n-        \n-        const SizedBox(\n-          height: 30,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"15\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"8:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$22.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-\n-                         ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = todayTripArr[index] as Map? ?? {};\n-\n-                          return TodaySummaryRow(sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: todayTripArr.length,),\n-\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                 Container(\n-                  color: TColor.lightWhite,\n-                  child: SingleChildScrollView(\n-                    child: Container(\n-                      color: Colors.white,\n-                      child: Column(\n-                        children: [\n-                           Container(\n-          width: double.maxFinite,\n-          height: 12,\n-          color: TColor.lightWhite,),\n-                          const SizedBox(height: 30,),\n-                      \n-                          Text(\n-                            \"Mon, 28 Sep'23 \", \n-                            style:   TextStyle(\n-                            color: TColor.secondaryText,\n-                            fontSize: 16,   \n-                                ),),\n-                      \n-                                       const SizedBox(height: 8,),\n-                      \n-                                       Row(\n-                                        mainAxisSize: MainAxisSize.min,\n-                                        children: [\n-                       Text(\n-                            \"\\$\", \n-                            style:   TextStyle(\n-                            color: TColor.primary, \n-                            fontSize: 14,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                          Text(\n-                            \"157.75\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 25,\n-                            fontWeight: FontWeight.w800,   \n-                              ),),\n-                      \n-                                        ],\n-                                       ),\n-\n-                                       const SizedBox(height: 15,),\n-\n-                                     SizedBox(\n-                                        height: context.width * 0.5,\n-                                        child: BarChart(BarChartData(\n-                                          barTouchData: BarTouchData(\n-                                            touchTooltipData: BarTouchTooltipData(\n-                                             tooltipBgColor: Colors.grey,\n-                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n-                                              tooltipMargin: 10,\n-                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n-                                                String weekDay;\n-\n-                                                switch (group.x) {\n-                                                  case 0:\n-                                                  weekDay = \"Sunday\";\n-                                                    \n-                                                    break;\n-\n-                                                    case 1:\n-                                                  weekDay = \"Monday\";\n-                                                    \n-                                                    break;\n-                                                    case 2:\n-                                                  weekDay = \"Tuesday\";\n-                                                    \n-                                                    break;\n-                                                    case 3:\n-                                                  weekDay = \"Wednesday\";\n-                                                    \n-                                                    break;\n-                                                    case 4:\n-                                                  weekDay = \"Thursday\";\n-                                                    \n-                                                    break;\n-                                                    case 5:\n-                                                  weekDay = \"Friday\";\n-                                                    \n-                                                    break;\n-                                                    case 6:\n-                                                  weekDay = \"Saturday\";\n-                                                    \n-                                                   \n-                                                    \n-                                                    break;\n-                                                  default:\n-                                                  throw Error();\n-                                                }\n-                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n-                                                  color: Colors.white,\n-                                                  fontWeight: FontWeight.w500,\n-                                                  fontSize: 16\n-                                                  ),);\n-                                              },\n-                                            ),\n-                                            touchCallback: (event, barTouchResponse) {\n-\n-                                              setState(() {\n-                                                if (!event.isInterestedForInteractions || \n-                                                barTouchResponse == null || barTouchResponse.spot\n-                                                == null) {\n-                                                  touchedIndex = -1;\n-                                                  return;\n-                                                }\n-                                                touchedIndex = barTouchResponse.spot!.\n-                                                touchedBarGroupIndex;\n-                                              });\n-                                              \n-                                            },\n-                                          ),\n-\n-                                          titlesData: FlTitlesData(\n-                                            show: true,\n-                                            rightTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                            ),\n-                                            topTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                          ),\n-                                          bottomTitles: AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n-                                               getTitles, \n-                                               reservedSize: 38),\n-                                        ),\n-                                        leftTitles: const AxisTitles(\n-                                              sideTitles: SideTitles(showTitles: false),\n-                                        ),\n-\n-                                        ),\n-\n-                                        borderData: FlBorderData(\n-                                          show: false,\n-                                        ),\n-                                          barGroups: showingGroups(),\n-                                          gridData: const FlGridData(show: false),\n-                                       ),\n-                                        ),\n-                                       ),\n-\n-    Column(\n-      children: [\n-        const SizedBox(\n-          height: 15,\n-          ),\n-        Container(\n-          width: double.maxFinite,\n-          height: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-        Row(\n-          children: [\n-          const  Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"45\", \n-                subtitle: \"Trips\",\n-                ),\n-            ),\n-        Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"38:30\",\n-                subtitle: \"Online hrs\",\n-                ),\n-            ),\n-         Container(\n-          height: 80,\n-          width: 0.5,\n-          color: TColor.lightGray,\n-        ),\n-\n-            const Expanded(\n-              child: TitleSubtitleCell(\n-                title: \"\\$99.48\", \n-                subtitle: \"Cash Trip\",\n-                ),\n-            ),\n-          ],\n-        ),\n-\n-        \n-          Container(\n-          width: double.maxFinite,\n-          height: 60,\n-          color: TColor.lightWhite,\n-          padding: const EdgeInsets.symmetric(horizontal: 20),\n-          alignment: Alignment.centerLeft,\n-          child:  Text(\n-                      \"TRIPS\", \n-                            style:   TextStyle(\n-                            color: TColor.primaryText, \n-                            fontSize: 15,\n-                            fontWeight: FontWeight.w800,   \n-                              ),\n-                              ),\n-                         ),\n-\n-              ListView.separated(\n-                          physics: const NeverScrollableScrollPhysics(),\n-                          shrinkWrap: true,\n-                          padding: const EdgeInsets.symmetric(\n-                            horizontal: 20, vertical: 10),\n-                          itemBuilder: (context, index) {\n-                            var sObj = weeklyTripArr[index] as Map? ?? {};\n-\n-                          return WeeklySummaryRow(\n-                            sObj: sObj,);\n-                          },\n-                          separatorBuilder: (context, index) => \n-                         const Divider(indent: 40,), \n-                         itemCount: weeklyTripArr.length,),\n-\n-      ],\n-    ),\n-                      \n-                        ],\n-                      ),\n-                    ),\n-                  ),\n-                ),\n-                \n-                ],\n-              ),),\n-          ],\n-        ),\n-  );\n-\n-}\n-\n-Widget getTitles(double value, TitleMeta meta) {\n-\n-  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n-\n-  Widget text;\n-  switch (value.toInt()) {\n-    case 0:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 1:\n-    text = Text(\n-      'M', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 2:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 3:\n-    text = Text(\n-      'W', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 4:\n-    text = Text(\n-      'T', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 5:\n-    text = Text(\n-      'F', \n-      style: style,\n-      );\n-      \n-      break;\n-      case 6:\n-    text = Text(\n-      'S', \n-      style: style,\n-      );\n-      \n-      break;\n-    default:\n-     text = Text(\n-      '', \n-      style: style,\n-      );\n-      \n-      break;\n-  }\n-\n-  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n-\n-}\n-\n-List<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n- switch (i) {\n-   case 0:\n-   return makeGroupData(0, 5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 1:\n-   return makeGroupData(1, 10.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 2:\n-   return makeGroupData(2, 5, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 3:\n-   return makeGroupData(3, 7.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 4:\n-   return makeGroupData(4, 15, TColor.primary, \n-   isTouched: i == touchedIndex );\n-   case 5:\n-   return makeGroupData(5, 5.5, TColor.primary,\n-    isTouched: i == touchedIndex );\n-   case 6:\n-   return makeGroupData(6, 8.5, TColor.primary, \n-   isTouched: i == touchedIndex );\n- \n-\n-   default:\n-   return throw Error();\n-     \n-    \n- }\n-});\n-\n-BarChartGroupData makeGroupData(\n-  int x, double y, Color barColor, {\n-    bool isTouched = false,\n-    double width = 40,\n-    List<int> showTooltips = const []\n-  }\n-) {\n-\n-  return BarChartGroupData(x: x, barRods: [\n-\n- BarChartRodData(\n-  toY: isTouched ? y + 1 : y,\n-   color: barColor,\n-   width: width,\n-   borderRadius: const BorderRadius.only(\n-    topLeft: Radius.circular(5), \n-    topRight: Radius.circular(5),\n-    ),\n-    borderSide: isTouched ? const BorderSide(\n-      color: Colors.green):\n-       const BorderSide(\n-        color: Colors.green, width: 0),\n-\n-        backDrawRodData: BackgroundBarChartRodData(\n-          show: false\n-        ),\n-   ),\n-  ]);\n-\n-}\n-\n-\n-}*/\n-    \n\\ No newline at end of file\n"
                },
                {
                    "date": 1726119265219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,520 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:fl_chart/fl_chart.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/title_subtitle_cell.dart';\n+import 'package:taxi_driver/common_widget/today_summary_row.dart';\n+import 'package:taxi_driver/common_widget/weekly_summary_row.dart';\n+\n+class SummaryView extends StatefulWidget {\n+  const SummaryView({super.key});\n+\n+  @override\n+  State<SummaryView> createState() => _SummaryViewState();\n+}\n+\n+class _SummaryViewState extends State<SummaryView>\n+    with SingleTickerProviderStateMixin {\n+  TabController? controller;\n+  int touchedIndex = -1;\n+\n+  Map todayObj = {};\n+  Map weekObj = {};\n+\n+  List todayTripsArr = [];\n+\n+  List weeklyTripsArr = [];\n+  List weeklyChartArr = [];\n+\n+  @override\n+  void initState() {\n+    super.initState();\n+    controller = TabController(length: 2, vsync: this);\n+    apiList();\n+  }\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    var todayTotal = double.tryParse(todayObj[\"total_amt\"].toString()) ?? 0.0;\n+    var todayCashTotal =\n+        double.tryParse(todayObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var todayOnlineTotal =\n+        double.tryParse(todayObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    var weekTotal = double.tryParse(weekObj[\"total_amt\"].toString()) ?? 0.0;\n+    var weekCashTotal = double.tryParse(weekObj[\"cash_amt\"].toString()) ?? 0.0;\n+    var weekOnlineTotal =\n+        double.tryParse(weekObj[\"online_amt\"].toString()) ?? 0.0;\n+\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Summary\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      body: Column(\n+        children: [\n+          const SizedBox(\n+            height: 8,\n+          ),\n+          TabBar(\n+            controller: controller,\n+            indicatorColor: TColor.primary,\n+            indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n+            labelColor: TColor.primary,\n+            unselectedLabelColor: TColor.placeholder,\n+            labelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            unselectedLabelStyle:\n+                const TextStyle(fontSize: 15, fontWeight: FontWeight.w800),\n+            tabs: const [\n+              Tab(\n+                text: \"TODAY\",\n+              ),\n+              Tab(\n+                text: \"WEEKLY\",\n+              ),\n+            ],\n+          ),\n+          Container(\n+            width: double.maxFinite,\n+            height: 0.5,\n+            color: TColor.lightGray,\n+          ),\n+          Expanded(\n+            child: TabBarView(\n+              controller: controller,\n+              children: [\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 40,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                todayTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 30,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (todayObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${todayCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                \n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                physics: const NeverScrollableScrollPhysics(),\n+                                shrinkWrap: true,\n+                                padding: const EdgeInsets.symmetric(\n+                                    horizontal: 20, vertical: 10),\n+                                itemBuilder: (context, index) {\n+                                  var sObj = todayTripsArr[index] as Map? ?? {};\n+\n+                                  return TodaySummaryRow(\n+                                    sObj: sObj,\n+                                  );\n+                                },\n+                                separatorBuilder: (context, index) =>\n+                                    const Divider(\n+                                  indent: 40,\n+                                ),\n+                                itemCount: todayTripsArr.length,\n+                              ),\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+                Container(\n+                  color: TColor.lightWhite,\n+                  child: SingleChildScrollView(\n+                    child: Container(\n+                      color: Colors.white,\n+                      child: Column(\n+                        children: [\n+                          Container(\n+                            width: double.maxFinite,\n+                            height: 12,\n+                            color: TColor.lightWhite,\n+                          ),\n+                          const SizedBox(\n+                            height: 30,\n+                          ),\n+                          Text(\n+                            DateTime.now()\n+                                .stringFormat(format: \"EEE, dd MMM yy\"),\n+                            style: TextStyle(\n+                                color: TColor.secondaryText, fontSize: 16),\n+                          ),\n+                          const SizedBox(\n+                            height: 8,\n+                          ),\n+                          Row(\n+                            mainAxisSize: MainAxisSize.min,\n+                            children: [\n+                              Text(\n+                                \"\\$\",\n+                                style: TextStyle(\n+                                    color: TColor.primary,\n+                                    fontSize: 14,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                              Text(\n+                                weekTotal.toStringAsFixed(2),\n+                                style: TextStyle(\n+                                    color: TColor.primaryText,\n+                                    fontSize: 25,\n+                                    fontWeight: FontWeight.w800),\n+                              ),\n+                            ],\n+                          ),\n+                          const SizedBox(\n+                            height: 15,\n+                          ),\n+                          SizedBox(\n+                            height: context.width * 0.5,\n+                            child: BarChart(\n+                              BarChartData(\n+                                barTouchData: BarTouchData(\n+                                  touchTooltipData: BarTouchTooltipData(\n+\n+                                    tooltipHorizontalAlignment:\n+                                        FLHorizontalAlignment.right,\n+                                    tooltipMargin: 10,\n+                                    getTooltipItem:\n+                                        (group, groupIndex, rod, rodIndex) {\n+                                      var obj =\n+                                          weeklyChartArr[group.x] as Map? ?? {};\n+\n+                                      var weekDay = obj[\"date\"]\n+                                          .toString()\n+                                          .stringFormatToOtherFormat(\n+                                              newFormat: \"EEEE\");\n+\n+                                      return BarTooltipItem(\n+                                        '$weekDay\\n\\$${ ( double.tryParse( obj[\"total_amt\"].toString()) ?? 0.0 ).toStringAsFixed(2) }',\n+                                        const TextStyle(\n+                                            color: Colors.white,\n+                                            fontWeight: FontWeight.w500,\n+                                            fontSize: 16),\n+                                      );\n+                                    },\n+                                  ),\n+                                  touchCallback: (event, barTouchResponse) {\n+                                    setState(() {\n+                                      if (!event.isInterestedForInteractions ||\n+                                          barTouchResponse == null ||\n+                                          barTouchResponse.spot == null) {\n+                                        touchedIndex = -1;\n+                                        return;\n+                                      }\n+\n+                                      touchedIndex = barTouchResponse\n+                                          .spot!.touchedBarGroupIndex;\n+                                    });\n+                                  },\n+                                ),\n+                                titlesData: FlTitlesData(\n+                                  show: true,\n+                                  rightTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  topTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                  bottomTitles: AxisTitles(\n+                                    sideTitles: SideTitles(\n+                                        showTitles: true,\n+                                        getTitlesWidget: getTitles,\n+                                        reservedSize: 38),\n+                                  ),\n+                                  leftTitles: const AxisTitles(\n+                                    sideTitles: SideTitles(showTitles: false),\n+                                  ),\n+                                ),\n+                                borderData: FlBorderData(\n+                                  show: false,\n+                                ),\n+                                barGroups: showingGroups(),\n+                                gridData: const FlGridData(show: false),\n+                              ),\n+                            ),\n+                          ),\n+                          Column(\n+                            children: [\n+                              const SizedBox(\n+                                height: 15,\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 0.5,\n+                                color: TColor.lightGray,\n+                              ),\n+                              Row(\n+                                children: [\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          (weekObj[\"tips_count\"] as int? ?? 0)\n+                                              .toString(),\n+                                      subtitle: \"Trips\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekOnlineTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Online Trip\",\n+                                    ),\n+                                  ),\n+                                  Container(\n+                                    height: 80,\n+                                    width: 0.5,\n+                                    color: TColor.lightGray,\n+                                  ),\n+                                  Expanded(\n+                                    child: TitleSubtitleCell(\n+                                      title:\n+                                          \"\\$${weekCashTotal.toStringAsFixed(2)}\",\n+                                      subtitle: \"Cash Trip\",\n+                                    ),\n+                                  )\n+                                ],\n+                              ),\n+                              Container(\n+                                width: double.maxFinite,\n+                                height: 60,\n+                                color: TColor.lightWhite,\n+                                padding:\n+                                    const EdgeInsets.symmetric(horizontal: 20),\n+                                alignment: Alignment.centerLeft,\n+                                child: Text(\n+                                  \"TRIPS\",\n+                                  style: TextStyle(\n+                                      color: TColor.primaryText,\n+                                      fontSize: 15,\n+                                      fontWeight: FontWeight.w800),\n+                                ),\n+                              ),\n+                              ListView.separated(\n+                                  physics: const NeverScrollableScrollPhysics(),\n+                                  shrinkWrap: true,\n+                                  padding: const EdgeInsets.symmetric(\n+                                      horizontal: 20, vertical: 10),\n+                                  itemBuilder: (context, index) {\n+                                    var sObj =\n+                                        weeklyChartArr[index] as Map? ?? {};\n+\n+                                    return WeeklySummaryRow(\n+                                      sObj: sObj,\n+                                    );\n+                                  },\n+                                  separatorBuilder: (context, index) =>\n+                                      const Divider(\n+                                        indent: 40,\n+                                      ),\n+                                  itemCount: weeklyChartArr.length)\n+                            ],\n+                          )\n+                        ],\n+                      ),\n+                    ),\n+                  ),\n+                ),\n+              ],\n+            ),\n+          )\n+        ],\n+      ),\n+    );\n+  }\n+\n+  Widget getTitles(double value, TitleMeta meta) {\n+    var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n+\n+    var obj = weeklyChartArr[value.toInt()] as Map? ?? {};\n+\n+    return SideTitleWidget(\n+        space: 16,\n+        axisSide: meta.axisSide,\n+        child: Text(\n+          obj[\"date\"].toString().stringFormatToOtherFormat(newFormat: \"EEE\"),\n+          style: style,\n+        ));\n+  }\n+\n+  List<BarChartGroupData> showingGroups() => weeklyChartArr.map((e) {\n+        var i = weeklyChartArr.indexOf(e);\n+        return makeGroupData(i,\n+            double.tryParse(e[\"total_amt\"].toString()) ?? 0.0, TColor.primary,\n+            isTouched: i == touchedIndex);\n+      }).toList();\n+\n+  BarChartGroupData makeGroupData(int x, double y, Color barColor,\n+      {bool isTouched = false,\n+      double width = 40,\n+      List<int> showTooltips = const []}) {\n+    return BarChartGroupData(x: x, barRods: [\n+      BarChartRodData(\n+          toY: isTouched ? y + 1 : y,\n+          color: barColor,\n+          width: width,\n+          borderRadius: const BorderRadius.only(\n+            topLeft: Radius.circular(5),\n+            topRight: Radius.circular(5),\n+          ),\n+          borderSide: isTouched\n+              ? const BorderSide(color: Colors.green)\n+              : const BorderSide(color: Colors.green, width: 0),\n+          backDrawRodData: BackgroundBarChartRodData(show: false))\n+    ]);\n+  }\n+\n+  //TODO: ApiCalling\n+  void apiList() {\n+    Globs.showHUD();\n+    ServiceCall.post(\n+      {},\n+      SVKey.svDriverSummary,\n+      isTokenApi: true,\n+      withSuccess: (responseObj) async {\n+        Globs.hideHUD();\n+\n+        if (responseObj[KKey.status] == \"1\") {\n+          var payloadObj = responseObj[KKey.payload] as Map? ?? {};\n+          todayObj = payloadObj[\"today\"] as Map? ?? {};\n+          weekObj = payloadObj[\"week\"] as Map? ?? {};\n+\n+          todayTripsArr = todayObj[\"list\"] as List? ?? [];\n+          weeklyTripsArr = weekObj[\"list\"] as List? ?? [];\n+          weeklyChartArr = (weekObj[\"chart\"] as List? ?? []).reversed.toList();\n+\n+          if (mounted) {\n+            setState(() {});\n+          }\n+        } else {\n+          mdShowAlert(\n+              \"Error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+        }\n+      },\n+      failure: (err) async {\n+        Globs.hideHUD();\n+        debugPrint(err.toString());\n+      },\n+    );\n+  }\n+}\n"
                },
                {
                    "date": 1726119281386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n                                 height: 60,\n                                 color: TColor.lightWhite,\n                                 padding:\n                                     const EdgeInsets.symmetric(horizontal: 20),\n-                                \n+                                alignment: Alignment.centerLeft,\n                                 child: Text(\n                                   \"TRIPS\",\n                                   style: TextStyle(\n                                       color: TColor.primaryText,\n"
                }
            ],
            "date": 1720164881048,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common_widget/price_list_view.dart';\nimport 'package:fl_chart/fl_chart.dart';\n\n\nclass SummaryView extends StatefulWidget {\n  const SummaryView({super.key});\n\n\n  @override\n  State<SummaryView> createState() => _SummaryViewState();\n\n}\nclass _SummaryViewState extends State<SummaryView> with SingleTickerProviderStateMixin {\n\n  TabController? controller;\n  int touchedIndex = -1;\n\n   Map todayObj = {\n    \"trips\": \"15\",\n    \"hrs\": \"8:30\",\n    \"cash_trip\": \"\\$22.48\",\n    \"trip_frars\": \"\\$40.25\",\n    \"fee\": \"\\$20.00\",\n    \"tax\": \"\\$400.50\",\n    \"tolls\": \"\\$400.50\",\n    \"surge\": \"\\$40.25\",\n    \"discount\": \"\\$20.00\",\n    \"total\": \"\\$460.75\"\n  };\n\n  Map weekObj = {\n    \"trips\": \"45\",\n    \"hrs\": \"38:30\",\n    \"cash_trip\": \"\\$99.48\",\n    \"trip_frars\": \"\\$40.25\",\n    \"fee\": \"\\$20.00\",\n    \"tax\": \"\\$400.50\",\n    \"tolls\": \"\\$400.50\",\n    \"surge\": \"\\$40.25\",\n    \"discount\": \"\\$20.00\",\n    \"total\": \"\\$460.75\"\n  };\n\n  @override\n  void initState() {\n    // TODO: implement initState\n    super.initState();\n    controller = TabController(length: 2, vsync: this);\n  }\n\n\n  @override\nWidget build(BuildContext context) {\n\n  return Scaffold(\n    appBar: AppBar(\n        elevation: 0.5,\n        backgroundColor: Colors.white,\n        leading: IconButton(\n        onPressed: (){\n          context.pop();\n        }, \n        icon: Image.asset(\n          \"assets/img/back.png\", \n        width: 25, \n        height: 25,\n        ),\n\n        ),\n        centerTitle: true,\n        title: Text(\n          \"Earning\", \n          style: TextStyle(\n            color: TColor.primaryText, \n            fontSize: 18, \n            fontWeight: \n            FontWeight.w800,\n            ),\n            ),\n        ),\n\n        body: Column(\n          children: [\n            const SizedBox(\n              height: 8,),\n\n              TabBar(\n                controller: controller,\n                indicatorColor: TColor.primary,\n                indicatorPadding: const EdgeInsets.symmetric(horizontal: 20),\n                labelColor: TColor.primary,\n                unselectedLabelColor: TColor.placeholder,\n                labelStyle: const TextStyle(\n                  fontSize: 15,\n                  fontWeight: FontWeight.w800\n                ),\n\n                unselectedLabelStyle: const  TextStyle(\n                  fontSize: 15,\n                  fontWeight: FontWeight.w800\n                ),\n                \n                tabs: [\n\n                Tab(\n                  text: \"TODAY\",),\n                Tab(\n                  text: \"WEEKLY\",),\n              ],\n              ),\n\n              Container(\n                width: double.maxFinite, \n                height: 0.5, \n                color: TColor.lightGray,\n                ),\n\n              Expanded(\n                child: TabBarView(\n                controller: controller,\n                children: [\n                Container(\n                  color: TColor.lightWhite,\n                  child: SingleChildScrollView(\n                    child: Container(\n                      color: Colors.white,\n                      child: Column(\n                        children: [\n                          const SizedBox(height: 30,),\n                      \n                          Text(\n                            \"Mon, 28 Sep'23 \", \n                            style:   TextStyle(\n                            color: TColor.secondaryText,\n                            fontSize: 16,   \n                                ),),\n                      \n                                       const SizedBox(height: 8,),\n                      \n                                       Row(\n                                        mainAxisSize: MainAxisSize.min,\n                                        children: [\n                       Text(\n                            \"\\$\", \n                            style:   TextStyle(\n                            color: TColor.primary, \n                            fontSize: 14,\n                            fontWeight: FontWeight.w800,   \n                              ),),\n                      \n                               Text(\n                            \"157.75\", \n                            style:   TextStyle(\n                            color: TColor.primaryText, \n                            fontSize: 25,\n                            fontWeight: FontWeight.w800,   \n                              ),),\n                      \n                                        ],\n                                       ),\n\n                             PriceListView(dObj: todayObj),\n                      \n                        ],\n                      ),\n                    ),\n                  ),\n                ),\n                 Container(\n                  color: TColor.lightWhite,\n                  child: SingleChildScrollView(\n                    child: Container(\n                      color: Colors.white,\n                      child: Column(\n                        children: [\n                          const SizedBox(height: 30,),\n                      \n                          Text(\n                            \"Mon, 28 Sep'23 \", \n                            style:   TextStyle(\n                            color: TColor.secondaryText,\n                            fontSize: 16,   \n                                ),),\n                      \n                                       const SizedBox(height: 8,),\n                      \n                                       Row(\n                                        mainAxisSize: MainAxisSize.min,\n                                        children: [\n                       Text(\n                            \"\\$\", \n                            style:   TextStyle(\n                            color: TColor.primary, \n                            fontSize: 14,\n                            fontWeight: FontWeight.w800,   \n                              ),),\n                      \n                               Text(\n                            \"157.75\", \n                            style:   TextStyle(\n                            color: TColor.primaryText, \n                            fontSize: 25,\n                            fontWeight: FontWeight.w800,   \n                              ),),\n                      \n                                        ],\n                                       ),\n\n                                       SizedBox(\n                                        height: context.width * 0.5,\n                                        child: BarChart(BarChartData(\n                                          barTouchData: BarTouchData(\n                                            touchTooltipData: BarTouchTooltipData(\n                                              tooltipBgColor: Colors.grey,\n                                              tooltipHorizontalAlignment: FLHorizontalAlignment.right,\n                                              tooltipMargin: 10,\n                                              getTooltipItem: (group, groupIndex, rod, rodIndex) {\n                                                String weekDay;\n\n                                                switch (group.x) {\n                                                  case 0:\n                                                  weekDay = \"Sunday\";\n                                                    \n                                                    break;\n\n                                                    case 1:\n                                                  weekDay = \"Monday\";\n                                                    \n                                                    break;\n                                                    case 2:\n                                                  weekDay = \"Tuesday\";\n                                                    \n                                                    break;\n                                                    case 3:\n                                                  weekDay = \"Wednesday\";\n                                                    \n                                                    break;\n                                                    case 4:\n                                                  weekDay = \"Thursday\";\n                                                    \n                                                    break;\n                                                    case 5:\n                                                  weekDay = \"Friday\";\n                                                    \n                                                    break;\n                                                    case 6:\n                                                  weekDay = \"Saturday\";\n                                                    \n                                                   \n                                                    \n                                                    break;\n                                                  default:\n                                                  throw Error();\n                                                }\n                                                return BarTooltipItem('$weekDay\\n', const TextStyle(\n                                                  color: Colors.white,\n                                                  fontWeight: FontWeight.w500,\n                                                  fontSize: 16\n                                                  ),);\n                                              },\n                                            ),\n                                            touchCallback: (event, barTouchResponse) {\n\n                                              setState(() {\n                                                if (!event.isInterestedForInteractions || \n                                                barTouchResponse == null || barTouchResponse.spot\n                                                == null) {\n                                                  touchedIndex = -1;\n                                                  return;\n                                                }\n                                                touchedIndex = barTouchResponse.spot!.\n                                                touchedBarGroupIndex;\n                                              });\n                                              \n                                            },\n                                          ),\n\n                                          titlesData: FlTitlesData(\n                                            show: true,\n                                            rightTitles: const AxisTitles(\n                                              sideTitles: SideTitles(showTitles: false),\n                                            ),\n                                            topTitles: const AxisTitles(\n                                              sideTitles: SideTitles(showTitles: false),\n                                          ),\n                                          bottomTitles: AxisTitles(\n                                              sideTitles: SideTitles(showTitles: true, getTitlesWidget:\n                                               getTitles, \n                                               reservedSize: 38),\n                                        ),\n                                        leftTitles: const AxisTitles(\n                                              sideTitles: SideTitles(showTitles: false),\n                                        ),\n\n                                        ),\n\n                                        borderData: FlBorderData(\n                                          show: false,\n                                        ),\n                                          barGroups: showingGroups(),\n                                          gridData: const FlGridData(show: false),\n                                       ),\n                                        ),\n                                       ),\n\n                             PriceListView(dObj: weekObj),\n                      \n                        ],\n                      ),\n                    ),\n                  ),\n                ),\n                \n                ],\n              ),),\n          ],\n        ),\n  );\n\n}\n\nWidget getTitles(double value, TitleMeta meta) {\n\n  var style = TextStyle(color: TColor.secondaryText, fontSize: 12);\n\n  Widget text;\n  switch (value.toInt()) {\n    case 0:\n    text = Text(\n      'S', \n      style: style,\n      );\n      \n      break;\n      case 1:\n    text = Text(\n      'M', \n      style: style,\n      );\n      \n      break;\n      case 2:\n    text = Text(\n      'T', \n      style: style,\n      );\n      \n      break;\n      case 3:\n    text = Text(\n      'W', \n      style: style,\n      );\n      \n      break;\n      case 4:\n    text = Text(\n      'T', \n      style: style,\n      );\n      \n      break;\n      case 5:\n    text = Text(\n      'F', \n      style: style,\n      );\n      \n      break;\n      case 6:\n    text = Text(\n      'S', \n      style: style,\n      );\n      \n      break;\n    default:\n     text = Text(\n      '', \n      style: style,\n      );\n      \n      break;\n  }\n\n  return SideTitleWidget(child: text, space: 16, axisSide: meta.axisSide);\n\n}\n\nList<BarChartGroupData> showingGroups() => List.generate(7, (i) {\n switch (i) {\n   case 0:\n   return makeGroupData(0, 5, TColor.primary,\n    isTouched: i == touchedIndex );\n   case 1:\n   return makeGroupData(1, 10.5, TColor.primary, \n   isTouched: i == touchedIndex );\n   case 2:\n   return makeGroupData(2, 5, TColor.primary, \n   isTouched: i == touchedIndex );\n   case 3:\n   return makeGroupData(3, 7.5, TColor.primary,\n    isTouched: i == touchedIndex );\n   case 4:\n   return makeGroupData(4, 15, TColor.primary, \n   isTouched: i == touchedIndex );\n   case 5:\n   return makeGroupData(5, 5.5, TColor.primary,\n    isTouched: i == touchedIndex );\n   case 6:\n   return makeGroupData(6, 8.5, TColor.primary, \n   isTouched: i == touchedIndex );\n \n\n   default:\n   return throw Error();\n     \n    \n }\n});\n\nBarChartGroupData makeGroupData(\n  int x, double y, Color barColor, {\n    bool isTouched = false,\n    double width = 40,\n    List<int> showTooltips = const []\n  }\n) {\n\n  return BarChartGroupData(x: x, barRods: [\n\n BarChartRodData(\n  toY: isTouched ? y + 1 : y,\n   color: barColor,\n   width: width,\n   borderRadius: const BorderRadius.only(\n    topLeft: Radius.circular(5), \n    topRight: Radius.circular(5),\n    ),\n    borderSide: isTouched ? const BorderSide(\n      color: Colors.green):\n       const BorderSide(\n        color: Colors.green, width: 0),\n\n        backDrawRodData: BackgroundBarChartRodData(\n          show: false\n        ),\n   ),\n  ]);\n\n}\n\n\n}\n    "
        }
    ]
}