{
    "sourceFile": "lib/view/menu/change_password_view.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1722771900040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724060001963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,4 +174,184 @@\n       mdShowAlert(\"error\", err.toString(), () {});\n     });\n   }\n }\n+\n+\n+\n+/*import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class ChangePasswordView extends StatefulWidget {\n+  const ChangePasswordView({super.key});\n+\n+  @override\n+  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n+}\n+\n+class _ChangePasswordViewState extends State<ChangePasswordView> {\n+  TextEditingController txtCurrentPassword = TextEditingController();\n+  TextEditingController txtNewPassword = TextEditingController();\n+  TextEditingController txtConfirmPassword = TextEditingController();\n+\n+  bool showCurrentPassword = true;\n+  bool showNewPassword = true;\n+  bool showConfirmPassword = true;\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Change Password\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      backgroundColor: Colors.white,\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n+          child: Column(\n+            children: [\n+              LineTextField(\n+                title: \"Password\",\n+                hintText: \"******\",\n+                controller: txtCurrentPassword,\n+                obscureText: showCurrentPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showCurrentPassword = !showCurrentPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"New Password\",\n+                hintText: \"******\",\n+                controller: txtNewPassword,\n+                obscureText: showNewPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showNewPassword = !showNewPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Confirm Password\",\n+                hintText: \"******\",\n+                controller: txtConfirmPassword,\n+                obscureText: showConfirmPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showConfirmPassword = !showConfirmPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 35,\n+              ),\n+              RoundButton(\n+                  title: \"Change\",\n+                  onPressed: () {\n+                    actionSubmit();\n+                  })\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+\n+  void actionSubmit() {\n+    if (txtCurrentPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter current password\", () {});\n+      return;\n+    }\n+    if (txtNewPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter new password\", () {});\n+      return;\n+    }\n+\n+    if (txtNewPassword.text != txtConfirmPassword.text) {\n+      mdShowAlert(\"error\", \"Password not match\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    apiChangePassword({\n+      \"old_password\": txtCurrentPassword.text,\n+      \"new_password\": txtNewPassword.text\n+    });\n+  }\n+\n+  //TODO: ApiCalling\n+\n+  void apiChangePassword(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+\n+    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\n+            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n+            () {\n+          context.pop();\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"error\", err.toString(), () {});\n+    });\n+  }\n+}*/\n"
                },
                {
                    "date": 1725472527582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class ChangePasswordView extends StatefulWidget {\n+  const ChangePasswordView({super.key});\n+\n+  @override\n+  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n+}\n+\n+class _ChangePasswordViewState extends State<ChangePasswordView> {\n+  TextEditingController txtCurrentPassword = TextEditingController();\n+  TextEditingController txtNewPassword = TextEditingController();\n+  TextEditingController txtConfirmPassword = TextEditingController();\n+\n+  bool showCurrentPassword = true;\n+  bool showNewPassword = true;\n+  bool showConfirmPassword = true;\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Change Password\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      backgroundColor: Colors.white,\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n+          child: Column(\n+            children: [\n+              LineTextField(\n+                title: \"Password\",\n+                hintText: \"******\",\n+                controller: txtCurrentPassword,\n+                obscureText: showCurrentPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showCurrentPassword = !showCurrentPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"New Password\",\n+                hintText: \"******\",\n+                controller: txtNewPassword,\n+                obscureText: showNewPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showNewPassword = !showNewPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Confirm Password\",\n+                hintText: \"******\",\n+                controller: txtConfirmPassword,\n+                obscureText: showConfirmPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showConfirmPassword = !showConfirmPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 35,\n+              ),\n+              RoundButton(\n+                  title: \"Change\",\n+                  onPressed: () {\n+                    actionSubmit();\n+                  })\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+\n+  void actionSubmit() {\n+    if (txtCurrentPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter current password\", () {});\n+      return;\n+    }\n+    if (txtNewPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter new password\", () {});\n+      return;\n+    }\n+\n+    if (txtNewPassword.text != txtConfirmPassword.text) {\n+      mdShowAlert(\"error\", \"Password not match\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    apiChangePassword({\n+      \"old_password\": txtCurrentPassword.text,\n+      \"new_password\": txtNewPassword.text\n+    });\n+  }\n+\n+  //TODO: ApiCalling\n+\n+  void apiChangePassword(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+\n+    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\n+            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n+            () {\n+          context.pop();\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"error\", err.toString(), () {});\n+    });\n+  }\n+}\n+\n"
                },
                {
                    "date": 1725472587855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import 'package:flutter/material.dart';\n+import 'package:taxi_driver/common/color_extension.dart';\n+import 'package:taxi_driver/common/common_extension.dart';\n+import 'package:taxi_driver/common/globs.dart';\n+import 'package:taxi_driver/common/service_call.dart';\n+import 'package:taxi_driver/common_widget/line_text_field.dart';\n+import 'package:taxi_driver/common_widget/round_button.dart';\n+\n+class ChangePasswordView extends StatefulWidget {\n+  const ChangePasswordView({super.key});\n+\n+  @override\n+  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n+}\n+\n+class _ChangePasswordViewState extends State<ChangePasswordView> {\n+  TextEditingController txtCurrentPassword = TextEditingController();\n+  TextEditingController txtNewPassword = TextEditingController();\n+  TextEditingController txtConfirmPassword = TextEditingController();\n+\n+  bool showCurrentPassword = true;\n+  bool showNewPassword = true;\n+  bool showConfirmPassword = true;\n+\n+  @override\n+  Widget build(BuildContext context) {\n+    return Scaffold(\n+      appBar: AppBar(\n+        elevation: 0.5,\n+        backgroundColor: Colors.white,\n+        leading: IconButton(\n+          onPressed: () {\n+            context.pop();\n+          },\n+          icon: Image.asset(\n+            \"assets/img/back.png\",\n+            width: 25,\n+            height: 25,\n+          ),\n+        ),\n+        centerTitle: true,\n+        title: Text(\n+          \"Change Password\",\n+          style: TextStyle(\n+            color: TColor.primaryText,\n+            fontSize: 18,\n+            fontWeight: FontWeight.w800,\n+          ),\n+        ),\n+      ),\n+      backgroundColor: Colors.white,\n+      body: SingleChildScrollView(\n+        child: Padding(\n+          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n+          child: Column(\n+            children: [\n+              LineTextField(\n+                title: \"Password\",\n+                hintText: \"******\",\n+                controller: txtCurrentPassword,\n+                obscureText: showCurrentPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showCurrentPassword = !showCurrentPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"New Password\",\n+                hintText: \"******\",\n+                controller: txtNewPassword,\n+                obscureText: showNewPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showNewPassword = !showNewPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 15,\n+              ),\n+              LineTextField(\n+                title: \"Confirm Password\",\n+                hintText: \"******\",\n+                controller: txtConfirmPassword,\n+                obscureText: showConfirmPassword,\n+                right: IconButton(\n+                    onPressed: () {\n+                      setState(() {\n+                        showConfirmPassword = !showConfirmPassword;\n+                      });\n+                    },\n+                    icon: Image.asset(\n+                      \"assets/img/password_show.png\",\n+                      width: 25,\n+                      height: 25,\n+                    )),\n+              ),\n+              const SizedBox(\n+                height: 35,\n+              ),\n+              RoundButton(\n+                  title: \"Change\",\n+                  onPressed: () {\n+                    actionSubmit();\n+                  })\n+            ],\n+          ),\n+        ),\n+      ),\n+    );\n+  }\n+\n+  //TODO: Action\n+\n+  void actionSubmit() {\n+    if (txtCurrentPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter current password\", () {});\n+      return;\n+    }\n+    if (txtNewPassword.text.isEmpty) {\n+      mdShowAlert(\"error\", \"Please enter new password\", () {});\n+      return;\n+    }\n+\n+    if (txtNewPassword.text != txtConfirmPassword.text) {\n+      mdShowAlert(\"error\", \"Password not match\", () {});\n+      return;\n+    }\n+\n+    endEditing();\n+\n+    apiChangePassword({\n+      \"old_password\": txtCurrentPassword.text,\n+      \"new_password\": txtNewPassword.text\n+    });\n+  }\n+\n+  //TODO: ApiCalling\n+\n+  void apiChangePassword(Map<String, dynamic> parameter) {\n+    Globs.showHUD();\n+\n+    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n+        withSuccess: (responseObj) async {\n+      Globs.hideHUD();\n+      if (responseObj[KKey.status] == \"1\") {\n+        mdShowAlert(\n+            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n+            () {\n+          context.pop();\n+        });\n+      } else {\n+        mdShowAlert(\n+            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n+      }\n+    }, failure: (err) async {\n+      Globs.hideHUD();\n+      mdShowAlert(\"error\", err.toString(), () {});\n+    });\n+  }\n+}\n+\n"
                },
                {
                    "date": 1725859829031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,540 +174,4 @@\n       mdShowAlert(\"error\", err.toString(), () {});\n     });\n   }\n }\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class ChangePasswordView extends StatefulWidget {\n-  const ChangePasswordView({super.key});\n-\n-  @override\n-  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n-}\n-\n-class _ChangePasswordViewState extends State<ChangePasswordView> {\n-  TextEditingController txtCurrentPassword = TextEditingController();\n-  TextEditingController txtNewPassword = TextEditingController();\n-  TextEditingController txtConfirmPassword = TextEditingController();\n-\n-  bool showCurrentPassword = true;\n-  bool showNewPassword = true;\n-  bool showConfirmPassword = true;\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Change Password\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      backgroundColor: Colors.white,\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n-          child: Column(\n-            children: [\n-              LineTextField(\n-                title: \"Password\",\n-                hintText: \"******\",\n-                controller: txtCurrentPassword,\n-                obscureText: showCurrentPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showCurrentPassword = !showCurrentPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"New Password\",\n-                hintText: \"******\",\n-                controller: txtNewPassword,\n-                obscureText: showNewPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showNewPassword = !showNewPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Confirm Password\",\n-                hintText: \"******\",\n-                controller: txtConfirmPassword,\n-                obscureText: showConfirmPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showConfirmPassword = !showConfirmPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 35,\n-              ),\n-              RoundButton(\n-                  title: \"Change\",\n-                  onPressed: () {\n-                    actionSubmit();\n-                  })\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-\n-  void actionSubmit() {\n-    if (txtCurrentPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter current password\", () {});\n-      return;\n-    }\n-    if (txtNewPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter new password\", () {});\n-      return;\n-    }\n-\n-    if (txtNewPassword.text != txtConfirmPassword.text) {\n-      mdShowAlert(\"error\", \"Password not match\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    apiChangePassword({\n-      \"old_password\": txtCurrentPassword.text,\n-      \"new_password\": txtNewPassword.text\n-    });\n-  }\n-\n-  //TODO: ApiCalling\n-\n-  void apiChangePassword(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-\n-    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        mdShowAlert(\n-            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n-            () {\n-          context.pop();\n-        });\n-      } else {\n-        mdShowAlert(\n-            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"error\", err.toString(), () {});\n-    });\n-  }\n-}\n-\n-import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class ChangePasswordView extends StatefulWidget {\n-  const ChangePasswordView({super.key});\n-\n-  @override\n-  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n-}\n-\n-class _ChangePasswordViewState extends State<ChangePasswordView> {\n-  TextEditingController txtCurrentPassword = TextEditingController();\n-  TextEditingController txtNewPassword = TextEditingController();\n-  TextEditingController txtConfirmPassword = TextEditingController();\n-\n-  bool showCurrentPassword = true;\n-  bool showNewPassword = true;\n-  bool showConfirmPassword = true;\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Change Password\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      backgroundColor: Colors.white,\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n-          child: Column(\n-            children: [\n-              LineTextField(\n-                title: \"Password\",\n-                hintText: \"******\",\n-                controller: txtCurrentPassword,\n-                obscureText: showCurrentPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showCurrentPassword = !showCurrentPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"New Password\",\n-                hintText: \"******\",\n-                controller: txtNewPassword,\n-                obscureText: showNewPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showNewPassword = !showNewPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Confirm Password\",\n-                hintText: \"******\",\n-                controller: txtConfirmPassword,\n-                obscureText: showConfirmPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showConfirmPassword = !showConfirmPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 35,\n-              ),\n-              RoundButton(\n-                  title: \"Change\",\n-                  onPressed: () {\n-                    actionSubmit();\n-                  })\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-\n-  void actionSubmit() {\n-    if (txtCurrentPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter current password\", () {});\n-      return;\n-    }\n-    if (txtNewPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter new password\", () {});\n-      return;\n-    }\n-\n-    if (txtNewPassword.text != txtConfirmPassword.text) {\n-      mdShowAlert(\"error\", \"Password not match\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    apiChangePassword({\n-      \"old_password\": txtCurrentPassword.text,\n-      \"new_password\": txtNewPassword.text\n-    });\n-  }\n-\n-  //TODO: ApiCalling\n-\n-  void apiChangePassword(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-\n-    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        mdShowAlert(\n-            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n-            () {\n-          context.pop();\n-        });\n-      } else {\n-        mdShowAlert(\n-            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"error\", err.toString(), () {});\n-    });\n-  }\n-}\n-\n-\n-\n-/*import 'package:flutter/material.dart';\n-import 'package:taxi_driver/common/color_extension.dart';\n-import 'package:taxi_driver/common/common_extension.dart';\n-import 'package:taxi_driver/common/globs.dart';\n-import 'package:taxi_driver/common/service_call.dart';\n-import 'package:taxi_driver/common_widget/line_text_field.dart';\n-import 'package:taxi_driver/common_widget/round_button.dart';\n-\n-class ChangePasswordView extends StatefulWidget {\n-  const ChangePasswordView({super.key});\n-\n-  @override\n-  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n-}\n-\n-class _ChangePasswordViewState extends State<ChangePasswordView> {\n-  TextEditingController txtCurrentPassword = TextEditingController();\n-  TextEditingController txtNewPassword = TextEditingController();\n-  TextEditingController txtConfirmPassword = TextEditingController();\n-\n-  bool showCurrentPassword = true;\n-  bool showNewPassword = true;\n-  bool showConfirmPassword = true;\n-\n-  @override\n-  Widget build(BuildContext context) {\n-    return Scaffold(\n-      appBar: AppBar(\n-        elevation: 0.5,\n-        backgroundColor: Colors.white,\n-        leading: IconButton(\n-          onPressed: () {\n-            context.pop();\n-          },\n-          icon: Image.asset(\n-            \"assets/img/back.png\",\n-            width: 25,\n-            height: 25,\n-          ),\n-        ),\n-        centerTitle: true,\n-        title: Text(\n-          \"Change Password\",\n-          style: TextStyle(\n-            color: TColor.primaryText,\n-            fontSize: 18,\n-            fontWeight: FontWeight.w800,\n-          ),\n-        ),\n-      ),\n-      backgroundColor: Colors.white,\n-      body: SingleChildScrollView(\n-        child: Padding(\n-          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n-          child: Column(\n-            children: [\n-              LineTextField(\n-                title: \"Password\",\n-                hintText: \"******\",\n-                controller: txtCurrentPassword,\n-                obscureText: showCurrentPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showCurrentPassword = !showCurrentPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"New Password\",\n-                hintText: \"******\",\n-                controller: txtNewPassword,\n-                obscureText: showNewPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showNewPassword = !showNewPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 15,\n-              ),\n-              LineTextField(\n-                title: \"Confirm Password\",\n-                hintText: \"******\",\n-                controller: txtConfirmPassword,\n-                obscureText: showConfirmPassword,\n-                right: IconButton(\n-                    onPressed: () {\n-                      setState(() {\n-                        showConfirmPassword = !showConfirmPassword;\n-                      });\n-                    },\n-                    icon: Image.asset(\n-                      \"assets/img/password_show.png\",\n-                      width: 25,\n-                      height: 25,\n-                    )),\n-              ),\n-              const SizedBox(\n-                height: 35,\n-              ),\n-              RoundButton(\n-                  title: \"Change\",\n-                  onPressed: () {\n-                    actionSubmit();\n-                  })\n-            ],\n-          ),\n-        ),\n-      ),\n-    );\n-  }\n-\n-  //TODO: Action\n-\n-  void actionSubmit() {\n-    if (txtCurrentPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter current password\", () {});\n-      return;\n-    }\n-    if (txtNewPassword.text.isEmpty) {\n-      mdShowAlert(\"error\", \"Please enter new password\", () {});\n-      return;\n-    }\n-\n-    if (txtNewPassword.text != txtConfirmPassword.text) {\n-      mdShowAlert(\"error\", \"Password not match\", () {});\n-      return;\n-    }\n-\n-    endEditing();\n-\n-    apiChangePassword({\n-      \"old_password\": txtCurrentPassword.text,\n-      \"new_password\": txtNewPassword.text\n-    });\n-  }\n-\n-  //TODO: ApiCalling\n-\n-  void apiChangePassword(Map<String, dynamic> parameter) {\n-    Globs.showHUD();\n-\n-    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n-        withSuccess: (responseObj) async {\n-      Globs.hideHUD();\n-      if (responseObj[KKey.status] == \"1\") {\n-        mdShowAlert(\n-            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n-            () {\n-          context.pop();\n-        });\n-      } else {\n-        mdShowAlert(\n-            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n-      }\n-    }, failure: (err) async {\n-      Globs.hideHUD();\n-      mdShowAlert(\"error\", err.toString(), () {});\n-    });\n-  }\n-}*/\n"
                }
            ],
            "date": 1722771900040,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:taxi_driver/common/color_extension.dart';\nimport 'package:taxi_driver/common/common_extension.dart';\nimport 'package:taxi_driver/common/globs.dart';\nimport 'package:taxi_driver/common/service_call.dart';\nimport 'package:taxi_driver/common_widget/line_text_field.dart';\nimport 'package:taxi_driver/common_widget/round_button.dart';\n\nclass ChangePasswordView extends StatefulWidget {\n  const ChangePasswordView({super.key});\n\n  @override\n  State<ChangePasswordView> createState() => _ChangePasswordViewState();\n}\n\nclass _ChangePasswordViewState extends State<ChangePasswordView> {\n  TextEditingController txtCurrentPassword = TextEditingController();\n  TextEditingController txtNewPassword = TextEditingController();\n  TextEditingController txtConfirmPassword = TextEditingController();\n\n  bool showCurrentPassword = true;\n  bool showNewPassword = true;\n  bool showConfirmPassword = true;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        elevation: 0.5,\n        backgroundColor: Colors.white,\n        leading: IconButton(\n          onPressed: () {\n            context.pop();\n          },\n          icon: Image.asset(\n            \"assets/img/back.png\",\n            width: 25,\n            height: 25,\n          ),\n        ),\n        centerTitle: true,\n        title: Text(\n          \"Change Password\",\n          style: TextStyle(\n            color: TColor.primaryText,\n            fontSize: 18,\n            fontWeight: FontWeight.w800,\n          ),\n        ),\n      ),\n      backgroundColor: Colors.white,\n      body: SingleChildScrollView(\n        child: Padding(\n          padding: const EdgeInsets.symmetric(vertical: 25, horizontal: 20),\n          child: Column(\n            children: [\n              LineTextField(\n                title: \"Password\",\n                hintText: \"******\",\n                controller: txtCurrentPassword,\n                obscureText: showCurrentPassword,\n                right: IconButton(\n                    onPressed: () {\n                      setState(() {\n                        showCurrentPassword = !showCurrentPassword;\n                      });\n                    },\n                    icon: Image.asset(\n                      \"assets/img/password_show.png\",\n                      width: 25,\n                      height: 25,\n                    )),\n              ),\n              const SizedBox(\n                height: 15,\n              ),\n              LineTextField(\n                title: \"New Password\",\n                hintText: \"******\",\n                controller: txtNewPassword,\n                obscureText: showNewPassword,\n                right: IconButton(\n                    onPressed: () {\n                      setState(() {\n                        showNewPassword = !showNewPassword;\n                      });\n                    },\n                    icon: Image.asset(\n                      \"assets/img/password_show.png\",\n                      width: 25,\n                      height: 25,\n                    )),\n              ),\n              const SizedBox(\n                height: 15,\n              ),\n              LineTextField(\n                title: \"Confirm Password\",\n                hintText: \"******\",\n                controller: txtConfirmPassword,\n                obscureText: showConfirmPassword,\n                right: IconButton(\n                    onPressed: () {\n                      setState(() {\n                        showConfirmPassword = !showConfirmPassword;\n                      });\n                    },\n                    icon: Image.asset(\n                      \"assets/img/password_show.png\",\n                      width: 25,\n                      height: 25,\n                    )),\n              ),\n              const SizedBox(\n                height: 35,\n              ),\n              RoundButton(\n                  title: \"Change\",\n                  onPressed: () {\n                    actionSubmit();\n                  })\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  //TODO: Action\n\n  void actionSubmit() {\n    if (txtCurrentPassword.text.isEmpty) {\n      mdShowAlert(\"error\", \"Please enter current password\", () {});\n      return;\n    }\n    if (txtNewPassword.text.isEmpty) {\n      mdShowAlert(\"error\", \"Please enter new password\", () {});\n      return;\n    }\n\n    if (txtNewPassword.text != txtConfirmPassword.text) {\n      mdShowAlert(\"error\", \"Password not match\", () {});\n      return;\n    }\n\n    endEditing();\n\n    apiChangePassword({\n      \"old_password\": txtCurrentPassword.text,\n      \"new_password\": txtNewPassword.text\n    });\n  }\n\n  //TODO: ApiCalling\n\n  void apiChangePassword(Map<String, dynamic> parameter) {\n    Globs.showHUD();\n\n    ServiceCall.post(parameter, SVKey.svChangePassword, isTokenApi: true,\n        withSuccess: (responseObj) async {\n      Globs.hideHUD();\n      if (responseObj[KKey.status] == \"1\") {\n        mdShowAlert(\n            Globs.appName, responseObj[KKey.message] as String? ?? MSG.success,\n            () {\n          context.pop();\n        });\n      } else {\n        mdShowAlert(\n            \"error\", responseObj[KKey.message] as String? ?? MSG.fail, () {});\n      }\n    }, failure: (err) async {\n      Globs.hideHUD();\n      mdShowAlert(\"error\", err.toString(), () {});\n    });\n  }\n}\n"
        }
    ]
}